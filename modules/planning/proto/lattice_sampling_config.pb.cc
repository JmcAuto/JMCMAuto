// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/lattice_sampling_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/planning/proto/lattice_sampling_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace jmc_auto {
namespace planning {
class LonConditionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LonCondition> {
} _LonCondition_default_instance_;
class LatConditionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LatCondition> {
} _LatCondition_default_instance_;
class TStrategyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TStrategy> {
} _TStrategy_default_instance_;
class SStrategyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SStrategy> {
} _SStrategy_default_instance_;
class LonSampleConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LonSampleConfig> {
} _LonSampleConfig_default_instance_;
class LatSampleConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LatSampleConfig> {
} _LatSampleConfig_default_instance_;
class LatticeSamplingConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LatticeSamplingConfig> {
} _LatticeSamplingConfig_default_instance_;

namespace protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonCondition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonCondition, s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonCondition, ds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonCondition, dds_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatCondition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatCondition, l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatCondition, dl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatCondition, ddl_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStrategy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStrategy, t_markers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStrategy, t_step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStrategy, strategy_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SStrategy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SStrategy, s_markers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SStrategy, s_step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SStrategy, strategy_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonSampleConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonSampleConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonSampleConfig, lon_end_condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonSampleConfig, t_strategy_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatSampleConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatSampleConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatSampleConfig, lat_end_condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatSampleConfig, s_strategy_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatticeSamplingConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatticeSamplingConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatticeSamplingConfig, lon_sample_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatticeSamplingConfig, lat_sample_config_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(LonCondition)},
  { 11, 19, sizeof(LatCondition)},
  { 22, 30, sizeof(TStrategy)},
  { 33, 41, sizeof(SStrategy)},
  { 44, 51, sizeof(LonSampleConfig)},
  { 53, 60, sizeof(LatSampleConfig)},
  { 62, 69, sizeof(LatticeSamplingConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LonCondition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LatCondition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TStrategy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SStrategy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LonSampleConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LatSampleConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LatticeSamplingConfig_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/planning/proto/lattice_sampling_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _LonCondition_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _LatCondition_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TStrategy_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SStrategy_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _LonSampleConfig_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _LatSampleConfig_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _LatticeSamplingConfig_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _LonCondition_default_instance_.DefaultConstruct();
  _LatCondition_default_instance_.DefaultConstruct();
  _TStrategy_default_instance_.DefaultConstruct();
  _SStrategy_default_instance_.DefaultConstruct();
  _LonSampleConfig_default_instance_.DefaultConstruct();
  _LatSampleConfig_default_instance_.DefaultConstruct();
  _LatticeSamplingConfig_default_instance_.DefaultConstruct();
  _LonSampleConfig_default_instance_.get_mutable()->lon_end_condition_ = const_cast< ::jmc_auto::planning::LonCondition*>(
      ::jmc_auto::planning::LonCondition::internal_default_instance());
  _LonSampleConfig_default_instance_.get_mutable()->t_strategy_ = const_cast< ::jmc_auto::planning::TStrategy*>(
      ::jmc_auto::planning::TStrategy::internal_default_instance());
  _LatSampleConfig_default_instance_.get_mutable()->lat_end_condition_ = const_cast< ::jmc_auto::planning::LatCondition*>(
      ::jmc_auto::planning::LatCondition::internal_default_instance());
  _LatSampleConfig_default_instance_.get_mutable()->s_strategy_ = const_cast< ::jmc_auto::planning::SStrategy*>(
      ::jmc_auto::planning::SStrategy::internal_default_instance());
  _LatticeSamplingConfig_default_instance_.get_mutable()->lon_sample_config_ = const_cast< ::jmc_auto::planning::LonSampleConfig*>(
      ::jmc_auto::planning::LonSampleConfig::internal_default_instance());
  _LatticeSamplingConfig_default_instance_.get_mutable()->lat_sample_config_ = const_cast< ::jmc_auto::planning::LatSampleConfig*>(
      ::jmc_auto::planning::LatSampleConfig::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n4modules/planning/proto/lattice_samplin"
      "g_config.proto\022\021jmc_auto.planning\";\n\014Lon"
      "Condition\022\014\n\001s\030\001 \001(\001:\0010\022\r\n\002ds\030\002 \001(\001:\0010\022\016"
      "\n\003dds\030\003 \001(\001:\0010\";\n\014LatCondition\022\014\n\001l\030\001 \001("
      "\001:\0010\022\r\n\002dl\030\002 \001(\001:\0010\022\016\n\003ddl\030\003 \001(\001:\0010\"E\n\tT"
      "Strategy\022\021\n\tt_markers\030\001 \003(\001\022\023\n\006t_step\030\002 "
      "\001(\001:\0030.5\022\020\n\010strategy\030\003 \001(\t\"E\n\tSStrategy\022"
      "\021\n\ts_markers\030\001 \003(\001\022\023\n\006s_step\030\002 \001(\001:\0030.5\022"
      "\020\n\010strategy\030\003 \001(\t\"\177\n\017LonSampleConfig\022:\n\021"
      "lon_end_condition\030\001 \001(\0132\037.jmc_auto.plann"
      "ing.LonCondition\0220\n\nt_strategy\030\002 \001(\0132\034.j"
      "mc_auto.planning.TStrategy\"\177\n\017LatSampleC"
      "onfig\022:\n\021lat_end_condition\030\001 \001(\0132\037.jmc_a"
      "uto.planning.LatCondition\0220\n\ns_strategy\030"
      "\002 \001(\0132\034.jmc_auto.planning.SStrategy\"\225\001\n\025"
      "LatticeSamplingConfig\022=\n\021lon_sample_conf"
      "ig\030\001 \001(\0132\".jmc_auto.planning.LonSampleCo"
      "nfig\022=\n\021lat_sample_config\030\002 \001(\0132\".jmc_au"
      "to.planning.LatSampleConfig"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 747);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/planning/proto/lattice_sampling_config.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LonCondition::kSFieldNumber;
const int LonCondition::kDsFieldNumber;
const int LonCondition::kDdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LonCondition::LonCondition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.planning.LonCondition)
}
LonCondition::LonCondition(const LonCondition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&s_, &from.s_,
    reinterpret_cast<char*>(&dds_) -
    reinterpret_cast<char*>(&s_) + sizeof(dds_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.planning.LonCondition)
}

void LonCondition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&s_, 0, reinterpret_cast<char*>(&dds_) -
    reinterpret_cast<char*>(&s_) + sizeof(dds_));
}

LonCondition::~LonCondition() {
  // @@protoc_insertion_point(destructor:jmc_auto.planning.LonCondition)
  SharedDtor();
}

void LonCondition::SharedDtor() {
}

void LonCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LonCondition::descriptor() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LonCondition& LonCondition::default_instance() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

LonCondition* LonCondition::New(::google::protobuf::Arena* arena) const {
  LonCondition* n = new LonCondition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LonCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.planning.LonCondition)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&s_, 0, reinterpret_cast<char*>(&dds_) -
      reinterpret_cast<char*>(&s_) + sizeof(dds_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LonCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.planning.LonCondition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double s = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ds = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_ds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double dds = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_dds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.planning.LonCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.planning.LonCondition)
  return false;
#undef DO_
}

void LonCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.planning.LonCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double s = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->s(), output);
  }

  // optional double ds = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ds(), output);
  }

  // optional double dds = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dds(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.planning.LonCondition)
}

::google::protobuf::uint8* LonCondition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.planning.LonCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double s = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->s(), target);
  }

  // optional double ds = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ds(), target);
  }

  // optional double dds = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dds(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.planning.LonCondition)
  return target;
}

size_t LonCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.planning.LonCondition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional double s = 1 [default = 0];
    if (has_s()) {
      total_size += 1 + 8;
    }

    // optional double ds = 2 [default = 0];
    if (has_ds()) {
      total_size += 1 + 8;
    }

    // optional double dds = 3 [default = 0];
    if (has_dds()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LonCondition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.planning.LonCondition)
  GOOGLE_DCHECK_NE(&from, this);
  const LonCondition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LonCondition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.planning.LonCondition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.planning.LonCondition)
    MergeFrom(*source);
  }
}

void LonCondition::MergeFrom(const LonCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.planning.LonCondition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      s_ = from.s_;
    }
    if (cached_has_bits & 0x00000002u) {
      ds_ = from.ds_;
    }
    if (cached_has_bits & 0x00000004u) {
      dds_ = from.dds_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LonCondition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.planning.LonCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LonCondition::CopyFrom(const LonCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.planning.LonCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LonCondition::IsInitialized() const {
  return true;
}

void LonCondition::Swap(LonCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LonCondition::InternalSwap(LonCondition* other) {
  std::swap(s_, other->s_);
  std::swap(ds_, other->ds_);
  std::swap(dds_, other->dds_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LonCondition::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LonCondition

// optional double s = 1 [default = 0];
bool LonCondition::has_s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LonCondition::set_has_s() {
  _has_bits_[0] |= 0x00000001u;
}
void LonCondition::clear_has_s() {
  _has_bits_[0] &= ~0x00000001u;
}
void LonCondition::clear_s() {
  s_ = 0;
  clear_has_s();
}
double LonCondition::s() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LonCondition.s)
  return s_;
}
void LonCondition::set_s(double value) {
  set_has_s();
  s_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.LonCondition.s)
}

// optional double ds = 2 [default = 0];
bool LonCondition::has_ds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LonCondition::set_has_ds() {
  _has_bits_[0] |= 0x00000002u;
}
void LonCondition::clear_has_ds() {
  _has_bits_[0] &= ~0x00000002u;
}
void LonCondition::clear_ds() {
  ds_ = 0;
  clear_has_ds();
}
double LonCondition::ds() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LonCondition.ds)
  return ds_;
}
void LonCondition::set_ds(double value) {
  set_has_ds();
  ds_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.LonCondition.ds)
}

// optional double dds = 3 [default = 0];
bool LonCondition::has_dds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LonCondition::set_has_dds() {
  _has_bits_[0] |= 0x00000004u;
}
void LonCondition::clear_has_dds() {
  _has_bits_[0] &= ~0x00000004u;
}
void LonCondition::clear_dds() {
  dds_ = 0;
  clear_has_dds();
}
double LonCondition::dds() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LonCondition.dds)
  return dds_;
}
void LonCondition::set_dds(double value) {
  set_has_dds();
  dds_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.LonCondition.dds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatCondition::kLFieldNumber;
const int LatCondition::kDlFieldNumber;
const int LatCondition::kDdlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatCondition::LatCondition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.planning.LatCondition)
}
LatCondition::LatCondition(const LatCondition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&l_, &from.l_,
    reinterpret_cast<char*>(&ddl_) -
    reinterpret_cast<char*>(&l_) + sizeof(ddl_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.planning.LatCondition)
}

void LatCondition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&l_, 0, reinterpret_cast<char*>(&ddl_) -
    reinterpret_cast<char*>(&l_) + sizeof(ddl_));
}

LatCondition::~LatCondition() {
  // @@protoc_insertion_point(destructor:jmc_auto.planning.LatCondition)
  SharedDtor();
}

void LatCondition::SharedDtor() {
}

void LatCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatCondition::descriptor() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatCondition& LatCondition::default_instance() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

LatCondition* LatCondition::New(::google::protobuf::Arena* arena) const {
  LatCondition* n = new LatCondition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LatCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.planning.LatCondition)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&l_, 0, reinterpret_cast<char*>(&ddl_) -
      reinterpret_cast<char*>(&l_) + sizeof(ddl_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LatCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.planning.LatCondition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double l = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_l();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double dl = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_dl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ddl = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_ddl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ddl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.planning.LatCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.planning.LatCondition)
  return false;
#undef DO_
}

void LatCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.planning.LatCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double l = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->l(), output);
  }

  // optional double dl = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->dl(), output);
  }

  // optional double ddl = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ddl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.planning.LatCondition)
}

::google::protobuf::uint8* LatCondition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.planning.LatCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double l = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->l(), target);
  }

  // optional double dl = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->dl(), target);
  }

  // optional double ddl = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->ddl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.planning.LatCondition)
  return target;
}

size_t LatCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.planning.LatCondition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional double l = 1 [default = 0];
    if (has_l()) {
      total_size += 1 + 8;
    }

    // optional double dl = 2 [default = 0];
    if (has_dl()) {
      total_size += 1 + 8;
    }

    // optional double ddl = 3 [default = 0];
    if (has_ddl()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatCondition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.planning.LatCondition)
  GOOGLE_DCHECK_NE(&from, this);
  const LatCondition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatCondition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.planning.LatCondition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.planning.LatCondition)
    MergeFrom(*source);
  }
}

void LatCondition::MergeFrom(const LatCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.planning.LatCondition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      l_ = from.l_;
    }
    if (cached_has_bits & 0x00000002u) {
      dl_ = from.dl_;
    }
    if (cached_has_bits & 0x00000004u) {
      ddl_ = from.ddl_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LatCondition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.planning.LatCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatCondition::CopyFrom(const LatCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.planning.LatCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatCondition::IsInitialized() const {
  return true;
}

void LatCondition::Swap(LatCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatCondition::InternalSwap(LatCondition* other) {
  std::swap(l_, other->l_);
  std::swap(dl_, other->dl_);
  std::swap(ddl_, other->ddl_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatCondition::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LatCondition

// optional double l = 1 [default = 0];
bool LatCondition::has_l() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LatCondition::set_has_l() {
  _has_bits_[0] |= 0x00000001u;
}
void LatCondition::clear_has_l() {
  _has_bits_[0] &= ~0x00000001u;
}
void LatCondition::clear_l() {
  l_ = 0;
  clear_has_l();
}
double LatCondition::l() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LatCondition.l)
  return l_;
}
void LatCondition::set_l(double value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.LatCondition.l)
}

// optional double dl = 2 [default = 0];
bool LatCondition::has_dl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LatCondition::set_has_dl() {
  _has_bits_[0] |= 0x00000002u;
}
void LatCondition::clear_has_dl() {
  _has_bits_[0] &= ~0x00000002u;
}
void LatCondition::clear_dl() {
  dl_ = 0;
  clear_has_dl();
}
double LatCondition::dl() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LatCondition.dl)
  return dl_;
}
void LatCondition::set_dl(double value) {
  set_has_dl();
  dl_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.LatCondition.dl)
}

// optional double ddl = 3 [default = 0];
bool LatCondition::has_ddl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LatCondition::set_has_ddl() {
  _has_bits_[0] |= 0x00000004u;
}
void LatCondition::clear_has_ddl() {
  _has_bits_[0] &= ~0x00000004u;
}
void LatCondition::clear_ddl() {
  ddl_ = 0;
  clear_has_ddl();
}
double LatCondition::ddl() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LatCondition.ddl)
  return ddl_;
}
void LatCondition::set_ddl(double value) {
  set_has_ddl();
  ddl_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.LatCondition.ddl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TStrategy::kTMarkersFieldNumber;
const int TStrategy::kTStepFieldNumber;
const int TStrategy::kStrategyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TStrategy::TStrategy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.planning.TStrategy)
}
TStrategy::TStrategy(const TStrategy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      t_markers_(from.t_markers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strategy()) {
    strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategy_);
  }
  t_step_ = from.t_step_;
  // @@protoc_insertion_point(copy_constructor:jmc_auto.planning.TStrategy)
}

void TStrategy::SharedCtor() {
  _cached_size_ = 0;
  strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t_step_ = 0.5;
}

TStrategy::~TStrategy() {
  // @@protoc_insertion_point(destructor:jmc_auto.planning.TStrategy)
  SharedDtor();
}

void TStrategy::SharedDtor() {
  strategy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TStrategy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TStrategy::descriptor() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TStrategy& TStrategy::default_instance() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

TStrategy* TStrategy::New(::google::protobuf::Arena* arena) const {
  TStrategy* n = new TStrategy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.planning.TStrategy)
  t_markers_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_strategy()) {
      GOOGLE_DCHECK(!strategy_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*strategy_.UnsafeRawStringPointer())->clear();
    }
    t_step_ = 0.5;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TStrategy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.planning.TStrategy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double t_markers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_t_markers())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_t_markers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double t_step = 2 [default = 0.5];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_t_step();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string strategy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strategy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strategy().data(), this->strategy().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jmc_auto.planning.TStrategy.strategy");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.planning.TStrategy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.planning.TStrategy)
  return false;
#undef DO_
}

void TStrategy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.planning.TStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t_markers = 1;
  for (int i = 0, n = this->t_markers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->t_markers(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional double t_step = 2 [default = 0.5];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->t_step(), output);
  }

  // optional string strategy = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strategy().data(), this->strategy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.planning.TStrategy.strategy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strategy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.planning.TStrategy)
}

::google::protobuf::uint8* TStrategy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.planning.TStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t_markers = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->t_markers_, target);

  cached_has_bits = _has_bits_[0];
  // optional double t_step = 2 [default = 0.5];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->t_step(), target);
  }

  // optional string strategy = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strategy().data(), this->strategy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.planning.TStrategy.strategy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strategy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.planning.TStrategy)
  return target;
}

size_t TStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.planning.TStrategy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated double t_markers = 1;
  {
    unsigned int count = this->t_markers_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->t_markers_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string strategy = 3;
    if (has_strategy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strategy());
    }

    // optional double t_step = 2 [default = 0.5];
    if (has_t_step()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TStrategy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.planning.TStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  const TStrategy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TStrategy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.planning.TStrategy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.planning.TStrategy)
    MergeFrom(*source);
  }
}

void TStrategy::MergeFrom(const TStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.planning.TStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  t_markers_.MergeFrom(from.t_markers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_strategy();
      strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategy_);
    }
    if (cached_has_bits & 0x00000002u) {
      t_step_ = from.t_step_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TStrategy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.planning.TStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TStrategy::CopyFrom(const TStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.planning.TStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TStrategy::IsInitialized() const {
  return true;
}

void TStrategy::Swap(TStrategy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TStrategy::InternalSwap(TStrategy* other) {
  t_markers_.InternalSwap(&other->t_markers_);
  strategy_.Swap(&other->strategy_);
  std::swap(t_step_, other->t_step_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TStrategy::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TStrategy

// repeated double t_markers = 1;
int TStrategy::t_markers_size() const {
  return t_markers_.size();
}
void TStrategy::clear_t_markers() {
  t_markers_.Clear();
}
double TStrategy::t_markers(int index) const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.TStrategy.t_markers)
  return t_markers_.Get(index);
}
void TStrategy::set_t_markers(int index, double value) {
  t_markers_.Set(index, value);
  // @@protoc_insertion_point(field_set:jmc_auto.planning.TStrategy.t_markers)
}
void TStrategy::add_t_markers(double value) {
  t_markers_.Add(value);
  // @@protoc_insertion_point(field_add:jmc_auto.planning.TStrategy.t_markers)
}
const ::google::protobuf::RepeatedField< double >&
TStrategy::t_markers() const {
  // @@protoc_insertion_point(field_list:jmc_auto.planning.TStrategy.t_markers)
  return t_markers_;
}
::google::protobuf::RepeatedField< double >*
TStrategy::mutable_t_markers() {
  // @@protoc_insertion_point(field_mutable_list:jmc_auto.planning.TStrategy.t_markers)
  return &t_markers_;
}

// optional double t_step = 2 [default = 0.5];
bool TStrategy::has_t_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TStrategy::set_has_t_step() {
  _has_bits_[0] |= 0x00000002u;
}
void TStrategy::clear_has_t_step() {
  _has_bits_[0] &= ~0x00000002u;
}
void TStrategy::clear_t_step() {
  t_step_ = 0.5;
  clear_has_t_step();
}
double TStrategy::t_step() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.TStrategy.t_step)
  return t_step_;
}
void TStrategy::set_t_step(double value) {
  set_has_t_step();
  t_step_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.TStrategy.t_step)
}

// optional string strategy = 3;
bool TStrategy::has_strategy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TStrategy::set_has_strategy() {
  _has_bits_[0] |= 0x00000001u;
}
void TStrategy::clear_has_strategy() {
  _has_bits_[0] &= ~0x00000001u;
}
void TStrategy::clear_strategy() {
  strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strategy();
}
const ::std::string& TStrategy::strategy() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.TStrategy.strategy)
  return strategy_.GetNoArena();
}
void TStrategy::set_strategy(const ::std::string& value) {
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jmc_auto.planning.TStrategy.strategy)
}
#if LANG_CXX11
void TStrategy::set_strategy(::std::string&& value) {
  set_has_strategy();
  strategy_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jmc_auto.planning.TStrategy.strategy)
}
#endif
void TStrategy::set_strategy(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jmc_auto.planning.TStrategy.strategy)
}
void TStrategy::set_strategy(const char* value, size_t size) {
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jmc_auto.planning.TStrategy.strategy)
}
::std::string* TStrategy::mutable_strategy() {
  set_has_strategy();
  // @@protoc_insertion_point(field_mutable:jmc_auto.planning.TStrategy.strategy)
  return strategy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TStrategy::release_strategy() {
  // @@protoc_insertion_point(field_release:jmc_auto.planning.TStrategy.strategy)
  clear_has_strategy();
  return strategy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TStrategy::set_allocated_strategy(::std::string* strategy) {
  if (strategy != NULL) {
    set_has_strategy();
  } else {
    clear_has_strategy();
  }
  strategy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strategy);
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.planning.TStrategy.strategy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SStrategy::kSMarkersFieldNumber;
const int SStrategy::kSStepFieldNumber;
const int SStrategy::kStrategyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SStrategy::SStrategy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.planning.SStrategy)
}
SStrategy::SStrategy(const SStrategy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      s_markers_(from.s_markers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strategy()) {
    strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategy_);
  }
  s_step_ = from.s_step_;
  // @@protoc_insertion_point(copy_constructor:jmc_auto.planning.SStrategy)
}

void SStrategy::SharedCtor() {
  _cached_size_ = 0;
  strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_step_ = 0.5;
}

SStrategy::~SStrategy() {
  // @@protoc_insertion_point(destructor:jmc_auto.planning.SStrategy)
  SharedDtor();
}

void SStrategy::SharedDtor() {
  strategy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SStrategy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SStrategy::descriptor() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SStrategy& SStrategy::default_instance() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

SStrategy* SStrategy::New(::google::protobuf::Arena* arena) const {
  SStrategy* n = new SStrategy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.planning.SStrategy)
  s_markers_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_strategy()) {
      GOOGLE_DCHECK(!strategy_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*strategy_.UnsafeRawStringPointer())->clear();
    }
    s_step_ = 0.5;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SStrategy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.planning.SStrategy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double s_markers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_s_markers())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_s_markers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double s_step = 2 [default = 0.5];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_s_step();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string strategy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strategy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strategy().data(), this->strategy().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jmc_auto.planning.SStrategy.strategy");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.planning.SStrategy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.planning.SStrategy)
  return false;
#undef DO_
}

void SStrategy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.planning.SStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double s_markers = 1;
  for (int i = 0, n = this->s_markers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->s_markers(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional double s_step = 2 [default = 0.5];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->s_step(), output);
  }

  // optional string strategy = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strategy().data(), this->strategy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.planning.SStrategy.strategy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strategy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.planning.SStrategy)
}

::google::protobuf::uint8* SStrategy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.planning.SStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double s_markers = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->s_markers_, target);

  cached_has_bits = _has_bits_[0];
  // optional double s_step = 2 [default = 0.5];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->s_step(), target);
  }

  // optional string strategy = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strategy().data(), this->strategy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.planning.SStrategy.strategy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strategy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.planning.SStrategy)
  return target;
}

size_t SStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.planning.SStrategy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated double s_markers = 1;
  {
    unsigned int count = this->s_markers_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->s_markers_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string strategy = 3;
    if (has_strategy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strategy());
    }

    // optional double s_step = 2 [default = 0.5];
    if (has_s_step()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SStrategy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.planning.SStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  const SStrategy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SStrategy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.planning.SStrategy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.planning.SStrategy)
    MergeFrom(*source);
  }
}

void SStrategy::MergeFrom(const SStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.planning.SStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  s_markers_.MergeFrom(from.s_markers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_strategy();
      strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategy_);
    }
    if (cached_has_bits & 0x00000002u) {
      s_step_ = from.s_step_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SStrategy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.planning.SStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SStrategy::CopyFrom(const SStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.planning.SStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SStrategy::IsInitialized() const {
  return true;
}

void SStrategy::Swap(SStrategy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SStrategy::InternalSwap(SStrategy* other) {
  s_markers_.InternalSwap(&other->s_markers_);
  strategy_.Swap(&other->strategy_);
  std::swap(s_step_, other->s_step_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SStrategy::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SStrategy

// repeated double s_markers = 1;
int SStrategy::s_markers_size() const {
  return s_markers_.size();
}
void SStrategy::clear_s_markers() {
  s_markers_.Clear();
}
double SStrategy::s_markers(int index) const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.SStrategy.s_markers)
  return s_markers_.Get(index);
}
void SStrategy::set_s_markers(int index, double value) {
  s_markers_.Set(index, value);
  // @@protoc_insertion_point(field_set:jmc_auto.planning.SStrategy.s_markers)
}
void SStrategy::add_s_markers(double value) {
  s_markers_.Add(value);
  // @@protoc_insertion_point(field_add:jmc_auto.planning.SStrategy.s_markers)
}
const ::google::protobuf::RepeatedField< double >&
SStrategy::s_markers() const {
  // @@protoc_insertion_point(field_list:jmc_auto.planning.SStrategy.s_markers)
  return s_markers_;
}
::google::protobuf::RepeatedField< double >*
SStrategy::mutable_s_markers() {
  // @@protoc_insertion_point(field_mutable_list:jmc_auto.planning.SStrategy.s_markers)
  return &s_markers_;
}

// optional double s_step = 2 [default = 0.5];
bool SStrategy::has_s_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SStrategy::set_has_s_step() {
  _has_bits_[0] |= 0x00000002u;
}
void SStrategy::clear_has_s_step() {
  _has_bits_[0] &= ~0x00000002u;
}
void SStrategy::clear_s_step() {
  s_step_ = 0.5;
  clear_has_s_step();
}
double SStrategy::s_step() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.SStrategy.s_step)
  return s_step_;
}
void SStrategy::set_s_step(double value) {
  set_has_s_step();
  s_step_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.SStrategy.s_step)
}

// optional string strategy = 3;
bool SStrategy::has_strategy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SStrategy::set_has_strategy() {
  _has_bits_[0] |= 0x00000001u;
}
void SStrategy::clear_has_strategy() {
  _has_bits_[0] &= ~0x00000001u;
}
void SStrategy::clear_strategy() {
  strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strategy();
}
const ::std::string& SStrategy::strategy() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.SStrategy.strategy)
  return strategy_.GetNoArena();
}
void SStrategy::set_strategy(const ::std::string& value) {
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jmc_auto.planning.SStrategy.strategy)
}
#if LANG_CXX11
void SStrategy::set_strategy(::std::string&& value) {
  set_has_strategy();
  strategy_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jmc_auto.planning.SStrategy.strategy)
}
#endif
void SStrategy::set_strategy(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jmc_auto.planning.SStrategy.strategy)
}
void SStrategy::set_strategy(const char* value, size_t size) {
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jmc_auto.planning.SStrategy.strategy)
}
::std::string* SStrategy::mutable_strategy() {
  set_has_strategy();
  // @@protoc_insertion_point(field_mutable:jmc_auto.planning.SStrategy.strategy)
  return strategy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SStrategy::release_strategy() {
  // @@protoc_insertion_point(field_release:jmc_auto.planning.SStrategy.strategy)
  clear_has_strategy();
  return strategy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SStrategy::set_allocated_strategy(::std::string* strategy) {
  if (strategy != NULL) {
    set_has_strategy();
  } else {
    clear_has_strategy();
  }
  strategy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strategy);
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.planning.SStrategy.strategy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LonSampleConfig::kLonEndConditionFieldNumber;
const int LonSampleConfig::kTStrategyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LonSampleConfig::LonSampleConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.planning.LonSampleConfig)
}
LonSampleConfig::LonSampleConfig(const LonSampleConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lon_end_condition()) {
    lon_end_condition_ = new ::jmc_auto::planning::LonCondition(*from.lon_end_condition_);
  } else {
    lon_end_condition_ = NULL;
  }
  if (from.has_t_strategy()) {
    t_strategy_ = new ::jmc_auto::planning::TStrategy(*from.t_strategy_);
  } else {
    t_strategy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:jmc_auto.planning.LonSampleConfig)
}

void LonSampleConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lon_end_condition_, 0, reinterpret_cast<char*>(&t_strategy_) -
    reinterpret_cast<char*>(&lon_end_condition_) + sizeof(t_strategy_));
}

LonSampleConfig::~LonSampleConfig() {
  // @@protoc_insertion_point(destructor:jmc_auto.planning.LonSampleConfig)
  SharedDtor();
}

void LonSampleConfig::SharedDtor() {
  if (this != internal_default_instance()) {
    delete lon_end_condition_;
  }
  if (this != internal_default_instance()) {
    delete t_strategy_;
  }
}

void LonSampleConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LonSampleConfig::descriptor() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LonSampleConfig& LonSampleConfig::default_instance() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

LonSampleConfig* LonSampleConfig::New(::google::protobuf::Arena* arena) const {
  LonSampleConfig* n = new LonSampleConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LonSampleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.planning.LonSampleConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lon_end_condition()) {
      GOOGLE_DCHECK(lon_end_condition_ != NULL);
      lon_end_condition_->::jmc_auto::planning::LonCondition::Clear();
    }
    if (has_t_strategy()) {
      GOOGLE_DCHECK(t_strategy_ != NULL);
      t_strategy_->::jmc_auto::planning::TStrategy::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LonSampleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.planning.LonSampleConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .jmc_auto.planning.LonCondition lon_end_condition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lon_end_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.planning.TStrategy t_strategy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_t_strategy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.planning.LonSampleConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.planning.LonSampleConfig)
  return false;
#undef DO_
}

void LonSampleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.planning.LonSampleConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.planning.LonCondition lon_end_condition = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lon_end_condition_, output);
  }

  // optional .jmc_auto.planning.TStrategy t_strategy = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->t_strategy_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.planning.LonSampleConfig)
}

::google::protobuf::uint8* LonSampleConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.planning.LonSampleConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.planning.LonCondition lon_end_condition = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lon_end_condition_, deterministic, target);
  }

  // optional .jmc_auto.planning.TStrategy t_strategy = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->t_strategy_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.planning.LonSampleConfig)
  return target;
}

size_t LonSampleConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.planning.LonSampleConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .jmc_auto.planning.LonCondition lon_end_condition = 1;
    if (has_lon_end_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lon_end_condition_);
    }

    // optional .jmc_auto.planning.TStrategy t_strategy = 2;
    if (has_t_strategy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->t_strategy_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LonSampleConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.planning.LonSampleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LonSampleConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LonSampleConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.planning.LonSampleConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.planning.LonSampleConfig)
    MergeFrom(*source);
  }
}

void LonSampleConfig::MergeFrom(const LonSampleConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.planning.LonSampleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_lon_end_condition()->::jmc_auto::planning::LonCondition::MergeFrom(from.lon_end_condition());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_t_strategy()->::jmc_auto::planning::TStrategy::MergeFrom(from.t_strategy());
    }
  }
}

void LonSampleConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.planning.LonSampleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LonSampleConfig::CopyFrom(const LonSampleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.planning.LonSampleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LonSampleConfig::IsInitialized() const {
  return true;
}

void LonSampleConfig::Swap(LonSampleConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LonSampleConfig::InternalSwap(LonSampleConfig* other) {
  std::swap(lon_end_condition_, other->lon_end_condition_);
  std::swap(t_strategy_, other->t_strategy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LonSampleConfig::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LonSampleConfig

// optional .jmc_auto.planning.LonCondition lon_end_condition = 1;
bool LonSampleConfig::has_lon_end_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LonSampleConfig::set_has_lon_end_condition() {
  _has_bits_[0] |= 0x00000001u;
}
void LonSampleConfig::clear_has_lon_end_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
void LonSampleConfig::clear_lon_end_condition() {
  if (lon_end_condition_ != NULL) lon_end_condition_->::jmc_auto::planning::LonCondition::Clear();
  clear_has_lon_end_condition();
}
const ::jmc_auto::planning::LonCondition& LonSampleConfig::lon_end_condition() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LonSampleConfig.lon_end_condition)
  return lon_end_condition_ != NULL ? *lon_end_condition_
                         : *::jmc_auto::planning::LonCondition::internal_default_instance();
}
::jmc_auto::planning::LonCondition* LonSampleConfig::mutable_lon_end_condition() {
  set_has_lon_end_condition();
  if (lon_end_condition_ == NULL) {
    lon_end_condition_ = new ::jmc_auto::planning::LonCondition;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.planning.LonSampleConfig.lon_end_condition)
  return lon_end_condition_;
}
::jmc_auto::planning::LonCondition* LonSampleConfig::release_lon_end_condition() {
  // @@protoc_insertion_point(field_release:jmc_auto.planning.LonSampleConfig.lon_end_condition)
  clear_has_lon_end_condition();
  ::jmc_auto::planning::LonCondition* temp = lon_end_condition_;
  lon_end_condition_ = NULL;
  return temp;
}
void LonSampleConfig::set_allocated_lon_end_condition(::jmc_auto::planning::LonCondition* lon_end_condition) {
  delete lon_end_condition_;
  lon_end_condition_ = lon_end_condition;
  if (lon_end_condition) {
    set_has_lon_end_condition();
  } else {
    clear_has_lon_end_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.planning.LonSampleConfig.lon_end_condition)
}

// optional .jmc_auto.planning.TStrategy t_strategy = 2;
bool LonSampleConfig::has_t_strategy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LonSampleConfig::set_has_t_strategy() {
  _has_bits_[0] |= 0x00000002u;
}
void LonSampleConfig::clear_has_t_strategy() {
  _has_bits_[0] &= ~0x00000002u;
}
void LonSampleConfig::clear_t_strategy() {
  if (t_strategy_ != NULL) t_strategy_->::jmc_auto::planning::TStrategy::Clear();
  clear_has_t_strategy();
}
const ::jmc_auto::planning::TStrategy& LonSampleConfig::t_strategy() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LonSampleConfig.t_strategy)
  return t_strategy_ != NULL ? *t_strategy_
                         : *::jmc_auto::planning::TStrategy::internal_default_instance();
}
::jmc_auto::planning::TStrategy* LonSampleConfig::mutable_t_strategy() {
  set_has_t_strategy();
  if (t_strategy_ == NULL) {
    t_strategy_ = new ::jmc_auto::planning::TStrategy;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.planning.LonSampleConfig.t_strategy)
  return t_strategy_;
}
::jmc_auto::planning::TStrategy* LonSampleConfig::release_t_strategy() {
  // @@protoc_insertion_point(field_release:jmc_auto.planning.LonSampleConfig.t_strategy)
  clear_has_t_strategy();
  ::jmc_auto::planning::TStrategy* temp = t_strategy_;
  t_strategy_ = NULL;
  return temp;
}
void LonSampleConfig::set_allocated_t_strategy(::jmc_auto::planning::TStrategy* t_strategy) {
  delete t_strategy_;
  t_strategy_ = t_strategy;
  if (t_strategy) {
    set_has_t_strategy();
  } else {
    clear_has_t_strategy();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.planning.LonSampleConfig.t_strategy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatSampleConfig::kLatEndConditionFieldNumber;
const int LatSampleConfig::kSStrategyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatSampleConfig::LatSampleConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.planning.LatSampleConfig)
}
LatSampleConfig::LatSampleConfig(const LatSampleConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lat_end_condition()) {
    lat_end_condition_ = new ::jmc_auto::planning::LatCondition(*from.lat_end_condition_);
  } else {
    lat_end_condition_ = NULL;
  }
  if (from.has_s_strategy()) {
    s_strategy_ = new ::jmc_auto::planning::SStrategy(*from.s_strategy_);
  } else {
    s_strategy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:jmc_auto.planning.LatSampleConfig)
}

void LatSampleConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lat_end_condition_, 0, reinterpret_cast<char*>(&s_strategy_) -
    reinterpret_cast<char*>(&lat_end_condition_) + sizeof(s_strategy_));
}

LatSampleConfig::~LatSampleConfig() {
  // @@protoc_insertion_point(destructor:jmc_auto.planning.LatSampleConfig)
  SharedDtor();
}

void LatSampleConfig::SharedDtor() {
  if (this != internal_default_instance()) {
    delete lat_end_condition_;
  }
  if (this != internal_default_instance()) {
    delete s_strategy_;
  }
}

void LatSampleConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatSampleConfig::descriptor() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatSampleConfig& LatSampleConfig::default_instance() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

LatSampleConfig* LatSampleConfig::New(::google::protobuf::Arena* arena) const {
  LatSampleConfig* n = new LatSampleConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LatSampleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.planning.LatSampleConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lat_end_condition()) {
      GOOGLE_DCHECK(lat_end_condition_ != NULL);
      lat_end_condition_->::jmc_auto::planning::LatCondition::Clear();
    }
    if (has_s_strategy()) {
      GOOGLE_DCHECK(s_strategy_ != NULL);
      s_strategy_->::jmc_auto::planning::SStrategy::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LatSampleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.planning.LatSampleConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .jmc_auto.planning.LatCondition lat_end_condition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lat_end_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.planning.SStrategy s_strategy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_s_strategy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.planning.LatSampleConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.planning.LatSampleConfig)
  return false;
#undef DO_
}

void LatSampleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.planning.LatSampleConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.planning.LatCondition lat_end_condition = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lat_end_condition_, output);
  }

  // optional .jmc_auto.planning.SStrategy s_strategy = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->s_strategy_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.planning.LatSampleConfig)
}

::google::protobuf::uint8* LatSampleConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.planning.LatSampleConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.planning.LatCondition lat_end_condition = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lat_end_condition_, deterministic, target);
  }

  // optional .jmc_auto.planning.SStrategy s_strategy = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->s_strategy_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.planning.LatSampleConfig)
  return target;
}

size_t LatSampleConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.planning.LatSampleConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .jmc_auto.planning.LatCondition lat_end_condition = 1;
    if (has_lat_end_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lat_end_condition_);
    }

    // optional .jmc_auto.planning.SStrategy s_strategy = 2;
    if (has_s_strategy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->s_strategy_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatSampleConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.planning.LatSampleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LatSampleConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatSampleConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.planning.LatSampleConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.planning.LatSampleConfig)
    MergeFrom(*source);
  }
}

void LatSampleConfig::MergeFrom(const LatSampleConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.planning.LatSampleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_lat_end_condition()->::jmc_auto::planning::LatCondition::MergeFrom(from.lat_end_condition());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_s_strategy()->::jmc_auto::planning::SStrategy::MergeFrom(from.s_strategy());
    }
  }
}

void LatSampleConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.planning.LatSampleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatSampleConfig::CopyFrom(const LatSampleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.planning.LatSampleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatSampleConfig::IsInitialized() const {
  return true;
}

void LatSampleConfig::Swap(LatSampleConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatSampleConfig::InternalSwap(LatSampleConfig* other) {
  std::swap(lat_end_condition_, other->lat_end_condition_);
  std::swap(s_strategy_, other->s_strategy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatSampleConfig::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LatSampleConfig

// optional .jmc_auto.planning.LatCondition lat_end_condition = 1;
bool LatSampleConfig::has_lat_end_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LatSampleConfig::set_has_lat_end_condition() {
  _has_bits_[0] |= 0x00000001u;
}
void LatSampleConfig::clear_has_lat_end_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
void LatSampleConfig::clear_lat_end_condition() {
  if (lat_end_condition_ != NULL) lat_end_condition_->::jmc_auto::planning::LatCondition::Clear();
  clear_has_lat_end_condition();
}
const ::jmc_auto::planning::LatCondition& LatSampleConfig::lat_end_condition() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LatSampleConfig.lat_end_condition)
  return lat_end_condition_ != NULL ? *lat_end_condition_
                         : *::jmc_auto::planning::LatCondition::internal_default_instance();
}
::jmc_auto::planning::LatCondition* LatSampleConfig::mutable_lat_end_condition() {
  set_has_lat_end_condition();
  if (lat_end_condition_ == NULL) {
    lat_end_condition_ = new ::jmc_auto::planning::LatCondition;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.planning.LatSampleConfig.lat_end_condition)
  return lat_end_condition_;
}
::jmc_auto::planning::LatCondition* LatSampleConfig::release_lat_end_condition() {
  // @@protoc_insertion_point(field_release:jmc_auto.planning.LatSampleConfig.lat_end_condition)
  clear_has_lat_end_condition();
  ::jmc_auto::planning::LatCondition* temp = lat_end_condition_;
  lat_end_condition_ = NULL;
  return temp;
}
void LatSampleConfig::set_allocated_lat_end_condition(::jmc_auto::planning::LatCondition* lat_end_condition) {
  delete lat_end_condition_;
  lat_end_condition_ = lat_end_condition;
  if (lat_end_condition) {
    set_has_lat_end_condition();
  } else {
    clear_has_lat_end_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.planning.LatSampleConfig.lat_end_condition)
}

// optional .jmc_auto.planning.SStrategy s_strategy = 2;
bool LatSampleConfig::has_s_strategy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LatSampleConfig::set_has_s_strategy() {
  _has_bits_[0] |= 0x00000002u;
}
void LatSampleConfig::clear_has_s_strategy() {
  _has_bits_[0] &= ~0x00000002u;
}
void LatSampleConfig::clear_s_strategy() {
  if (s_strategy_ != NULL) s_strategy_->::jmc_auto::planning::SStrategy::Clear();
  clear_has_s_strategy();
}
const ::jmc_auto::planning::SStrategy& LatSampleConfig::s_strategy() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LatSampleConfig.s_strategy)
  return s_strategy_ != NULL ? *s_strategy_
                         : *::jmc_auto::planning::SStrategy::internal_default_instance();
}
::jmc_auto::planning::SStrategy* LatSampleConfig::mutable_s_strategy() {
  set_has_s_strategy();
  if (s_strategy_ == NULL) {
    s_strategy_ = new ::jmc_auto::planning::SStrategy;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.planning.LatSampleConfig.s_strategy)
  return s_strategy_;
}
::jmc_auto::planning::SStrategy* LatSampleConfig::release_s_strategy() {
  // @@protoc_insertion_point(field_release:jmc_auto.planning.LatSampleConfig.s_strategy)
  clear_has_s_strategy();
  ::jmc_auto::planning::SStrategy* temp = s_strategy_;
  s_strategy_ = NULL;
  return temp;
}
void LatSampleConfig::set_allocated_s_strategy(::jmc_auto::planning::SStrategy* s_strategy) {
  delete s_strategy_;
  s_strategy_ = s_strategy;
  if (s_strategy) {
    set_has_s_strategy();
  } else {
    clear_has_s_strategy();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.planning.LatSampleConfig.s_strategy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatticeSamplingConfig::kLonSampleConfigFieldNumber;
const int LatticeSamplingConfig::kLatSampleConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatticeSamplingConfig::LatticeSamplingConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.planning.LatticeSamplingConfig)
}
LatticeSamplingConfig::LatticeSamplingConfig(const LatticeSamplingConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lon_sample_config()) {
    lon_sample_config_ = new ::jmc_auto::planning::LonSampleConfig(*from.lon_sample_config_);
  } else {
    lon_sample_config_ = NULL;
  }
  if (from.has_lat_sample_config()) {
    lat_sample_config_ = new ::jmc_auto::planning::LatSampleConfig(*from.lat_sample_config_);
  } else {
    lat_sample_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:jmc_auto.planning.LatticeSamplingConfig)
}

void LatticeSamplingConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lon_sample_config_, 0, reinterpret_cast<char*>(&lat_sample_config_) -
    reinterpret_cast<char*>(&lon_sample_config_) + sizeof(lat_sample_config_));
}

LatticeSamplingConfig::~LatticeSamplingConfig() {
  // @@protoc_insertion_point(destructor:jmc_auto.planning.LatticeSamplingConfig)
  SharedDtor();
}

void LatticeSamplingConfig::SharedDtor() {
  if (this != internal_default_instance()) {
    delete lon_sample_config_;
  }
  if (this != internal_default_instance()) {
    delete lat_sample_config_;
  }
}

void LatticeSamplingConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatticeSamplingConfig::descriptor() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatticeSamplingConfig& LatticeSamplingConfig::default_instance() {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

LatticeSamplingConfig* LatticeSamplingConfig::New(::google::protobuf::Arena* arena) const {
  LatticeSamplingConfig* n = new LatticeSamplingConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LatticeSamplingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.planning.LatticeSamplingConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lon_sample_config()) {
      GOOGLE_DCHECK(lon_sample_config_ != NULL);
      lon_sample_config_->::jmc_auto::planning::LonSampleConfig::Clear();
    }
    if (has_lat_sample_config()) {
      GOOGLE_DCHECK(lat_sample_config_ != NULL);
      lat_sample_config_->::jmc_auto::planning::LatSampleConfig::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LatticeSamplingConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.planning.LatticeSamplingConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .jmc_auto.planning.LonSampleConfig lon_sample_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lon_sample_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.planning.LatSampleConfig lat_sample_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lat_sample_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.planning.LatticeSamplingConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.planning.LatticeSamplingConfig)
  return false;
#undef DO_
}

void LatticeSamplingConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.planning.LatticeSamplingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.planning.LonSampleConfig lon_sample_config = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lon_sample_config_, output);
  }

  // optional .jmc_auto.planning.LatSampleConfig lat_sample_config = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->lat_sample_config_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.planning.LatticeSamplingConfig)
}

::google::protobuf::uint8* LatticeSamplingConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.planning.LatticeSamplingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.planning.LonSampleConfig lon_sample_config = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lon_sample_config_, deterministic, target);
  }

  // optional .jmc_auto.planning.LatSampleConfig lat_sample_config = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->lat_sample_config_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.planning.LatticeSamplingConfig)
  return target;
}

size_t LatticeSamplingConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.planning.LatticeSamplingConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .jmc_auto.planning.LonSampleConfig lon_sample_config = 1;
    if (has_lon_sample_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lon_sample_config_);
    }

    // optional .jmc_auto.planning.LatSampleConfig lat_sample_config = 2;
    if (has_lat_sample_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lat_sample_config_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatticeSamplingConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.planning.LatticeSamplingConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LatticeSamplingConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatticeSamplingConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.planning.LatticeSamplingConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.planning.LatticeSamplingConfig)
    MergeFrom(*source);
  }
}

void LatticeSamplingConfig::MergeFrom(const LatticeSamplingConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.planning.LatticeSamplingConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_lon_sample_config()->::jmc_auto::planning::LonSampleConfig::MergeFrom(from.lon_sample_config());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_lat_sample_config()->::jmc_auto::planning::LatSampleConfig::MergeFrom(from.lat_sample_config());
    }
  }
}

void LatticeSamplingConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.planning.LatticeSamplingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatticeSamplingConfig::CopyFrom(const LatticeSamplingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.planning.LatticeSamplingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatticeSamplingConfig::IsInitialized() const {
  return true;
}

void LatticeSamplingConfig::Swap(LatticeSamplingConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatticeSamplingConfig::InternalSwap(LatticeSamplingConfig* other) {
  std::swap(lon_sample_config_, other->lon_sample_config_);
  std::swap(lat_sample_config_, other->lat_sample_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatticeSamplingConfig::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2flattice_5fsampling_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LatticeSamplingConfig

// optional .jmc_auto.planning.LonSampleConfig lon_sample_config = 1;
bool LatticeSamplingConfig::has_lon_sample_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LatticeSamplingConfig::set_has_lon_sample_config() {
  _has_bits_[0] |= 0x00000001u;
}
void LatticeSamplingConfig::clear_has_lon_sample_config() {
  _has_bits_[0] &= ~0x00000001u;
}
void LatticeSamplingConfig::clear_lon_sample_config() {
  if (lon_sample_config_ != NULL) lon_sample_config_->::jmc_auto::planning::LonSampleConfig::Clear();
  clear_has_lon_sample_config();
}
const ::jmc_auto::planning::LonSampleConfig& LatticeSamplingConfig::lon_sample_config() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LatticeSamplingConfig.lon_sample_config)
  return lon_sample_config_ != NULL ? *lon_sample_config_
                         : *::jmc_auto::planning::LonSampleConfig::internal_default_instance();
}
::jmc_auto::planning::LonSampleConfig* LatticeSamplingConfig::mutable_lon_sample_config() {
  set_has_lon_sample_config();
  if (lon_sample_config_ == NULL) {
    lon_sample_config_ = new ::jmc_auto::planning::LonSampleConfig;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.planning.LatticeSamplingConfig.lon_sample_config)
  return lon_sample_config_;
}
::jmc_auto::planning::LonSampleConfig* LatticeSamplingConfig::release_lon_sample_config() {
  // @@protoc_insertion_point(field_release:jmc_auto.planning.LatticeSamplingConfig.lon_sample_config)
  clear_has_lon_sample_config();
  ::jmc_auto::planning::LonSampleConfig* temp = lon_sample_config_;
  lon_sample_config_ = NULL;
  return temp;
}
void LatticeSamplingConfig::set_allocated_lon_sample_config(::jmc_auto::planning::LonSampleConfig* lon_sample_config) {
  delete lon_sample_config_;
  lon_sample_config_ = lon_sample_config;
  if (lon_sample_config) {
    set_has_lon_sample_config();
  } else {
    clear_has_lon_sample_config();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.planning.LatticeSamplingConfig.lon_sample_config)
}

// optional .jmc_auto.planning.LatSampleConfig lat_sample_config = 2;
bool LatticeSamplingConfig::has_lat_sample_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LatticeSamplingConfig::set_has_lat_sample_config() {
  _has_bits_[0] |= 0x00000002u;
}
void LatticeSamplingConfig::clear_has_lat_sample_config() {
  _has_bits_[0] &= ~0x00000002u;
}
void LatticeSamplingConfig::clear_lat_sample_config() {
  if (lat_sample_config_ != NULL) lat_sample_config_->::jmc_auto::planning::LatSampleConfig::Clear();
  clear_has_lat_sample_config();
}
const ::jmc_auto::planning::LatSampleConfig& LatticeSamplingConfig::lat_sample_config() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.LatticeSamplingConfig.lat_sample_config)
  return lat_sample_config_ != NULL ? *lat_sample_config_
                         : *::jmc_auto::planning::LatSampleConfig::internal_default_instance();
}
::jmc_auto::planning::LatSampleConfig* LatticeSamplingConfig::mutable_lat_sample_config() {
  set_has_lat_sample_config();
  if (lat_sample_config_ == NULL) {
    lat_sample_config_ = new ::jmc_auto::planning::LatSampleConfig;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.planning.LatticeSamplingConfig.lat_sample_config)
  return lat_sample_config_;
}
::jmc_auto::planning::LatSampleConfig* LatticeSamplingConfig::release_lat_sample_config() {
  // @@protoc_insertion_point(field_release:jmc_auto.planning.LatticeSamplingConfig.lat_sample_config)
  clear_has_lat_sample_config();
  ::jmc_auto::planning::LatSampleConfig* temp = lat_sample_config_;
  lat_sample_config_ = NULL;
  return temp;
}
void LatticeSamplingConfig::set_allocated_lat_sample_config(::jmc_auto::planning::LatSampleConfig* lat_sample_config) {
  delete lat_sample_config_;
  lat_sample_config_ = lat_sample_config;
  if (lat_sample_config) {
    set_has_lat_sample_config();
  } else {
    clear_has_lat_sample_config();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.planning.LatticeSamplingConfig.lat_sample_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace planning
}  // namespace jmc_auto

// @@protoc_insertion_point(global_scope)
