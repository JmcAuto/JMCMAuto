// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/st_drivable_boundary.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/planning/proto/st_drivable_boundary.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace jmc_auto {
namespace planning {
class STDrivableBoundaryInstanceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<STDrivableBoundaryInstance> {
} _STDrivableBoundaryInstance_default_instance_;
class STDrivableBoundaryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<STDrivableBoundary> {
} _STDrivableBoundary_default_instance_;

namespace protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STDrivableBoundaryInstance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STDrivableBoundaryInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STDrivableBoundaryInstance, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STDrivableBoundaryInstance, s_lower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STDrivableBoundaryInstance, s_upper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STDrivableBoundaryInstance, v_obs_lower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STDrivableBoundaryInstance, v_obs_upper_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STDrivableBoundary, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STDrivableBoundary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STDrivableBoundary, st_boundary_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(STDrivableBoundaryInstance)},
  { 15, 21, sizeof(STDrivableBoundary)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_STDrivableBoundaryInstance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_STDrivableBoundary_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/planning/proto/st_drivable_boundary.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _STDrivableBoundaryInstance_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _STDrivableBoundary_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _STDrivableBoundaryInstance_default_instance_.DefaultConstruct();
  _STDrivableBoundary_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n1modules/planning/proto/st_drivable_bou"
      "ndary.proto\022\021jmc_auto.planning\"s\n\032STDriv"
      "ableBoundaryInstance\022\t\n\001t\030\001 \001(\001\022\017\n\007s_low"
      "er\030\002 \001(\001\022\017\n\007s_upper\030\003 \001(\001\022\023\n\013v_obs_lower"
      "\030\004 \001(\001\022\023\n\013v_obs_upper\030\005 \001(\001\"X\n\022STDrivabl"
      "eBoundary\022B\n\013st_boundary\030\001 \003(\0132-.jmc_aut"
      "o.planning.STDrivableBoundaryInstance"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 277);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/planning/proto/st_drivable_boundary.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STDrivableBoundaryInstance::kTFieldNumber;
const int STDrivableBoundaryInstance::kSLowerFieldNumber;
const int STDrivableBoundaryInstance::kSUpperFieldNumber;
const int STDrivableBoundaryInstance::kVObsLowerFieldNumber;
const int STDrivableBoundaryInstance::kVObsUpperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STDrivableBoundaryInstance::STDrivableBoundaryInstance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.planning.STDrivableBoundaryInstance)
}
STDrivableBoundaryInstance::STDrivableBoundaryInstance(const STDrivableBoundaryInstance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&t_, &from.t_,
    reinterpret_cast<char*>(&v_obs_upper_) -
    reinterpret_cast<char*>(&t_) + sizeof(v_obs_upper_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.planning.STDrivableBoundaryInstance)
}

void STDrivableBoundaryInstance::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&t_, 0, reinterpret_cast<char*>(&v_obs_upper_) -
    reinterpret_cast<char*>(&t_) + sizeof(v_obs_upper_));
}

STDrivableBoundaryInstance::~STDrivableBoundaryInstance() {
  // @@protoc_insertion_point(destructor:jmc_auto.planning.STDrivableBoundaryInstance)
  SharedDtor();
}

void STDrivableBoundaryInstance::SharedDtor() {
}

void STDrivableBoundaryInstance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* STDrivableBoundaryInstance::descriptor() {
  protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STDrivableBoundaryInstance& STDrivableBoundaryInstance::default_instance() {
  protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::InitDefaults();
  return *internal_default_instance();
}

STDrivableBoundaryInstance* STDrivableBoundaryInstance::New(::google::protobuf::Arena* arena) const {
  STDrivableBoundaryInstance* n = new STDrivableBoundaryInstance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void STDrivableBoundaryInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.planning.STDrivableBoundaryInstance)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&t_, 0, reinterpret_cast<char*>(&v_obs_upper_) -
      reinterpret_cast<char*>(&t_) + sizeof(v_obs_upper_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STDrivableBoundaryInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.planning.STDrivableBoundaryInstance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_t();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double s_lower = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_s_lower();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_lower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double s_upper = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_s_upper();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_upper_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double v_obs_lower = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_v_obs_lower();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_obs_lower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double v_obs_upper = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_v_obs_upper();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_obs_upper_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.planning.STDrivableBoundaryInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.planning.STDrivableBoundaryInstance)
  return false;
#undef DO_
}

void STDrivableBoundaryInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.planning.STDrivableBoundaryInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double t = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->t(), output);
  }

  // optional double s_lower = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->s_lower(), output);
  }

  // optional double s_upper = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->s_upper(), output);
  }

  // optional double v_obs_lower = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->v_obs_lower(), output);
  }

  // optional double v_obs_upper = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->v_obs_upper(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.planning.STDrivableBoundaryInstance)
}

::google::protobuf::uint8* STDrivableBoundaryInstance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.planning.STDrivableBoundaryInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double t = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->t(), target);
  }

  // optional double s_lower = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->s_lower(), target);
  }

  // optional double s_upper = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->s_upper(), target);
  }

  // optional double v_obs_lower = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->v_obs_lower(), target);
  }

  // optional double v_obs_upper = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->v_obs_upper(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.planning.STDrivableBoundaryInstance)
  return target;
}

size_t STDrivableBoundaryInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.planning.STDrivableBoundaryInstance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional double t = 1;
    if (has_t()) {
      total_size += 1 + 8;
    }

    // optional double s_lower = 2;
    if (has_s_lower()) {
      total_size += 1 + 8;
    }

    // optional double s_upper = 3;
    if (has_s_upper()) {
      total_size += 1 + 8;
    }

    // optional double v_obs_lower = 4;
    if (has_v_obs_lower()) {
      total_size += 1 + 8;
    }

    // optional double v_obs_upper = 5;
    if (has_v_obs_upper()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void STDrivableBoundaryInstance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.planning.STDrivableBoundaryInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const STDrivableBoundaryInstance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STDrivableBoundaryInstance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.planning.STDrivableBoundaryInstance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.planning.STDrivableBoundaryInstance)
    MergeFrom(*source);
  }
}

void STDrivableBoundaryInstance::MergeFrom(const STDrivableBoundaryInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.planning.STDrivableBoundaryInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      t_ = from.t_;
    }
    if (cached_has_bits & 0x00000002u) {
      s_lower_ = from.s_lower_;
    }
    if (cached_has_bits & 0x00000004u) {
      s_upper_ = from.s_upper_;
    }
    if (cached_has_bits & 0x00000008u) {
      v_obs_lower_ = from.v_obs_lower_;
    }
    if (cached_has_bits & 0x00000010u) {
      v_obs_upper_ = from.v_obs_upper_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void STDrivableBoundaryInstance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.planning.STDrivableBoundaryInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STDrivableBoundaryInstance::CopyFrom(const STDrivableBoundaryInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.planning.STDrivableBoundaryInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STDrivableBoundaryInstance::IsInitialized() const {
  return true;
}

void STDrivableBoundaryInstance::Swap(STDrivableBoundaryInstance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STDrivableBoundaryInstance::InternalSwap(STDrivableBoundaryInstance* other) {
  std::swap(t_, other->t_);
  std::swap(s_lower_, other->s_lower_);
  std::swap(s_upper_, other->s_upper_);
  std::swap(v_obs_lower_, other->v_obs_lower_);
  std::swap(v_obs_upper_, other->v_obs_upper_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata STDrivableBoundaryInstance::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// STDrivableBoundaryInstance

// optional double t = 1;
bool STDrivableBoundaryInstance::has_t() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void STDrivableBoundaryInstance::set_has_t() {
  _has_bits_[0] |= 0x00000001u;
}
void STDrivableBoundaryInstance::clear_has_t() {
  _has_bits_[0] &= ~0x00000001u;
}
void STDrivableBoundaryInstance::clear_t() {
  t_ = 0;
  clear_has_t();
}
double STDrivableBoundaryInstance::t() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.STDrivableBoundaryInstance.t)
  return t_;
}
void STDrivableBoundaryInstance::set_t(double value) {
  set_has_t();
  t_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.STDrivableBoundaryInstance.t)
}

// optional double s_lower = 2;
bool STDrivableBoundaryInstance::has_s_lower() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void STDrivableBoundaryInstance::set_has_s_lower() {
  _has_bits_[0] |= 0x00000002u;
}
void STDrivableBoundaryInstance::clear_has_s_lower() {
  _has_bits_[0] &= ~0x00000002u;
}
void STDrivableBoundaryInstance::clear_s_lower() {
  s_lower_ = 0;
  clear_has_s_lower();
}
double STDrivableBoundaryInstance::s_lower() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.STDrivableBoundaryInstance.s_lower)
  return s_lower_;
}
void STDrivableBoundaryInstance::set_s_lower(double value) {
  set_has_s_lower();
  s_lower_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.STDrivableBoundaryInstance.s_lower)
}

// optional double s_upper = 3;
bool STDrivableBoundaryInstance::has_s_upper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void STDrivableBoundaryInstance::set_has_s_upper() {
  _has_bits_[0] |= 0x00000004u;
}
void STDrivableBoundaryInstance::clear_has_s_upper() {
  _has_bits_[0] &= ~0x00000004u;
}
void STDrivableBoundaryInstance::clear_s_upper() {
  s_upper_ = 0;
  clear_has_s_upper();
}
double STDrivableBoundaryInstance::s_upper() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.STDrivableBoundaryInstance.s_upper)
  return s_upper_;
}
void STDrivableBoundaryInstance::set_s_upper(double value) {
  set_has_s_upper();
  s_upper_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.STDrivableBoundaryInstance.s_upper)
}

// optional double v_obs_lower = 4;
bool STDrivableBoundaryInstance::has_v_obs_lower() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void STDrivableBoundaryInstance::set_has_v_obs_lower() {
  _has_bits_[0] |= 0x00000008u;
}
void STDrivableBoundaryInstance::clear_has_v_obs_lower() {
  _has_bits_[0] &= ~0x00000008u;
}
void STDrivableBoundaryInstance::clear_v_obs_lower() {
  v_obs_lower_ = 0;
  clear_has_v_obs_lower();
}
double STDrivableBoundaryInstance::v_obs_lower() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.STDrivableBoundaryInstance.v_obs_lower)
  return v_obs_lower_;
}
void STDrivableBoundaryInstance::set_v_obs_lower(double value) {
  set_has_v_obs_lower();
  v_obs_lower_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.STDrivableBoundaryInstance.v_obs_lower)
}

// optional double v_obs_upper = 5;
bool STDrivableBoundaryInstance::has_v_obs_upper() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void STDrivableBoundaryInstance::set_has_v_obs_upper() {
  _has_bits_[0] |= 0x00000010u;
}
void STDrivableBoundaryInstance::clear_has_v_obs_upper() {
  _has_bits_[0] &= ~0x00000010u;
}
void STDrivableBoundaryInstance::clear_v_obs_upper() {
  v_obs_upper_ = 0;
  clear_has_v_obs_upper();
}
double STDrivableBoundaryInstance::v_obs_upper() const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.STDrivableBoundaryInstance.v_obs_upper)
  return v_obs_upper_;
}
void STDrivableBoundaryInstance::set_v_obs_upper(double value) {
  set_has_v_obs_upper();
  v_obs_upper_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.planning.STDrivableBoundaryInstance.v_obs_upper)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STDrivableBoundary::kStBoundaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STDrivableBoundary::STDrivableBoundary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.planning.STDrivableBoundary)
}
STDrivableBoundary::STDrivableBoundary(const STDrivableBoundary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      st_boundary_(from.st_boundary_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:jmc_auto.planning.STDrivableBoundary)
}

void STDrivableBoundary::SharedCtor() {
  _cached_size_ = 0;
}

STDrivableBoundary::~STDrivableBoundary() {
  // @@protoc_insertion_point(destructor:jmc_auto.planning.STDrivableBoundary)
  SharedDtor();
}

void STDrivableBoundary::SharedDtor() {
}

void STDrivableBoundary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* STDrivableBoundary::descriptor() {
  protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STDrivableBoundary& STDrivableBoundary::default_instance() {
  protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::InitDefaults();
  return *internal_default_instance();
}

STDrivableBoundary* STDrivableBoundary::New(::google::protobuf::Arena* arena) const {
  STDrivableBoundary* n = new STDrivableBoundary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void STDrivableBoundary::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.planning.STDrivableBoundary)
  st_boundary_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STDrivableBoundary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.planning.STDrivableBoundary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .jmc_auto.planning.STDrivableBoundaryInstance st_boundary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_st_boundary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.planning.STDrivableBoundary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.planning.STDrivableBoundary)
  return false;
#undef DO_
}

void STDrivableBoundary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.planning.STDrivableBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .jmc_auto.planning.STDrivableBoundaryInstance st_boundary = 1;
  for (unsigned int i = 0, n = this->st_boundary_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->st_boundary(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.planning.STDrivableBoundary)
}

::google::protobuf::uint8* STDrivableBoundary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.planning.STDrivableBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .jmc_auto.planning.STDrivableBoundaryInstance st_boundary = 1;
  for (unsigned int i = 0, n = this->st_boundary_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->st_boundary(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.planning.STDrivableBoundary)
  return target;
}

size_t STDrivableBoundary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.planning.STDrivableBoundary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .jmc_auto.planning.STDrivableBoundaryInstance st_boundary = 1;
  {
    unsigned int count = this->st_boundary_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->st_boundary(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void STDrivableBoundary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.planning.STDrivableBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  const STDrivableBoundary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STDrivableBoundary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.planning.STDrivableBoundary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.planning.STDrivableBoundary)
    MergeFrom(*source);
  }
}

void STDrivableBoundary::MergeFrom(const STDrivableBoundary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.planning.STDrivableBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  st_boundary_.MergeFrom(from.st_boundary_);
}

void STDrivableBoundary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.planning.STDrivableBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STDrivableBoundary::CopyFrom(const STDrivableBoundary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.planning.STDrivableBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STDrivableBoundary::IsInitialized() const {
  return true;
}

void STDrivableBoundary::Swap(STDrivableBoundary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STDrivableBoundary::InternalSwap(STDrivableBoundary* other) {
  st_boundary_.InternalSwap(&other->st_boundary_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata STDrivableBoundary::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fst_5fdrivable_5fboundary_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// STDrivableBoundary

// repeated .jmc_auto.planning.STDrivableBoundaryInstance st_boundary = 1;
int STDrivableBoundary::st_boundary_size() const {
  return st_boundary_.size();
}
void STDrivableBoundary::clear_st_boundary() {
  st_boundary_.Clear();
}
const ::jmc_auto::planning::STDrivableBoundaryInstance& STDrivableBoundary::st_boundary(int index) const {
  // @@protoc_insertion_point(field_get:jmc_auto.planning.STDrivableBoundary.st_boundary)
  return st_boundary_.Get(index);
}
::jmc_auto::planning::STDrivableBoundaryInstance* STDrivableBoundary::mutable_st_boundary(int index) {
  // @@protoc_insertion_point(field_mutable:jmc_auto.planning.STDrivableBoundary.st_boundary)
  return st_boundary_.Mutable(index);
}
::jmc_auto::planning::STDrivableBoundaryInstance* STDrivableBoundary::add_st_boundary() {
  // @@protoc_insertion_point(field_add:jmc_auto.planning.STDrivableBoundary.st_boundary)
  return st_boundary_.Add();
}
::google::protobuf::RepeatedPtrField< ::jmc_auto::planning::STDrivableBoundaryInstance >*
STDrivableBoundary::mutable_st_boundary() {
  // @@protoc_insertion_point(field_mutable_list:jmc_auto.planning.STDrivableBoundary.st_boundary)
  return &st_boundary_;
}
const ::google::protobuf::RepeatedPtrField< ::jmc_auto::planning::STDrivableBoundaryInstance >&
STDrivableBoundary::st_boundary() const {
  // @@protoc_insertion_point(field_list:jmc_auto.planning.STDrivableBoundary.st_boundary)
  return st_boundary_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace planning
}  // namespace jmc_auto

// @@protoc_insertion_point(global_scope)
