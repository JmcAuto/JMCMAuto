/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_inputdebug_h
#define impl_type_inputdebug_h




#include "impl_type_header.h"


struct InputDebug {
    ::Header localization_header;
    
    ::Header canbus_header;
    
    ::Header trajectory_header;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(localization_header);
        fun(canbus_header);
        fun(trajectory_header);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(localization_header);
        fun(canbus_header);
        fun(trajectory_header);
    }

    bool operator == (const ::InputDebug& t) const {
        return (localization_header == t.localization_header) && (canbus_header == t.canbus_header) && (trajectory_header == t.trajectory_header);
    }
};


#endif // impl_type_inputdebug_h
