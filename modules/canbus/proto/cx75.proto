syntax = "proto2";

package jmc_auto.canbus;

message Abs_whlspd_0x211_211 {
// Report Message
  enum Abs_whlspdreristatusType {
    ABS_WHLSPDRERISTATUS_VALID = 0;
    ABS_WHLSPDRERISTATUS_INVALID = 1;
  }
  enum Abs_whlspdrelestatusType {
    ABS_WHLSPDRELESTATUS_VALID = 0;
    ABS_WHLSPDRELESTATUS_INVALID = 1;
  }
  enum Abs_whlspdfrntristatusType {
    ABS_WHLSPDFRNTRISTATUS_VALID = 0;
    ABS_WHLSPDFRNTRISTATUS_INVALID = 1;
  }
  enum Abs_whlspdfrntlestatusType {
    ABS_WHLSPDFRNTLESTATUS_VALID = 0;
    ABS_WHLSPDFRNTLESTATUS_INVALID = 1;
  }
  // [kph] [0|230.2875]
  optional double abs_whlspdfrntri = 1;
  // [kph] [0|230.2875]
  optional double abs_whlspdrele = 2;
  // [kph] [0|230.2875]
  optional double abs_whlspdreri = 3;
  // [] [0|15]
  optional int32 rollingcounter_0x211 = 4;
  // [] [0|1]
  optional Abs_whlspdreristatusType abs_whlspdreristatus = 5;
  // [] [0|1]
  optional Abs_whlspdrelestatusType abs_whlspdrelestatus = 6;
  // [] [0|1]
  optional Abs_whlspdfrntristatusType abs_whlspdfrntristatus = 7;
  // [] [0|1]
  optional Abs_whlspdfrntlestatusType abs_whlspdfrntlestatus = 8;
  // [] [0|255]
  optional int32 checksum_0x211 = 9;
  // [kph] [0|230.2875]
  optional double abs_whlspdfrntle = 10;
}

message Gw_ems_sts_0x151_151 {
  // Report Message
    enum Ems_atsdrivingmodestatusType {
      EMS_ATSDRIVINGMODESTATUS_STANDARD = 0;
      EMS_ATSDRIVINGMODESTATUS_SPORT = 1;
      EMS_ATSDRIVINGMODESTATUS_ECO = 2;
      EMS_ATSDRIVINGMODESTATUS_INVALID = 3;
    }
    enum Ems_enginestopstartstatusType {
      EMS_ENGINESTOPSTARTSTATUS_NON_START_STOPMODE = 0;
      EMS_ENGINESTOPSTARTSTATUS_ENGINESTANDBY = 1;
      EMS_ENGINESTOPSTARTSTATUS_ENGINESTOPPED = 2;
      EMS_ENGINESTOPSTARTSTATUS_STARTERRESTART = 3;
      EMS_ENGINESTOPSTARTSTATUS_ENGINERESTART = 4;
      EMS_ENGINESTOPSTARTSTATUS_ENGINEOPERATION = 5;
      EMS_ENGINESTOPSTARTSTATUS_ENGINEAUTO_STOPPING = 6;
      EMS_ENGINESTOPSTARTSTATUS_RESERVED = 7;
    }
    enum Ems_cruisecontrolstatusType {
      EMS_CRUISECONTROLSTATUS_CRUISECONTROLOOFF = 0;
      EMS_CRUISECONTROLSTATUS_ACTIVE = 1;
      EMS_CRUISECONTROLSTATUS_STANDBY = 2;
      EMS_CRUISECONTROLSTATUS_ERROR = 3;
    }
    enum Ems_drivingmodechange_fault_flagType {
      EMS_DRIVINGMODECHANGE_FAULT_FLAG_NORMAL = 0;
      EMS_DRIVINGMODECHANGE_FAULT_FLAG_FAULT = 1;
    }
    // [KPa] [0|254]
    optional int32 ems_engbarometricpressure = 1;
    // [Kpa] [-92.7|5]
    optional double ems_vacuumpressure = 2;
    // [Km h] [0|255]
    optional double ems_targcruisespeed = 3;
    // [] [0|3]
    optional Ems_atsdrivingmodestatusType ems_atsdrivingmodestatus = 4;
    // [] [0|7]
    optional Ems_enginestopstartstatusType ems_enginestopstartstatus = 5;
    // [] [0|15]
    optional int32 dcm_ems_rollingcounter_0x151 = 6;
    // [] [0|3]
    optional Ems_cruisecontrolstatusType ems_cruisecontrolstatus = 7;
    // [] [0|1]
    optional Ems_drivingmodechange_fault_flagType ems_drivingmodechange_fault_flag = 8;
    // [] [0|255]
    optional int32 dcm_ems_checksum_0x151 = 9;
    // [s] [0|65534]
    optional int32 ems_engofftime = 10;
  }

message Esp_raw_0x212_212 {
  // Report Message
    enum Esp_vxwwheelrrvalidType {
      ESP_VXWWHEELRRVALID_VALID = 0;
      ESP_VXWWHEELRRVALID_INVALID = 1;
    }
    enum Esp_vxwwheelrlvalidType {
      ESP_VXWWHEELRLVALID_VALID = 0;
      ESP_VXWWHEELRLVALID_INVALID = 1;
    }
    enum Esp_vxwwheelfrvalidType {
      ESP_VXWWHEELFRVALID_VALID = 0;
      ESP_VXWWHEELFRVALID_INVALID = 1;
    }
    enum Esp_vxwwheelflvalidType {
      ESP_VXWWHEELFLVALID_VALID = 0;
      ESP_VXWWHEELFLVALID_INVALID = 1;
    }
    // [kph] [0|230.2875]
    optional double esp_vxwwheelrawfr = 1;
    // [kph] [0|230.2875]
    optional double esp_vxwwheelrawrl = 2;
    // [kph] [0|230.2875]
    optional double esp_vxwwheelrawrr = 3;
    // [] [0|15]
    optional int32 rolling_counter_0x212 = 4;
    // [] [0|1]
    optional Esp_vxwwheelrrvalidType esp_vxwwheelrrvalid = 5;
    // [] [0|1]
    optional Esp_vxwwheelrlvalidType esp_vxwwheelrlvalid = 6;
    // [] [0|1]
    optional Esp_vxwwheelfrvalidType esp_vxwwheelfrvalid = 7;
    // [] [0|1]
    optional Esp_vxwwheelflvalidType esp_vxwwheelflvalid = 8;
    // [] [0|255]
    optional int32 checksum_0x212 = 9;
    // [kph] [0|230.2875]
    optional double esp_vxwwheelrawfl = 10;
  }

message Gw_bcm_door_0x310_310 {
// Report Message
  enum Bcm_doorstsrearriType {
    BCM_DOORSTSREARRI_NO_USED = 0;
    BCM_DOORSTSREARRI_CLOSED = 1;
    BCM_DOORSTSREARRI_OPEN = 2;
    BCM_DOORSTSREARRI_FAULT = 3;
  }
  enum Bcm_doorlockstsrearleType {
    BCM_DOORLOCKSTSREARLE_NO_USED = 0;
    BCM_DOORLOCKSTSREARLE_LOCKED = 1;
    BCM_DOORLOCKSTSREARLE_UNLOCKED = 2;
    BCM_DOORLOCKSTSREARLE_FAULT = 3;
  }
  enum Bcm_doorlockstsfrntriType {
    BCM_DOORLOCKSTSFRNTRI_NO_USED = 0;
    BCM_DOORLOCKSTSFRNTRI_LOCKED = 1;
    BCM_DOORLOCKSTSFRNTRI_UNLOCKED = 2;
    BCM_DOORLOCKSTSFRNTRI_FAULT = 3;
  }
  enum Bcm_doorlockstsfrntleType {
    BCM_DOORLOCKSTSFRNTLE_NO_USED = 0;
    BCM_DOORLOCKSTSFRNTLE_LOCKED = 1;
    BCM_DOORLOCKSTSFRNTLE_UNLOCKED = 2;
    BCM_DOORLOCKSTSFRNTLE_FAULT = 3;
  }
  enum Bcm_antitheftstsType {
    BCM_ANTITHEFTSTS_FORTIFY = 0;
    BCM_ANTITHEFTSTS_LIFT_THE_FORTIFICATION = 1;
    BCM_ANTITHEFTSTS_WARNING = 2;
    BCM_ANTITHEFTSTS_ABNORMAL_FORTIFICATION = 3;
  }
  enum Bcm_loadsensitivityType {
    BCM_LOADSENSITIVITY_INACITVE = 0;
    BCM_LOADSENSITIVITY_ACTIVE = 1;
  }
  enum Bcm_lockunlockfeedbackType {
    BCM_LOCKUNLOCKFEEDBACK_NO_LOCK_UNLOCK_ACTION = 0;
    BCM_LOCKUNLOCKFEEDBACK_PE_LOCK = 1;
    BCM_LOCKUNLOCKFEEDBACK_RKE_LOCK = 2;
    BCM_LOCKUNLOCKFEEDBACK_LEAVE_VEHICLE_LOCK = 3;
    BCM_LOCKUNLOCKFEEDBACK_MASTER_LOCK = 4;
    BCM_LOCKUNLOCKFEEDBACK_FINGER_LOCK = 5;
    BCM_LOCKUNLOCKFEEDBACK_RKE_30S_AUTOLOCK = 6;
    BCM_LOCKUNLOCKFEEDBACK_PE_30S_AUTOLOCK = 7;
    BCM_LOCKUNLOCKFEEDBACK_NEAR_TO_VEHICLE_30S_AUTOLOCK = 8;
    BCM_LOCKUNLOCKFEEDBACK_TBOX_LOCK = 9;
    BCM_LOCKUNLOCKFEEDBACK_SPEEDLOCK = 10;
    BCM_LOCKUNLOCKFEEDBACK_DIAGNOSTIC_LOCK = 11;
    BCM_LOCKUNLOCKFEEDBACK_TBOX_30S_AUTOLOCK = 12;
    BCM_LOCKUNLOCKFEEDBACK_ANY_OTHER_LOCK = 15;
    BCM_LOCKUNLOCKFEEDBACK_PE_UNLOCK = 17;
    BCM_LOCKUNLOCKFEEDBACK_RKE_UNLOCK = 18;
    BCM_LOCKUNLOCKFEEDBACK_NEAR_TO_VEHICLE_UNLOCK = 19;
    BCM_LOCKUNLOCKFEEDBACK_MASTER_UNLOCK = 20;
    BCM_LOCKUNLOCKFEEDBACK_FINGER_UNLOCK = 21;
    BCM_LOCKUNLOCKFEEDBACK_CRASHUNLOCK = 22;
    BCM_LOCKUNLOCKFEEDBACK_KEYREMOVALUNLOCK = 23;
    BCM_LOCKUNLOCKFEEDBACK_ENGOFFUNLOCK = 24;
    BCM_LOCKUNLOCKFEEDBACK_TBOX_UNLCOK = 25;
    BCM_LOCKUNLOCKFEEDBACK_DIAGNOSTIC_UNLOCK = 26;
    BCM_LOCKUNLOCKFEEDBACK_KEY_FORGOTTEN_TO_UNLOCK_THE_CAR = 27;
    BCM_LOCKUNLOCKFEEDBACK_ANY_OTHER_UNLOCK = 31;
  }
  enum Bcm_doorlockststrunkType {
    BCM_DOORLOCKSTSTRUNK_NO_USED = 0;
    BCM_DOORLOCKSTSTRUNK_LOCKED = 1;
    BCM_DOORLOCKSTSTRUNK_UNLOCKED = 2;
    BCM_DOORLOCKSTSTRUNK_FAULT = 3;
  }
  enum Bcm_doorststrunkType {
    BCM_DOORSTSTRUNK_NO_USED = 0;
    BCM_DOORSTSTRUNK_CLOSED = 1;
    BCM_DOORSTSTRUNK_OPEN = 2;
    BCM_DOORSTSTRUNK_FAULT = 3;
  }
  enum Bcm_trunkdoorpreunlockstsType {
    BCM_TRUNKDOORPREUNLOCKSTS_NO_USED_NO_ACTION = 0;
    BCM_TRUNKDOORPREUNLOCKSTS_PREUNLOCKED = 1;
  }
  enum Bcm_doorstsrearleType {
    BCM_DOORSTSREARLE_NO_USED = 0;
    BCM_DOORSTSREARLE_CLOSED = 1;
    BCM_DOORSTSREARLE_OPEN = 2;
    BCM_DOORSTSREARLE_FAULT = 3;
  }
  enum Bcm_frontwiperstsType {
    BCM_FRONTWIPERSTS_NO_USED = 0;
    BCM_FRONTWIPERSTS_OFF = 1;
    BCM_FRONTWIPERSTS_LOW = 2;
    BCM_FRONTWIPERSTS_HIGH = 3;
  }
  enum Bcm_enginehoodstsType {
    BCM_ENGINEHOODSTS_NO_USED = 0;
    BCM_ENGINEHOODSTS_CLOSED = 1;
    BCM_ENGINEHOODSTS_OPEN = 2;
    BCM_ENGINEHOODSTS_FAULT = 3;
  }
  enum Bcm_plg_driverswType {
    BCM_PLG_DRIVERSW_RELEASE = 0;
    BCM_PLG_DRIVERSW_PRESS = 1;
    BCM_PLG_DRIVERSW_STUCK = 2;
    BCM_PLG_DRIVERSW_RESERVED = 3;
  }
  enum Bcm_windowscmdType {
    BCM_WINDOWSCMD_INVALID = 0;
    BCM_WINDOWSCMD_WINDOWS_UP = 1;
    BCM_WINDOWSCMD_WINDOWS_DOWN = 2;
    BCM_WINDOWSCMD_WINDOWS_VENT = 3;
    BCM_WINDOWSCMD_WINDOWS_STOP = 4;
  }
  enum Bcm_rearwiperstsType {
    BCM_REARWIPERSTS_NO_USED = 0;
    BCM_REARWIPERSTS_OFF = 1;
    BCM_REARWIPERSTS_ON = 2;
    BCM_REARWIPERSTS_RESERVED = 3;
  }
  enum Bcm_doorstsfrntriType {
    BCM_DOORSTSFRNTRI_NO_USED = 0;
    BCM_DOORSTSFRNTRI_CLOSED = 1;
    BCM_DOORSTSFRNTRI_OPEN = 2;
    BCM_DOORSTSFRNTRI_FAULT = 3;
  }
  enum Bcm_turnindicatorstsType {
    BCM_TURNINDICATORSTS_OFF = 0;
    BCM_TURNINDICATORSTS_LEON = 1;
    BCM_TURNINDICATORSTS_RION = 2;
    BCM_TURNINDICATORSTS_LEANDRION = 3;
  }
  enum Bcm_doorstsfrntleType {
    BCM_DOORSTSFRNTLE_NO_USED = 0;
    BCM_DOORSTSFRNTLE_CLOSED = 1;
    BCM_DOORSTSFRNTLE_OPEN = 2;
    BCM_DOORSTSFRNTLE_FAULT = 3;
  }
  enum Bcm_doorlockstsrearriType {
    BCM_DOORLOCKSTSREARRI_NO_USED = 0;
    BCM_DOORLOCKSTSREARRI_LOCKED = 1;
    BCM_DOORLOCKSTSREARRI_UNLOCKED = 2;
    BCM_DOORLOCKSTSREARRI_FAULT = 3;
  }
  // [] [0|3]
  optional Bcm_doorstsrearriType bcm_doorstsrearri = 1;
  // [] [0|3]
  optional Bcm_doorlockstsrearleType bcm_doorlockstsrearle = 2;
  // [] [0|3]
  optional Bcm_doorlockstsfrntriType bcm_doorlockstsfrntri = 3;
  // [] [0|3]
  optional Bcm_doorlockstsfrntleType bcm_doorlockstsfrntle = 4;
  // [] [0|3]
  optional Bcm_antitheftstsType bcm_antitheftsts = 5;
  // [] [0|1]
  optional Bcm_loadsensitivityType bcm_loadsensitivity = 6;
  // [] [0|31]
  optional Bcm_lockunlockfeedbackType bcm_lockunlockfeedback = 7;
  // [] [0|3]
  optional Bcm_doorlockststrunkType bcm_doorlockststrunk = 8;
  // [] [0|3]
  optional Bcm_doorststrunkType bcm_doorststrunk = 9;
  // [] [0|1]
  optional Bcm_trunkdoorpreunlockstsType bcm_trunkdoorpreunlocksts = 10;
  // [] [0|3]
  optional Bcm_doorstsrearleType bcm_doorstsrearle = 11;
  // [] [0|3]
  optional Bcm_frontwiperstsType bcm_frontwipersts = 12;
  // [] [0|3]
  optional Bcm_enginehoodstsType bcm_enginehoodsts = 13;
  // [] [0|3]
  optional Bcm_plg_driverswType bcm_plg_driversw = 14;
  // [] [0|4]
  optional Bcm_windowscmdType bcm_windowscmd = 15;
  // [] [0|3]
  optional Bcm_rearwiperstsType bcm_rearwipersts = 16;
  // [] [0|3]
  optional Bcm_doorstsfrntriType bcm_doorstsfrntri = 17;
  // [] [0|15]
  optional int32 bcm_rolling_counter_0x310 = 18;
  // [] [0|3]
  optional Bcm_turnindicatorstsType bcm_turnindicatorsts = 19;
  // [] [0|255]
  optional int32 bcm_checksum_0x310 = 20;
  // [] [0|3]
  optional Bcm_doorstsfrntleType bcm_doorstsfrntle = 21;
  // [] [0|3]
  optional Bcm_doorlockstsrearriType bcm_doorlockstsrearri = 22;
}

message Pam_0x270_270 {
// Control Message
  enum Pam_esp_target_gear_requestType {
    PAM_ESP_TARGET_GEAR_REQUEST_NO_REQUEST = 0;
    PAM_ESP_TARGET_GEAR_REQUEST_PARK = 1;
    PAM_ESP_TARGET_GEAR_REQUEST_REVERSE = 2;
    PAM_ESP_TARGET_GEAR_REQUEST_NEUTRAL = 3;
    PAM_ESP_TARGET_GEAR_REQUEST_DRIVE = 4;
  }
  enum Pam_brakefunctionmodeType {
    PAM_BRAKEFUNCTIONMODE_NO_ACTION = 0;
    PAM_BRAKEFUNCTIONMODE_AUTOMATICPARK = 1;
  }
  enum Stopstartinhibit_apaType {
    STOPSTARTINHIBIT_APA_FALSE = 0;
    STOPSTARTINHIBIT_APA_TRUE = 1;
  }
  enum Pam_apafType {
    PAM_APAF_NORMAL = 0;
    PAM_APAF_APA_FAILURE = 1;
  }
  enum Pam_cmdepsstsType {
    PAM_CMDEPSSTS_NO_REQUEST = 0;
    PAM_CMDEPSSTS_CONTROL_EPS_REQUEST = 1;
    PAM_CMDEPSSTS_EPS_CONTROL = 2;
  }
  enum Pam_stsType {
    PAM_STS_OFF = 0;
    PAM_STS_STANDBY_STANDBY_ENABLE = 1;
    PAM_STS_SEARCHING_ENABLE = 2;
    PAM_STS_GUIDANCE_ACTIVE_ACTIVE = 3;
    PAM_STS_COMPLETED = 4;
    PAM_STS_FAILURE_DISABLE = 5;
    PAM_STS_TERMINATED = 6;
    PAM_STS_RESERVED = 7;
  }
  enum Pam_brakemodestsType {
    PAM_BRAKEMODESTS_INIT = 0;
    PAM_BRAKEMODESTS_STANDBY = 1;
    PAM_BRAKEMODESTS_ACTIVE = 2;
    PAM_BRAKEMODESTS_MANEUVERFINISHED = 3;
    PAM_BRAKEMODESTS_SUSPEND = 4;
    PAM_BRAKEMODESTS_ABORT = 5;
  }
  enum Pam_failurebrakemodeType {
    PAM_FAILUREBRAKEMODE_IDLE_NO_BRAKING = 0;
    PAM_FAILUREBRAKEMODE_COMFORTABLE_RESERVED = 1;
    PAM_FAILUREBRAKEMODE_EMERGENCY = 2;
    PAM_FAILUREBRAKEMODE_RESERVED = 3;
  }

  // [] [0|7]
  optional Pam_esp_target_gear_requestType pam_esp_target_gear_request = 1;
  // [] [0|1]
  optional Pam_brakefunctionmodeType pam_brakefunctionmode = 2;
  // [] [0|1]
  optional Stopstartinhibit_apaType stopstartinhibit_apa = 3;
  // [] [0|1]
  optional Pam_apafType pam_apaf = 4;
  // [] [0|2]
  optional Pam_cmdepsstsType pam_cmdepssts = 5;
  // [] [0|7]
  optional Pam_stsType pam_sts = 6;
  // [] [0|7]
  optional Pam_brakemodestsType pam_brakemodests = 7;
  // [] [0|3]
  optional Pam_failurebrakemodeType pam_failurebrakemode = 8;
  // [kph] [0|25.4]
  optional float pam_esp_speed_target = 9;
  // [cm] [0|4094]
  optional int32 pam_esp_stop_distance = 10;
  // [] [0|15]
  optional int32 rolling_counter_0x270 = 11;
  // [] [0|255]
  optional int32 checksum_0x270 = 12;
  // [deg] [-780|779.7092]
  optional double pam_trgtepsstrgwhlang = 13;
}

message Pam_0x271_271 {
// Control Message
  enum Pam_infodisplayreqType {
    PAM_INFODISPLAYREQ_NO_REQUEST = 0;
    PAM_INFODISPLAYREQ_REQ_FORWARD_AGAIN = 1;
    PAM_INFODISPLAYREQ_REQ_TURN_LEVER = 2;
    PAM_INFODISPLAYREQ_REQ_GEAR_P = 3;
    PAM_INFODISPLAYREQ_REQ_CONFIRM_SWITCH = 4;
    PAM_INFODISPLAYREQ_REQ_SEARCHINGPROCESS = 5;
    PAM_INFODISPLAYREQ_REQ_DRIVE_FW = 6;
    PAM_INFODISPLAYREQ_REQ_STOP = 7;
    PAM_INFODISPLAYREQ_REQ_FUNCTION_SELECT = 8;
    PAM_INFODISPLAYREQ_REQ_FUNCTION_OFF = 9;
    PAM_INFODISPLAYREQ_REQ_PROCESS_BAR = 10;
    PAM_INFODISPLAYREQ_PPSC_REQUEST_ONLY = 11;
    PAM_INFODISPLAYREQ_CPSC_REQUEST_ONLY = 12;
    PAM_INFODISPLAYREQ_PPSC_CPSC_REQUEST = 13;
    PAM_INFODISPLAYREQ_REQ_GEAR_R = 14;
    PAM_INFODISPLAYREQ_REQ_GEAR_D = 15;
    PAM_INFODISPLAYREQ_REQ_DRIVE_BW = 16;
    PAM_INFODISPLAYREQ_REQ_SLOW_DOWN = 17;
    PAM_INFODISPLAYREQ_REQ_RELEASE_BRAKE_ANDSTEERING_WHEEL = 18;
    PAM_INFODISPLAYREQ_REQ_CLOSE_DOOR = 19;
    PAM_INFODISPLAYREQ_REQ_BUCKLE_SEAT_BELT = 20;
    PAM_INFODISPLAYREQ_REQ_REPRESS_DEAD_MAN_SWITCH = 21;
    PAM_INFODISPLAYREQ_REQ_PRESS_BRAKE_PEDAL = 22;
    PAM_INFODISPLAYREQ_REQ_GEAR_R_AND_BRAKE = 23;
    PAM_INFODISPLAYREQ_REQ_FUNCTION_COMPLETE = 24;
    PAM_INFODISPLAYREQ_REQ_FUNCTION_NOT_AVAILABLE = 25;
    PAM_INFODISPLAYREQ_RESERVED = 26;
  }
  enum Pam_objectstsflmType {
    PAM_OBJECTSTSFLM_NO_OBJECT = 0;
    PAM_OBJECTSTSFLM_OBJECT_IN_ZONE_1 = 1;
    PAM_OBJECTSTSFLM_OBJECT_ZONE_2 = 2;
    PAM_OBJECTSTSFLM_OBJECT_ZONE_3 = 3;
    PAM_OBJECTSTSFLM_OBJECT_ZONE_4 = 4;
    PAM_OBJECTSTSFLM_OBJECT_ZONE_5 = 5;
  }
  enum Pam_objectstsflcType {
    PAM_OBJECTSTSFLC_NO_OBJECT = 0;
    PAM_OBJECTSTSFLC_OBJECT_IN_ZONE_1 = 1;
    PAM_OBJECTSTSFLC_OBJECT_ZONE_2 = 2;
    PAM_OBJECTSTSFLC_OBJECT_ZONE_3 = 3;
  }
  enum Pam_objectstsfrcType {
    PAM_OBJECTSTSFRC_NO_OBJECT = 0;
    PAM_OBJECTSTSFRC_OBJECT_IN_ZONE_1 = 1;
    PAM_OBJECTSTSFRC_OBJECT_ZONE_2 = 2;
    PAM_OBJECTSTSFRC_OBJECT_ZONE_3 = 3;
  }
  enum Pam_objectstsfrmType {
    PAM_OBJECTSTSFRM_NO_OBJECT = 0;
    PAM_OBJECTSTSFRM_OBJECT_IN_ZONE_1 = 1;
    PAM_OBJECTSTSFRM_OBJECT_ZONE_2 = 2;
    PAM_OBJECTSTSFRM_OBJECT_ZONE_3 = 3;
    PAM_OBJECTSTSFRM_OBJECT_ZONE_4 = 4;
    PAM_OBJECTSTSFRM_OBJECT_ZONE_5 = 5;
  }
  enum Pam_objectstsrlmType {
    PAM_OBJECTSTSRLM_NO_OBJECT = 0;
    PAM_OBJECTSTSRLM_OBJECT_IN_ZONE1 = 1;
    PAM_OBJECTSTSRLM_OBJECT_ZONE2 = 2;
    PAM_OBJECTSTSRLM_OBJECT_ZONE3 = 3;
    PAM_OBJECTSTSRLM_OBJECT_ZONE4 = 4;
    PAM_OBJECTSTSRLM_OBJECT_ZONE5 = 5;
    PAM_OBJECTSTSRLM_OBJECT_ZONE6 = 6;
    PAM_OBJECTSTSRLM_OBJECT_ZONE7 = 7;
    PAM_OBJECTSTSRLM_RESERVED = 8;
  }
  enum Pam_objectstsrlcType {
    PAM_OBJECTSTSRLC_NO_OBJECT = 0;
    PAM_OBJECTSTSRLC_OBJECT_IN_ZONE_1 = 1;
    PAM_OBJECTSTSRLC_OBJECT_ZONE_2 = 2;
    PAM_OBJECTSTSRLC_OBJECT_ZONE_3 = 3;
  }
  enum Pam_objectstsrrcType {
    PAM_OBJECTSTSRRC_NO_OBJECT = 0;
    PAM_OBJECTSTSRRC_OBJECT_IN_ZONE_1 = 1;
    PAM_OBJECTSTSRRC_OBJECT_ZONE_2 = 2;
    PAM_OBJECTSTSRRC_OBJECT_ZONE_3 = 3;
  }
  enum Pam_objectstsrrmType {
    PAM_OBJECTSTSRRM_NO_OBJECT = 0;
    PAM_OBJECTSTSRRM_OBJECT_IN_ZONE_1 = 1;
    PAM_OBJECTSTSRRM_OBJECT_ZONE_2 = 2;
    PAM_OBJECTSTSRRM_OBJECT_ZONE_3 = 3;
    PAM_OBJECTSTSRRM_OBJECT_ZONE_4 = 4;
    PAM_OBJECTSTSRRM_OBJECT_ZONE_5 = 5;
    PAM_OBJECTSTSRRM_OBJECT_ZONE_6 = 6;
    PAM_OBJECTSTSRRM_OBJECT_ZONE_7 = 7;
  }
  enum Pam_chimecmdsoundstatusType {
    PAM_CHIMECMDSOUNDSTATUS_NOWARNING = 0;
    PAM_CHIMECMDSOUNDSTATUS_FRONTSYSTEMWARNING = 1;
    PAM_CHIMECMDSOUNDSTATUS_REARSYSTEMWARNING = 2;
    PAM_CHIMECMDSOUNDSTATUS_APA = 3;
  }
  enum Pam_rearsystemworkstsType {
    PAM_REARSYSTEMWORKSTS_DISABLE = 0;
    PAM_REARSYSTEMWORKSTS_ENABLE = 1;
    PAM_REARSYSTEMWORKSTS_ACTIVE = 2;
    PAM_REARSYSTEMWORKSTS_FAILED = 3;
  }
  enum Pam_frontsystemworkstsType {
    PAM_FRONTSYSTEMWORKSTS_DISABLE = 0;
    PAM_FRONTSYSTEMWORKSTS_ENABLE = 1;
    PAM_FRONTSYSTEMWORKSTS_ACTIVE = 2;
    PAM_FRONTSYSTEMWORKSTS_FAILED = 3;
  }
  enum Pam_parkingbarstsType {
    PAM_PARKINGBARSTS_DISPLAY_OFF = 0;
    PAM_PARKINGBARSTS_DISPLAY_ON_FROM_TOP_TO_BOTTOM = 1;
    PAM_PARKINGBARSTS_DISPLAY_ON_FROM_BOTTOM_TO_TOP = 2;
  }
  enum Pam_chimecmdsoundcadenceType {
    PAM_CHIMECMDSOUNDCADENCE_TONE_0_NO_WARNING = 0;
    PAM_CHIMECMDSOUNDCADENCE_TONE_1 = 1;
    PAM_CHIMECMDSOUNDCADENCE_TONE_2 = 2;
    PAM_CHIMECMDSOUNDCADENCE_TONE_3 = 3;
    PAM_CHIMECMDSOUNDCADENCE_TONE_4 = 4;
    PAM_CHIMECMDSOUNDCADENCE_TONE_5 = 5;
    PAM_CHIMECMDSOUNDCADENCE_TONE_6 = 6;
    PAM_CHIMECMDSOUNDCADENCE_TONE_7 = 7;
    PAM_CHIMECMDSOUNDCADENCE_RPA_NOK = 8;
    PAM_CHIMECMDSOUNDCADENCE_RPA_OK = 9;
    PAM_CHIMECMDSOUNDCADENCE_TONE_10_PAM_FAILED_TONE = 10;
    PAM_CHIMECMDSOUNDCADENCE_TONE_11_PAM_WARNING_TONE = 11;
    PAM_CHIMECMDSOUNDCADENCE_TONE_12_PAM_SUCCESSFUL_TONE = 12;
  }
  enum Pam_parkingbarpercentType {
    PAM_PARKINGBARPERCENT_0PERCENT = 0;
    PAM_PARKINGBARPERCENT_1PERCENT = 1;
    PAM_PARKINGBARPERCENT_2PERCENT = 2;
    PAM_PARKINGBARPERCENT_3PERCENT = 3;
    PAM_PARKINGBARPERCENT_4PERCENT = 4;
    PAM_PARKINGBARPERCENT_5PERCENT = 5;
    PAM_PARKINGBARPERCENT_6PERCENT = 6;
    PAM_PARKINGBARPERCENT_7PERCENT = 7;
    PAM_PARKINGBARPERCENT_8PERCENT = 8;
    PAM_PARKINGBARPERCENT_9PERCENT = 9;
    PAM_PARKINGBARPERCENT_10PERCENT = 10;
    PAM_PARKINGBARPERCENT_11PERCENT = 11;
    PAM_PARKINGBARPERCENT_12PERCENT = 12;
    PAM_PARKINGBARPERCENT_13PERCENT = 13;
    PAM_PARKINGBARPERCENT_14PERCENT = 14;
    PAM_PARKINGBARPERCENT_15PERCENT = 15;
    PAM_PARKINGBARPERCENT_16PERCENT = 16;
    PAM_PARKINGBARPERCENT_17PERCENT = 17;
    PAM_PARKINGBARPERCENT_18PERCENT = 18;
    PAM_PARKINGBARPERCENT_19PERCENT = 19;
    PAM_PARKINGBARPERCENT_20PERCENT = 20;
    PAM_PARKINGBARPERCENT_21PERCENT = 21;
    PAM_PARKINGBARPERCENT_22PERCENT = 22;
    PAM_PARKINGBARPERCENT_23PERCENT = 23;
    PAM_PARKINGBARPERCENT_24PERCENT = 24;
    PAM_PARKINGBARPERCENT_25PERCENT = 25;
    PAM_PARKINGBARPERCENT_26PERCENT = 26;
    PAM_PARKINGBARPERCENT_27PERCENT = 27;
    PAM_PARKINGBARPERCENT_28PERCENT = 28;
    PAM_PARKINGBARPERCENT_29PERCENT = 29;
    PAM_PARKINGBARPERCENT_30PERCENT = 30;
    PAM_PARKINGBARPERCENT_31PERCENT = 31;
    PAM_PARKINGBARPERCENT_32PERCENT = 32;
    PAM_PARKINGBARPERCENT_33PERCENT = 33;
    PAM_PARKINGBARPERCENT_34PERCENT = 34;
    PAM_PARKINGBARPERCENT_35PERCENT = 35;
    PAM_PARKINGBARPERCENT_36PERCENT = 36;
    PAM_PARKINGBARPERCENT_37PERCENT = 37;
    PAM_PARKINGBARPERCENT_38PERCENT = 38;
    PAM_PARKINGBARPERCENT_39PERCENT = 39;
    PAM_PARKINGBARPERCENT_40PERCENT = 40;
    PAM_PARKINGBARPERCENT_41PERCENT = 41;
    PAM_PARKINGBARPERCENT_42PERCENT = 42;
    PAM_PARKINGBARPERCENT_43PERCENT = 43;
    PAM_PARKINGBARPERCENT_44PERCENT = 44;
    PAM_PARKINGBARPERCENT_45PERCENT = 45;
    PAM_PARKINGBARPERCENT_46PERCENT = 46;
    PAM_PARKINGBARPERCENT_47PERCENT = 47;
    PAM_PARKINGBARPERCENT_48PERCENT = 48;
    PAM_PARKINGBARPERCENT_49PERCENT = 49;
    PAM_PARKINGBARPERCENT_50PERCENT = 50;
    PAM_PARKINGBARPERCENT_51PERCENT = 51;
    PAM_PARKINGBARPERCENT_52PERCENT = 52;
    PAM_PARKINGBARPERCENT_53PERCENT = 53;
    PAM_PARKINGBARPERCENT_54PERCENT = 54;
    PAM_PARKINGBARPERCENT_55PERCENT = 55;
    PAM_PARKINGBARPERCENT_56PERCENT = 56;
    PAM_PARKINGBARPERCENT_57PERCENT = 57;
    PAM_PARKINGBARPERCENT_58PERCENT = 58;
    PAM_PARKINGBARPERCENT_59PERCENT = 59;
    PAM_PARKINGBARPERCENT_60PERCENT = 60;
    PAM_PARKINGBARPERCENT_61PERCENT = 61;
    PAM_PARKINGBARPERCENT_62PERCENT = 62;
    PAM_PARKINGBARPERCENT_63PERCENT = 63;
    PAM_PARKINGBARPERCENT_64PERCENT = 64;
    PAM_PARKINGBARPERCENT_65PERCENT = 65;
    PAM_PARKINGBARPERCENT_66PERCENT = 66;
    PAM_PARKINGBARPERCENT_67PERCENT = 67;
    PAM_PARKINGBARPERCENT_68PERCENT = 68;
    PAM_PARKINGBARPERCENT_69PERCENT = 69;
    PAM_PARKINGBARPERCENT_70PERCENT = 70;
    PAM_PARKINGBARPERCENT_71PERCENT = 71;
    PAM_PARKINGBARPERCENT_72PERCENT = 72;
    PAM_PARKINGBARPERCENT_73PERCENT = 73;
    PAM_PARKINGBARPERCENT_74PERCENT = 74;
    PAM_PARKINGBARPERCENT_75PERCENT = 75;
    PAM_PARKINGBARPERCENT_76PERCENT = 76;
    PAM_PARKINGBARPERCENT_77PERCENT = 77;
    PAM_PARKINGBARPERCENT_78PERCENT = 78;
    PAM_PARKINGBARPERCENT_79PERCENT = 79;
    PAM_PARKINGBARPERCENT_80PERCENT = 80;
    PAM_PARKINGBARPERCENT_81PERCENT = 81;
    PAM_PARKINGBARPERCENT_82PERCENT = 82;
    PAM_PARKINGBARPERCENT_83PERCENT = 83;
    PAM_PARKINGBARPERCENT_84PERCENT = 84;
    PAM_PARKINGBARPERCENT_85PERCENT = 85;
    PAM_PARKINGBARPERCENT_86PERCENT = 86;
    PAM_PARKINGBARPERCENT_87PERCENT = 87;
    PAM_PARKINGBARPERCENT_88PERCENT = 88;
    PAM_PARKINGBARPERCENT_89PERCENT = 89;
    PAM_PARKINGBARPERCENT_90PERCENT = 90;
    PAM_PARKINGBARPERCENT_91PERCENT = 91;
    PAM_PARKINGBARPERCENT_92PERCENT = 92;
    PAM_PARKINGBARPERCENT_93PERCENT = 93;
    PAM_PARKINGBARPERCENT_94PERCENT = 94;
    PAM_PARKINGBARPERCENT_95PERCENT = 95;
    PAM_PARKINGBARPERCENT_96PERCENT = 96;
    PAM_PARKINGBARPERCENT_97PERCENT = 97;
    PAM_PARKINGBARPERCENT_98PERCENT = 98;
    PAM_PARKINGBARPERCENT_99PERCENT = 99;
    PAM_PARKINGBARPERCENT_100PERCENT = 100;
    PAM_PARKINGBARPERCENT_NO_DISPLAY_APA = 101;
  }
  // [] [0|255]
  optional Pam_infodisplayreqType pam_infodisplayreq = 1;
  // [] [0|15]
  optional Pam_objectstsflmType pam_objectstsflm = 2;
  // [] [0|15]
  optional Pam_objectstsflcType pam_objectstsflc = 3;
  // [] [0|15]
  optional Pam_objectstsfrcType pam_objectstsfrc = 4;
  // [] [0|15]
  optional Pam_objectstsfrmType pam_objectstsfrm = 5;
  // [] [0|15]
  optional Pam_objectstsrlmType pam_objectstsrlm = 6;
  // [] [0|15]
  optional Pam_objectstsrlcType pam_objectstsrlc = 7;
  // [] [0|15]
  optional Pam_objectstsrrcType pam_objectstsrrc = 8;
  // [] [0|15]
  optional Pam_objectstsrrmType pam_objectstsrrm = 9;
  // [] [0|3]
  optional Pam_chimecmdsoundstatusType pam_chimecmdsoundstatus = 10;
  // [] [0|3]
  optional Pam_rearsystemworkstsType pam_rearsystemworksts = 11;
  // [] [0|3]
  optional Pam_frontsystemworkstsType pam_frontsystemworksts = 12;
  // [] [0|2]
  optional Pam_parkingbarstsType pam_parkingbarsts = 13;
  // [] [0|14]
  optional Pam_chimecmdsoundcadenceType pam_chimecmdsoundcadence = 14;
  // [%] [0|100]
  optional Pam_parkingbarpercentType pam_parkingbarpercent = 15;
}

message Pam_0x272_272 {
// Control Message
  enum Apa_parkslot_stateType {
    APA_PARKSLOT_STATE_NO_SLOT = 0;
    APA_PARKSLOT_STATE_SLOT_LEFT = 1;
    APA_PARKSLOT_STATE_SLOT_RIGHT = 2;
    APA_PARKSLOT_STATE_INVALID = 3;
  }
  enum Sdg_objectsts_frsType {
    SDG_OBJECTSTS_FRS_NO_OBJECT = 0;
    SDG_OBJECTSTS_FRS_OBJECT_IN_ZONE_1 = 1;
    SDG_OBJECTSTS_FRS_OBJECT_IN_ZONE_2 = 2;
    SDG_OBJECTSTS_FRS_OBJECT_IN_ZONE_3 = 3;
  }
  enum Sdg_objectstsrlsType {
    SDG_OBJECTSTSRLS_NO_OBJECT = 0;
    SDG_OBJECTSTSRLS_OBJECT_IN_ZONE_1 = 1;
    SDG_OBJECTSTSRLS_OBJECT_IN_ZONE_2 = 2;
    SDG_OBJECTSTSRLS_OBJECT_IN_ZONE_3 = 3;
  }
  enum Apa_selectedsideType {
    APA_SELECTEDSIDE_NONE = 0;
    APA_SELECTEDSIDE_LEFT = 1;
    APA_SELECTEDSIDE_RIGHT = 2;
    APA_SELECTEDSIDE_RESERVED = 3;
  }
  enum Sdg_objectstsrrsType {
    SDG_OBJECTSTSRRS_NO_OBJECT = 0;
    SDG_OBJECTSTSRRS_OBJECT_IN_ZONE_1 = 1;
    SDG_OBJECTSTSRRS_OBJECT_IN_ZONE_2 = 2;
    SDG_OBJECTSTSRRS_OBJECT_IN_ZONE_3 = 3;
  }
  enum Sdg_objectstsfrs_rrsType {
    SDG_OBJECTSTSFRS_RRS_NO_OBJECT = 0;
    SDG_OBJECTSTSFRS_RRS_OBJECT_IN_ZONE_1 = 1;
    SDG_OBJECTSTSFRS_RRS_OBJECT_IN_ZONE_2 = 2;
    SDG_OBJECTSTSFRS_RRS_OBJECT_IN_ZONE_3 = 3;
  }
  enum Apa_quit_indicationType {
    APA_QUIT_INDICATION_NO_REQUEST = 0;
    APA_QUIT_INDICATION_REQ_QUIT_EXTERNAL_ECU_FAILURE = 1;
    APA_QUIT_INDICATION_REQ_QUIT_APA_FAILURE = 2;
    APA_QUIT_INDICATION_REQ_QUIT_SPEED_HIGH = 3;
    APA_QUIT_INDICATION_REQ_QUIT_TIMING_OVERFLOW = 4;
    APA_QUIT_INDICATION_REQ_QUIT_MOVE_TIMES_OVERFLOW = 5;
    APA_QUIT_INDICATION_REQ_QUIT_RECOVER_INT_TIMS_OVERFLOW = 6;
    APA_QUIT_INDICATION_REQ_QUIT_GAS_PEDAL = 7;
    APA_QUIT_INDICATION_REQ_QUIT_GEAR_INTERVENTION = 8;
    APA_QUIT_INDICATION_REQ_QUIT_EXTERNAL_ECU_ACTVIE = 9;
    APA_QUIT_INDICATION_REQ_QUIT_ACC = 10;
    APA_QUIT_INDICATION_REQ_QUIT_TRAJECTORY = 11;
    APA_QUIT_INDICATION_REQ_QUIT_SPACE_LIMIT = 12;
    APA_QUIT_INDICATION_REQ_QUIT_NO_OBJECT_IN_FRONT = 13;
    APA_QUIT_INDICATION_REQ_QUIT_SEAT_BELT_UNBUCKLE = 14;
    APA_QUIT_INDICATION_REQ_QUIT_DRIVER_DOOR = 15;
    APA_QUIT_INDICATION_REQ_QUIT_EPB_APPLY = 16;
    APA_QUIT_INDICATION_REQ_QUIT_VEHICLE_BLOCK = 17;
    APA_QUIT_INDICATION_REQ_QUIT_GEAR_INTERRUPT = 18;
    APA_QUIT_INDICATION_REQ_QUIT_STEERING_WHEEL_HANDS_ON = 19;
    APA_QUIT_INDICATION_REQ_QUIT_ABOVE_SLOPE_LIMT = 20;
    APA_QUIT_INDICATION_RESERVED = 21;
  }
  enum Apa_recover_int_indicationType {
    APA_RECOVER_INT_INDICATION_NO_REQUEST = 0;
    APA_RECOVER_INT_INDICATION_REQ_RECOVER_DEAD_MAN_SWITCH_RELEASE = 1;
    APA_RECOVER_INT_INDICATION_REQ_RECOVER_FOUND_OBSTACLE_IN_TRAJECTORY = 2;
    APA_RECOVER_INT_INDICATION_REQ_RECOVER_NON_DRIVER_DOOR_OPEN = 3;
    APA_RECOVER_INT_INDICATION_REQ_RECOVER_BRAKE_PEDAL_RELEASE = 4;
    APA_RECOVER_INT_INDICATION_RESERVED = 5;
  }
  enum Sdg_objectstsfls_rlsType {
    SDG_OBJECTSTSFLS_RLS_NO_OBJECT = 0;
    SDG_OBJECTSTSFLS_RLS_OBJECT_IN_ZONE_1 = 1;
    SDG_OBJECTSTSFLS_RLS_OBJECT_IN_ZONE_2 = 2;
    SDG_OBJECTSTSFLS_RLS_OBJECT_IN_ZONE_3 = 3;
  }
  enum Apa_indicationType {
    APA_INDICATION_NO_ACTIVE = 0;
    APA_INDICATION_PPSC_ACTIVE = 1;
    APA_INDICATION_CPSC_ACTIVE = 2;
    APA_INDICATION_POC_ACTIVE = 3;
    APA_INDICATION_RESERVED = 4;
  }
  enum Sdg_objectstsflsType {
    SDG_OBJECTSTSFLS_NO_OBJECT = 0;
    SDG_OBJECTSTSFLS_OBJECT_IN_ZONE_1 = 1;
    SDG_OBJECTSTSFLS_OBJECT_IN_ZONE_2 = 2;
    SDG_OBJECTSTSFLS_OBJECT_IN_ZONE_3 = 3;
  }
  // [] [0|3]
  optional Apa_parkslot_stateType apa_parkslot_state = 1;
  // [] [0|7]
  optional Sdg_objectsts_frsType sdg_objectsts_frs = 2;
  // [] [0|7]
  optional Sdg_objectstsrlsType sdg_objectstsrls = 3;
  // [] [0|3]
  optional Apa_selectedsideType apa_selectedside = 4;
  // [] [0|7]
  optional Sdg_objectstsrrsType sdg_objectstsrrs = 5;
  // [] [0|7]
  optional Sdg_objectstsfrs_rrsType sdg_objectstsfrs_rrs = 6;
  // [] [0|31]
  optional Apa_quit_indicationType apa_quit_indication = 7;
  // [] [0|7]
  optional Apa_recover_int_indicationType apa_recover_int_indication = 8;
  // [] [0|7]
  optional Sdg_objectstsfls_rlsType sdg_objectstsfls_rls = 9;
  // [] [0|7]
  optional Apa_indicationType apa_indication = 10;
  // [] [0|7]
  optional Sdg_objectstsflsType sdg_objectstsfls = 11;
}

message Mrr_0x238_238 {
// Report Message
  // [m s2] [0|3.2]
  optional double acc_tgtaxlowercomftband = 1;
  // [m s3] [0|12.7]
  optional double acc_tgtaxupperlim = 2;
  // [m s3] [-12.7|0]
  optional double acc_tgtaxlowerlim = 3;
  // [m s2] [-5|7.75]
  optional double acc_tgtax = 4;
  // [] [0|15]
  optional int32 rolling_counter_0x238 = 5;
  // [] [0|255]
  optional int32 checksum_0x238 = 6;
  // [m s2] [0|3.2]
  optional double acc_tgtaxuppercomftband = 7;
}

message Mrr_0x239_239 {
// Report Message
  enum Acc_uppercomftbandreqType {
    ACC_UPPERCOMFTBANDREQ_NO_DEMAND = 0;
    ACC_UPPERCOMFTBANDREQ_DEMAND = 1;
  }
  enum Acc_brakepreferredType {
    ACC_BRAKEPREFERRED_NO_DEMAND = 0;
    ACC_BRAKEPREFERRED_DEMAND = 1;
  }
  enum Eba_reqType {
    EBA_REQ_NO_DEMAND = 0;
    EBA_REQ_DEMAND = 1;
  }
  enum Aeb_reqType {
    AEB_REQ_NO_DEMAND = 0;
    AEB_REQ_DEMAND = 1;
  }
  enum Acc_standstillreqType {
    ACC_STANDSTILLREQ_NO_DEMAND = 0;
    ACC_STANDSTILLREQ_DEMAND = 1;
  }
  enum Acc_driveoffType {
    ACC_DRIVEOFF_NO_DEMAND = 0;
    ACC_DRIVEOFF_DEMAND = 1;
  }
  enum Awb_levelType {
    AWB_LEVEL_NO_LEVEL = 0;
    AWB_LEVEL_LEVEL_1 = 1;
    AWB_LEVEL_LEVEL_2 = 2;
    AWB_LEVEL_LEVEL_3 = 3;
    AWB_LEVEL_LEVEL_4 = 4;
  }
  enum Abp_reqType {
    ABP_REQ_NO_DEMAND = 0;
    ABP_REQ_DEMAND = 1;
  }
  enum Awb_reqType {
    AWB_REQ_NO_DEMAND = 0;
    AWB_REQ_DEMAND = 1;
  }
  enum Aba_reqType {
    ABA_REQ_NO_DEMAND = 0;
    ABA_REQ_DEMAND = 1;
  }
  enum Acc_stateType {
    ACC_STATE_OFF_MODE = 0;
    ACC_STATE_PASSIVE_MODE = 1;
    ACC_STATE_STAND_BY_MODE = 2;
    ACC_STATE_ACTIVE_CONTROL_MODE = 3;
    ACC_STATE_BRAKE_ONLY_MODE = 4;
    ACC_STATE_OVERRIDE = 5;
    ACC_STATE_STANDSTILL = 6;
    ACC_STATE_FAILURE_MODE = 7;
  }
  enum ShutdownmodeType {
    SHUTDOWNMODE_SOFT_OFF = 0;
    SHUTDOWNMODE_FAST_OFF = 1;
    SHUTDOWNMODE_RESERVED = 2;
    SHUTDOWNMODE_INITIAL = 3;
  }
  enum Aba_levelType {
    ABA_LEVEL_LEVEL_0 = 0;
    ABA_LEVEL_LEVEL_1 = 1;
    ABA_LEVEL_LEVEL_2 = 2;
    ABA_LEVEL_LEVEL_3 = 3;
  }
  // [] [0|1]
  optional Acc_uppercomftbandreqType acc_uppercomftbandreq = 1;
  // [] [0|1]
  optional Acc_brakepreferredType acc_brakepreferred = 2;
  // [] [0|1]
  optional Eba_reqType eba_req = 3;
  // [] [0|1]
  optional Aeb_reqType aeb_req = 4;
  // [] [0|1]
  optional Acc_standstillreqType acc_standstillreq = 5;
  // [] [0|1]
  optional Acc_driveoffType acc_driveoff = 6;
  // [] [0|15]
  optional Awb_levelType awb_level = 7;
  // [] [0|1]
  optional Abp_reqType abp_req = 8;
  // [] [0|1]
  optional Awb_reqType awb_req = 9;
  // [] [0|1]
  optional Aba_reqType aba_req = 10;
  // [m s2] [-16|16]
  optional double aeb_tgtax = 11;
  // [] [0|7]
  optional Acc_stateType acc_state = 12;
  // [] [0|15]
  optional int32 rolling_counter_0x239 = 13;
  // [] [0|255]
  optional int32 checksum_0x239 = 14;
  // [] [0|3]
  optional ShutdownmodeType shutdownmode = 15;
  // [] [0|3]
  optional Aba_levelType aba_level = 16;
}

message Esp_direction_0x235_235 {
// Report Message
  enum Esp_frwheeldrivedirstatusType {
    ESP_FRWHEELDRIVEDIRSTATUS_VALID = 0;
    ESP_FRWHEELDRIVEDIRSTATUS_INVALID = 1;
  }
  enum Esp_flwheeldrivedirstatusType {
    ESP_FLWHEELDRIVEDIRSTATUS_VALID = 0;
    ESP_FLWHEELDRIVEDIRSTATUS_INVALID = 1;
  }
  enum Esp_rrwheeldrivedirstatusType {
    ESP_RRWHEELDRIVEDIRSTATUS_VALID = 0;
    ESP_RRWHEELDRIVEDIRSTATUS_INVALID = 1;
  }
  enum Esp_rlwheeldrivedirstatusType {
    ESP_RLWHEELDRIVEDIRSTATUS_VALID = 0;
    ESP_RLWHEELDRIVEDIRSTATUS_INVALID = 1;
  }
  enum Esp_rrwheeldrivedirectionType {
    ESP_RRWHEELDRIVEDIRECTION_UNDEFINED = 0;
    ESP_RRWHEELDRIVEDIRECTION_STANDSTILL = 1;
    ESP_RRWHEELDRIVEDIRECTION_FORWARD = 2;
    ESP_RRWHEELDRIVEDIRECTION_BACKWARD = 3;
  }
  enum Esp_rlwheeldrivedirectionType {
    ESP_RLWHEELDRIVEDIRECTION_UNDEFINED = 0;
    ESP_RLWHEELDRIVEDIRECTION_STANDSTILL = 1;
    ESP_RLWHEELDRIVEDIRECTION_FORWARD = 2;
    ESP_RLWHEELDRIVEDIRECTION_BACKWARD = 3;
  }
  enum Esp_frwheeldrivedirectionType {
    ESP_FRWHEELDRIVEDIRECTION_UNDEFINED = 0;
    ESP_FRWHEELDRIVEDIRECTION_STANDSTILL = 1;
    ESP_FRWHEELDRIVEDIRECTION_FORWARD = 2;
    ESP_FRWHEELDRIVEDIRECTION_BACKWARD = 3;
  }
  enum Esp_flwheeldrivedirectionType {
    ESP_FLWHEELDRIVEDIRECTION_UNDEFINED = 0;
    ESP_FLWHEELDRIVEDIRECTION_STANDSTILL = 1;
    ESP_FLWHEELDRIVEDIRECTION_FORWARD = 2;
    ESP_FLWHEELDRIVEDIRECTION_BACKWARD = 3;
  }
  enum Esp_whlmilgrearlestatusType {
    ESP_WHLMILGREARLESTATUS_VALID = 0;
    ESP_WHLMILGREARLESTATUS_INVALID = 1;
  }
  enum Esp_whlmilgrearristatusType {
    ESP_WHLMILGREARRISTATUS_VALID = 0;
    ESP_WHLMILGREARRISTATUS_INVALID = 1;
  }
  enum Esp_vehiclestandstillType {
    ESP_VEHICLESTANDSTILL_NOT_STANDSTILL = 0;
    ESP_VEHICLESTANDSTILL_STANDSTILL = 1;
    ESP_VEHICLESTANDSTILL_INVALID = 2;
  }
  // [edge] [0|65535]
  optional int32 esp_whlmilgrearre = 1;
  // [] [0|1]
  optional Esp_frwheeldrivedirstatusType esp_frwheeldrivedirstatus = 2;
  // [] [0|1]
  optional Esp_flwheeldrivedirstatusType esp_flwheeldrivedirstatus = 3;
  // [] [0|1]
  optional Esp_rrwheeldrivedirstatusType esp_rrwheeldrivedirstatus = 4;
  // [] [0|1]
  optional Esp_rlwheeldrivedirstatusType esp_rlwheeldrivedirstatus = 5;
  // [] [0|3]
  optional Esp_rrwheeldrivedirectionType esp_rrwheeldrivedirection = 6;
  // [] [0|3]
  optional Esp_rlwheeldrivedirectionType esp_rlwheeldrivedirection = 7;
  // [] [0|3]
  optional Esp_frwheeldrivedirectionType esp_frwheeldrivedirection = 8;
  // [] [0|3]
  optional Esp_flwheeldrivedirectionType esp_flwheeldrivedirection = 9;
  // [] [0|15]
  optional int32 rolling_counter_0x235 = 10;
  // [] [0|1]
  optional Esp_whlmilgrearlestatusType esp_whlmilgrearlestatus = 11;
  // [] [0|1]
  optional Esp_whlmilgrearristatusType esp_whlmilgrearristatus = 12;
  // [] [0|3]
  optional Esp_vehiclestandstillType esp_vehiclestandstill = 13;
  // [] [0|255]
  optional int32 checksum_0x235 = 14;
  // [edge] [0|65535]
  optional int32 esp_whlmilgrearle = 15;
}

message Esp_advanced_0x234_234 {
// Report Message
  enum Esp_vdcactiveType {
    ESP_VDCACTIVE_NOT_ACTIVE = 0;
    ESP_VDCACTIVE_ACTIVE = 1;
  }
  enum Esp_ebdactiveType {
    ESP_EBDACTIVE_NOT_ACTIVE = 0;
    ESP_EBDACTIVE_ACTIVE = 1;
  }
  enum Esp_ecdtempoffType {
    ESP_ECDTEMPOFF_NOT_HIGH = 0;
    ESP_ECDTEMPOFF_TEMP_TOO_HIGH = 1;
  }
  enum Esp_nobrakeforceType {
    ESP_NOBRAKEFORCE_EXIST_BRK_FORCE = 0;
    ESP_NOBRAKEFORCE_NO_BRK_FORCE = 1;
  }
  enum Esp_brkfrictqtotatwhlvaildType {
    ESP_BRKFRICTQTOTATWHLVAILD_VALID = 0;
    ESP_BRKFRICTQTOTATWHLVAILD_INVALID = 1;
  }
  enum Esp_aebdecavailableType {
    ESP_AEBDECAVAILABLE_NOT_AVAILABLE = 0;
    ESP_AEBDECAVAILABLE_AVAILABLE = 1;
  }
  enum Esp_aebdecactiveType {
    ESP_AEBDECACTIVE_NOT_ACTIVATED = 0;
    ESP_AEBDECACTIVE_ACTIVATED = 1;
  }
  enum Esp_prefillavailableType {
    ESP_PREFILLAVAILABLE_NOT_AVAILABLE = 0;
    ESP_PREFILLAVAILABLE_AVAILABLE = 1;
  }
  enum Esp_prefillactiveType {
    ESP_PREFILLACTIVE_NOT_ACTIVATED = 0;
    ESP_PREFILLACTIVE_ACTIVATED = 1;
  }
  enum Esp_abaavailableType {
    ESP_ABAAVAILABLE_NOT_AVAILABLE = 0;
    ESP_ABAAVAILABLE_AVAILABLE = 1;
  }
  enum Esp_abaactiveType {
    ESP_ABAACTIVE_NOT_ACTIVATED = 0;
    ESP_ABAACTIVE_ACTIVATED = 1;
  }
  enum Esp_cddavailableType {
    ESP_CDDAVAILABLE_NOT_AVAILABLE = 0;
    ESP_CDDAVAILABLE_AVAILABLE = 1;
  }
  enum Esp_dtcactiveType {
    ESP_DTCACTIVE_NOT_ACTIVATED = 0;
    ESP_DTCACTIVE_ACTIVATED = 1;
  }
  enum Esp_awbavailableType {
    ESP_AWBAVAILABLE_NOT_AVAILABLE = 0;
    ESP_AWBAVAILABLE_AVAILABLE = 1;
  }
  enum Esp_awbactiveType {
    ESP_AWBACTIVE_NOT_ACTIVATED = 0;
    ESP_AWBACTIVE_ACTIVATED = 1;
  }
  enum Esp_vlcerrorType {
    ESP_VLCERROR_NOT_ERROR = 0;
    ESP_VLCERROR_ERROR = 1;
  }
  enum Esp_cdderrorType {
    ESP_CDDERROR_NOT_ERROR = 0;
    ESP_CDDERROR_ERROR = 1;
  }
  enum Esp_cddactiveType {
    ESP_CDDACTIVE_NOT_ACTIVATED = 0;
    ESP_CDDACTIVE_ACTIVATED = 1;
  }
  enum Esp_cdd_apactiveType {
    ESP_CDD_APACTIVE_NOT_ACTIVATED = 0;
    ESP_CDD_APACTIVE_ACTIVATED = 1;
  }
  // [] [0|1]
  optional Esp_vdcactiveType esp_vdcactive = 1;
  // [] [0|1]
  optional Esp_ebdactiveType esp_ebdactive = 2;
  // [] [0|1]
  optional Esp_ecdtempoffType esp_ecdtempoff = 3;
  // [] [0|1]
  optional Esp_nobrakeforceType esp_nobrakeforce = 4;
  // [] [0|1]
  optional Esp_brkfrictqtotatwhlvaildType esp_brkfrictqtotatwhlvaild = 5;
  // [] [0|1]
  optional Esp_aebdecavailableType esp_aebdecavailable = 6;
  // [] [0|1]
  optional Esp_aebdecactiveType esp_aebdecactive = 7;
  // [] [0|1]
  optional Esp_prefillavailableType esp_prefillavailable = 8;
  // [] [0|1]
  optional Esp_prefillactiveType esp_prefillactive = 9;
  // [] [0|1]
  optional Esp_abaavailableType esp_abaavailable = 10;
  // [] [0|1]
  optional Esp_abaactiveType esp_abaactive = 11;
  // [] [0|1]
  optional Esp_cddavailableType esp_cddavailable = 12;
  // [] [0|1]
  optional Esp_dtcactiveType esp_dtcactive = 13;
  // [] [0|1]
  optional Esp_awbavailableType esp_awbavailable = 14;
  // [] [0|1]
  optional Esp_awbactiveType esp_awbactive = 15;
  // [] [0|10230]
  optional int32 esp_brkfrictqtotatwhl = 16;
  // [] [0|1]
  optional Esp_vlcerrorType esp_vlcerror = 17;
  // [] [0|1]
  optional Esp_cdderrorType esp_cdderror = 18;
  // [] [0|15]
  optional int32 rolling_counter_0x234 = 19;
  // [] [0|255]
  optional int32 checksum_0x234 = 20;
  // [] [0|1]
  optional Esp_cddactiveType esp_cddactive = 21;
  // [] [0|1]
  optional Esp_cdd_apactiveType esp_cdd_apactive = 22;
}

message Eps_advanced_0x176_176 {
  // Report Message
    enum Eps_tosionbartorquevalidType {
      EPS_TOSIONBARTORQUEVALID_VAILD = 0;
      EPS_TOSIONBARTORQUEVALID_INVALID = 1;
    }
    enum Eps_lkaresponsetorquevalidType {
      EPS_LKARESPONSETORQUEVALID_VAILD = 0;
      EPS_LKARESPONSETORQUEVALID_INVALID = 1;
    }
    enum Eps_ldwcontrolstatusType {
      EPS_LDWCONTROLSTATUS_DEACTIVATED = 0;
      EPS_LDWCONTROLSTATUS_INACTIVE = 1;
      EPS_LDWCONTROLSTATUS_ACTIVE = 2;
      EPS_LDWCONTROLSTATUS_RESERVED = 3;
    }
    enum Eps_pam_steeringsts_reservedType {
      EPS_PAM_STEERINGSTS_RESERVED_STEERING_POSITION_IS_OK = 0;
      EPS_PAM_STEERINGSTS_RESERVED_STEERING_POSITION_IS_ADJUSTING = 1;
    }
    enum Eps_lkacontrolstatusType {
      EPS_LKACONTROLSTATUS_NO_REQUEST = 0;
      EPS_LKACONTROLSTATUS_REQUEST_HONORED = 1;
      EPS_LKACONTROLSTATUS_CONTROL_REQUEST_NOT_ALLOWED_TEMPORARILY = 2;
      EPS_LKACONTROLSTATUS_CONTROL_REQUEST_NOT_ALLOWED_PERMANENT = 3;
    }
    enum Eps_epspaminhType {
      EPS_EPSPAMINH_NORMAL_OPERATION = 0;
      EPS_EPSPAMINH_OVER_SPEED = 1;
      EPS_EPSPAMINH_DRIVER_INTERFERENCE = 2;
      EPS_EPSPAMINH_ABNORMAL_CAN_INPUT = 4;
      EPS_EPSPAMINH_EXCESS_ANGLE_DEVIATION = 8;
      EPS_EPSPAMINH_EPS_FAILURE = 16;
    }
    enum Eps_epspamstsType {
      EPS_EPSPAMSTS_INHIBIT = 0;
      EPS_EPSPAMSTS_AVAILABLE = 1;
      EPS_EPSPAMSTS_ACTIVE = 2;
      EPS_EPSPAMSTS_ABORT = 3;
      EPS_EPSPAMSTS_REPLY_FOR_CONTROL = 4;
      EPS_EPSPAMSTS_NRCD_ACTIVE = 5;
      EPS_EPSPAMSTS_ADAS_ACTIVE = 6;
      EPS_EPSPAMSTS_FAILURE = 7;
    }
    // [Nm] [-10.24|10.22]
    optional double eps_lkaresponsetorque = 1;
    // [] [0|1]
    optional Eps_tosionbartorquevalidType eps_tosionbartorquevalid = 2;
    // [] [0|1]
    optional Eps_lkaresponsetorquevalidType eps_lkaresponsetorquevalid = 3;
    // [] [0|3]
    optional Eps_ldwcontrolstatusType eps_ldwcontrolstatus = 4;
    // [] [0|1]
    optional Eps_pam_steeringsts_reservedType eps_pam_steeringsts_reserved = 5;
    // [] [0|3]
    optional Eps_lkacontrolstatusType eps_lkacontrolstatus = 6;
    // [] [0|255]
    //optional Eps_epspaminhType eps_epspaminh = 7;
	optional int32 eps_epspaminh = 7;
    // [] [0|15]
    optional int32 rolling_counter_0x176 = 8;
    // [] [0|15]
    optional Eps_epspamstsType eps_epspamsts = 9;
    // [] [0|255]
    optional int32 checksum_0x176 = 10;
    // [Nm] [-10.24|10.22]
    optional double eps_torsionbartorque = 11;
  }

  message Esp_whlpulse_0x236_236 {
    // Report Message
      enum Esp_wheelpulse_rr_validType {
        ESP_WHEELPULSE_RR_VALID_VALID = 0;
        ESP_WHEELPULSE_RR_VALID_INVALID = 1;
      }
      enum Esp_wheelpulse_rl_validType {
        ESP_WHEELPULSE_RL_VALID_VALID = 0;
        ESP_WHEELPULSE_RL_VALID_INVALID = 1;
      }
      enum Esp_wheelpulse_fr_validType {
        ESP_WHEELPULSE_FR_VALID_VALID = 0;
        ESP_WHEELPULSE_FR_VALID_INVALID = 1;
      }
      enum Esp_wheelpulse_fl_validType {
        ESP_WHEELPULSE_FL_VALID_VALID = 0;
        ESP_WHEELPULSE_FL_VALID_INVALID = 1;
      }
      // [] [0|254]
      optional int32 esp_wheelpulse_fr = 1;
      // [] [0|254]
      optional int32 esp_wheelpulse_rl = 2;
      // [] [0|254]
      optional int32 esp_wheelpulse_rr = 3;
      // [] [0|15]
      optional int32 rollingcounter_esp_0x236 = 4;
      // [] [0|1]
      optional Esp_wheelpulse_rr_validType esp_wheelpulse_rr_valid = 5;
      // [] [0|1]
      optional Esp_wheelpulse_rl_validType esp_wheelpulse_rl_valid = 6;
      // [] [0|1]
      optional Esp_wheelpulse_fr_validType esp_wheelpulse_fr_valid = 7;
      // [] [0|1]
      optional Esp_wheelpulse_fl_validType esp_wheelpulse_fl_valid = 8;
      // [] [0|255]
      optional int32 checksum_esp_0x236 = 9;
      // [] [0|254]
      optional int32 esp_wheelpulse_fl = 10;
    }

    message Ipm_rightline_0x490_490 {
      // Control Message
        // [m] [-8|7.99609375]
        optional double ipm_rightline_dy = 1;
        // [m] [0|127.75]
        optional double ipm_rightline_dx_lookhead = 2;
        // [] [-0.015|0.0513]
        optional double ipm_rightline_hor_curve = 3;
        // [] [-1|0.999510695]
        optional double ipm_rightline_yawangle = 4;
        // [m] [0|63.75]
        optional double ipm_rightline_dx_start = 5;
      }

      message Sas_sensor_0x175_175 {
        // Report Message
          enum Sas_trimmingstsType {
            SAS_TRIMMINGSTS_NOT_TRIMMED = 0;
            SAS_TRIMMINGSTS_TRIMMED = 1;
          }
          enum Sas_steerwheelrotspdstatusType {
            SAS_STEERWHEELROTSPDSTATUS_VALID = 0;
            SAS_STEERWHEELROTSPDSTATUS_INVALID = 1;
          }
          enum Sas_sasstscalType {
            SAS_SASSTSCAL_SENSOR_NOT_CALIBRATED = 0;
            SAS_SASSTSCAL_SENSOR_CALIBRATED = 1;
          }
          enum Sas_raw_sasstssnsrType {
            SAS_RAW_SASSTSSNSR_SENSOR_VALUE_INVALID = 0;
            SAS_RAW_SASSTSSNSR_SENSOR_VALUE_VALID = 1;
          }
          enum Sas_sasstssnsrType {
            SAS_SASSTSSNSR_SENSOR_VALUE_INVALID = 0;
            SAS_SASSTSSNSR_SENSOR_VALUE_VALID = 1;
          }
          // [deg] [-780|779.7092]
          optional double sas_raw_steerwheelangle = 1;
          // [deg s] [-1024|1023.75]
          optional double sas_steerwheelrotspd = 2;
          // [] [0|1]
          optional Sas_trimmingstsType sas_trimmingsts = 3;
          // [] [0|1]
          optional Sas_steerwheelrotspdstatusType sas_steerwheelrotspdstatus = 4;
          // [] [0|15]
          optional int32 rolling_counter_0x175 = 5;
          // [] [0|1]
          optional Sas_sasstscalType sas_sasstscal = 6;
          // [] [0|1]
          optional Sas_raw_sasstssnsrType sas_raw_sasstssnsr = 7;
          // [] [0|1]
          optional Sas_sasstssnsrType sas_sasstssnsr = 8;
          // [] [0|255]
          optional int32 checksum_0x175 = 9;
          // [deg] [-780|779.7092]
          optional double sas_steerwheelangle = 10;
        }

message Gw_body_0x321_321 {
// Report Message
  enum Bcm_outsidetempdigType {
    BCM_OUTSIDETEMPDIG_NOFAULT = 0;
    BCM_OUTSIDETEMPDIG_SHORTCIRCUIT = 1;
    BCM_OUTSIDETEMPDIG_OPENCIRCUIT = 2;
  }
  enum Bcm_driving_mode_req_bcmType {
    BCM_DRIVING_MODE_REQ_BCM_NORMAL = 0;
    BCM_DRIVING_MODE_REQ_BCM_SNOW = 1;
    BCM_DRIVING_MODE_REQ_BCM_NOUSED = 2;
    BCM_DRIVING_MODE_REQ_BCM_SPORT = 3;
    BCM_DRIVING_MODE_REQ_BCM_ECO = 4;
    BCM_DRIVING_MODE_REQ_BCM_4L = 5;
    BCM_DRIVING_MODE_REQ_BCM_ROCK = 6;
    BCM_DRIVING_MODE_REQ_BCM_WETMUD = 7;
    BCM_DRIVING_MODE_REQ_BCM_SAND = 8;
    BCM_DRIVING_MODE_REQ_BCM_GHAT_FORN330L = 9;
    BCM_DRIVING_MODE_REQ_BCM_MANUAL_FORN330L = 13;
    BCM_DRIVING_MODE_REQ_BCM_ATSFAULTBCM = 14;
    BCM_DRIVING_MODE_REQ_BCM_INVALID = 15;
  }
  enum Bcm_powermodeType {
    BCM_POWERMODE_UNDEFINED = 0;
    BCM_POWERMODE_OFF = 1;
    BCM_POWERMODE_ACC = 2;
    BCM_POWERMODE_ON = 3;
    BCM_POWERMODE_START = 4;
  }
  enum Bcm_frntfoglmpstsType {
    BCM_FRNTFOGLMPSTS_INVALID = 0;
    BCM_FRNTFOGLMPSTS_OFF = 1;
    BCM_FRNTFOGLMPSTS_ON = 2;
    BCM_FRNTFOGLMPSTS_RESERVED = 3;
  }
  enum Bcm_lowbeamstsType {
    BCM_LOWBEAMSTS_INVALID = 0;
    BCM_LOWBEAMSTS_OFF = 1;
    BCM_LOWBEAMSTS_ON = 2;
    BCM_LOWBEAMSTS_RESERVED = 3;
  }
  enum Bcm_highbeamstsType {
    BCM_HIGHBEAMSTS_INVALID = 0;
    BCM_HIGHBEAMSTS_OFF = 1;
    BCM_HIGHBEAMSTS_ON = 2;
    BCM_HIGHBEAMSTS_RESERVED = 3;
  }
  enum Bcm_ss_enablestsType {
    BCM_SS_ENABLESTS_INVALID = 0;
    BCM_SS_ENABLESTS_STARTSTOPISALLOW = 1;
    BCM_SS_ENABLESTS_STARTSTOPISFORBID = 2;
    BCM_SS_ENABLESTS_RESERVED = 3;
  }
  enum Bcm_reardef_statusType {
    BCM_REARDEF_STATUS_INVALID = 0;
    BCM_REARDEF_STATUS_REARDEFINACTIVE = 1;
    BCM_REARDEF_STATUS_REARDEFACTIVE = 2;
    BCM_REARDEF_STATUS_RESERVED = 3;
  }
  enum Bcm_brakefluidstsType {
    BCM_BRAKEFLUIDSTS_INVALID = 0;
    BCM_BRAKEFLUIDSTS_NORMAL = 1;
    BCM_BRAKEFLUIDSTS_LOW = 2;
    BCM_BRAKEFLUIDSTS_RESERVED = 3;
  }
  enum Bcm_autolampstsType {
    BCM_AUTOLAMPSTS_INVALID = 0;
    BCM_AUTOLAMPSTS_INACTIVE = 1;
    BCM_AUTOLAMPSTS_ACTIVE = 2;
    BCM_AUTOLAMPSTS_RESERVED = 3;
  }
  enum Bcm_poslmpstsType {
    BCM_POSLMPSTS_NOUESD = 0;
    BCM_POSLMPSTS_OFF = 1;
    BCM_POSLMPSTS_ON = 2;
    BCM_POSLMPSTS_RESERVED = 3;
  }
  enum Bcm_bgllumlvlsettingType {
    BCM_BGLLUMLVLSETTING_0PERCENT = 0;
    BCM_BGLLUMLVLSETTING_1PERCENT = 1;
    BCM_BGLLUMLVLSETTING_2PERCENT = 2;
    BCM_BGLLUMLVLSETTING_3PERCENT = 3;
    BCM_BGLLUMLVLSETTING_4PERCENT = 4;
    BCM_BGLLUMLVLSETTING_5PERCENT = 5;
    BCM_BGLLUMLVLSETTING_6PERCENT = 6;
    BCM_BGLLUMLVLSETTING_7PERCENT = 7;
    BCM_BGLLUMLVLSETTING_8PERCENT = 8;
    BCM_BGLLUMLVLSETTING_9PERCENT = 9;
    BCM_BGLLUMLVLSETTING_10PERCENT = 10;
    BCM_BGLLUMLVLSETTING_11PERCENT = 11;
    BCM_BGLLUMLVLSETTING_12PERCENT = 12;
    BCM_BGLLUMLVLSETTING_13PERCENT = 13;
    BCM_BGLLUMLVLSETTING_14PERCENT = 14;
    BCM_BGLLUMLVLSETTING_15PERCENT = 15;
    BCM_BGLLUMLVLSETTING_16PERCENT = 16;
    BCM_BGLLUMLVLSETTING_17PERCENT = 17;
    BCM_BGLLUMLVLSETTING_18PERCENT = 18;
    BCM_BGLLUMLVLSETTING_19PERCENT = 19;
    BCM_BGLLUMLVLSETTING_20PERCENT = 20;
    BCM_BGLLUMLVLSETTING_21PERCENT = 21;
    BCM_BGLLUMLVLSETTING_22PERCENT = 22;
    BCM_BGLLUMLVLSETTING_23PERCENT = 23;
    BCM_BGLLUMLVLSETTING_24PERCENT = 24;
    BCM_BGLLUMLVLSETTING_25PERCENT = 25;
    BCM_BGLLUMLVLSETTING_26PERCENT = 26;
    BCM_BGLLUMLVLSETTING_27PERCENT = 27;
    BCM_BGLLUMLVLSETTING_28PERCENT = 28;
    BCM_BGLLUMLVLSETTING_29PERCENT = 29;
    BCM_BGLLUMLVLSETTING_30PERCENT = 30;
    BCM_BGLLUMLVLSETTING_31PERCENT = 31;
    BCM_BGLLUMLVLSETTING_32PERCENT = 32;
    BCM_BGLLUMLVLSETTING_33PERCENT = 33;
    BCM_BGLLUMLVLSETTING_34PERCENT = 34;
    BCM_BGLLUMLVLSETTING_35PERCENT = 35;
    BCM_BGLLUMLVLSETTING_36PERCENT = 36;
    BCM_BGLLUMLVLSETTING_37PERCENT = 37;
    BCM_BGLLUMLVLSETTING_38PERCENT = 38;
    BCM_BGLLUMLVLSETTING_39PERCENT = 39;
    BCM_BGLLUMLVLSETTING_40PERCENT = 40;
    BCM_BGLLUMLVLSETTING_41PERCENT = 41;
    BCM_BGLLUMLVLSETTING_42PERCENT = 42;
    BCM_BGLLUMLVLSETTING_43PERCENT = 43;
    BCM_BGLLUMLVLSETTING_44PERCENT = 44;
    BCM_BGLLUMLVLSETTING_45PERCENT = 45;
    BCM_BGLLUMLVLSETTING_46PERCENT = 46;
    BCM_BGLLUMLVLSETTING_47PERCENT = 47;
    BCM_BGLLUMLVLSETTING_48PERCENT = 48;
    BCM_BGLLUMLVLSETTING_49PERCENT = 49;
    BCM_BGLLUMLVLSETTING_50PERCENT = 50;
    BCM_BGLLUMLVLSETTING_51PERCENT = 51;
    BCM_BGLLUMLVLSETTING_52PERCENT = 52;
    BCM_BGLLUMLVLSETTING_53PERCENT = 53;
    BCM_BGLLUMLVLSETTING_54PERCENT = 54;
    BCM_BGLLUMLVLSETTING_55PERCENT = 55;
    BCM_BGLLUMLVLSETTING_56PERCENT = 56;
    BCM_BGLLUMLVLSETTING_57PERCENT = 57;
    BCM_BGLLUMLVLSETTING_58PERCENT = 58;
    BCM_BGLLUMLVLSETTING_59PERCENT = 59;
    BCM_BGLLUMLVLSETTING_60PERCENT = 60;
    BCM_BGLLUMLVLSETTING_61PERCENT = 61;
    BCM_BGLLUMLVLSETTING_62PERCENT = 62;
    BCM_BGLLUMLVLSETTING_63PERCENT = 63;
    BCM_BGLLUMLVLSETTING_64PERCENT = 64;
    BCM_BGLLUMLVLSETTING_65PERCENT = 65;
    BCM_BGLLUMLVLSETTING_66PERCENT = 66;
    BCM_BGLLUMLVLSETTING_67PERCENT = 67;
    BCM_BGLLUMLVLSETTING_68PERCENT = 68;
    BCM_BGLLUMLVLSETTING_69PERCENT = 69;
    BCM_BGLLUMLVLSETTING_70PERCENT = 70;
    BCM_BGLLUMLVLSETTING_71PERCENT = 71;
    BCM_BGLLUMLVLSETTING_72PERCENT = 72;
    BCM_BGLLUMLVLSETTING_73PERCENT = 73;
    BCM_BGLLUMLVLSETTING_74PERCENT = 74;
    BCM_BGLLUMLVLSETTING_75PERCENT = 75;
    BCM_BGLLUMLVLSETTING_76PERCENT = 76;
    BCM_BGLLUMLVLSETTING_77PERCENT = 77;
    BCM_BGLLUMLVLSETTING_78PERCENT = 78;
    BCM_BGLLUMLVLSETTING_79PERCENT = 79;
    BCM_BGLLUMLVLSETTING_80PERCENT = 80;
    BCM_BGLLUMLVLSETTING_81PERCENT = 81;
    BCM_BGLLUMLVLSETTING_82PERCENT = 82;
    BCM_BGLLUMLVLSETTING_83PERCENT = 83;
    BCM_BGLLUMLVLSETTING_84PERCENT = 84;
    BCM_BGLLUMLVLSETTING_85PERCENT = 85;
    BCM_BGLLUMLVLSETTING_86PERCENT = 86;
    BCM_BGLLUMLVLSETTING_87PERCENT = 87;
    BCM_BGLLUMLVLSETTING_88PERCENT = 88;
    BCM_BGLLUMLVLSETTING_89PERCENT = 89;
    BCM_BGLLUMLVLSETTING_90PERCENT = 90;
    BCM_BGLLUMLVLSETTING_91PERCENT = 91;
    BCM_BGLLUMLVLSETTING_92PERCENT = 92;
    BCM_BGLLUMLVLSETTING_93PERCENT = 93;
    BCM_BGLLUMLVLSETTING_94PERCENT = 94;
    BCM_BGLLUMLVLSETTING_95PERCENT = 95;
    BCM_BGLLUMLVLSETTING_96PERCENT = 96;
    BCM_BGLLUMLVLSETTING_97PERCENT = 97;
    BCM_BGLLUMLVLSETTING_98PERCENT = 98;
    BCM_BGLLUMLVLSETTING_99PERCENT = 99;
    BCM_BGLLUMLVLSETTING_100PERCENT = 100;
  }

  enum Bcm_reverse_gearType {
    BCM_REVERSE_GEAR_UNDEFINED = 0;
    BCM_REVERSE_GEAR_NOTINREVERSEGEAR = 1;
    BCM_REVERSE_GEAR_INREVERSEGEAR = 2;
    BCM_REVERSE_GEAR_RESERVED = 3;
  }
  // [] [0|3]
  optional Bcm_outsidetempdigType bcm_outsidetempdig = 1;
  // [degC] [-48|142.5]
  optional double bcm_outsidetemp = 2;
  // [] [0|15]
  optional Bcm_driving_mode_req_bcmType bcm_driving_mode_req_bcm = 3;
  // [] [0|7]
  optional Bcm_powermodeType bcm_powermode = 4;
  // [] [0|3]
  optional Bcm_frntfoglmpstsType bcm_frntfoglmpsts = 5;
  // [] [0|3]
  optional Bcm_lowbeamstsType bcm_lowbeamsts = 6;
  // [] [0|3]
  optional Bcm_highbeamstsType bcm_highbeamsts = 7;
  // [] [0|3]
  optional Bcm_ss_enablestsType bcm_ss_enablests = 8;
  // [] [0|3]
  optional Bcm_reardef_statusType bcm_reardef_status = 9;
  // [] [0|3]
  optional Bcm_brakefluidstsType bcm_brakefluidsts = 10;
  // [] [0|3]
  optional Bcm_autolampstsType bcm_autolampsts = 11;
  // [] [0|3]
  optional Bcm_poslmpstsType bcm_poslmpsts = 12;
  // [%] [0|255]
  optional Bcm_bgllumlvlsettingType bcm_bgllumlvlsetting = 13;
  // [] [0|3]
  optional Bcm_reverse_gearType bcm_reverse_gear = 14;
}

message Ipm_leftline_0x278_278 {
  // Control Message
    // [m] [-8|7.99609375]
    optional double ipm_leftline_dy = 1;
    // [m] [0|127.75]
    optional double ipm_leftline_dx_lookhead = 2;
    // [] [-0.015|0.0513]
    optional double ipm_leftline_hor_curve = 3;
    // [] [-1|0.999510695]
    optional double ipm_leftline_yawangle = 4;
    // [m] [0|63.75]
    optional double ipm_ledtline_dx_start = 5;
  }

message Gw_ems_engstatus_0x142_142 {
  // Report Message
    enum Ems_engoperationstatusType {
      EMS_ENGOPERATIONSTATUS_STOPPED = 0;
      EMS_ENGOPERATIONSTATUS_RUNNING = 1;
      EMS_ENGOPERATIONSTATUS_IDLE = 2;
      EMS_ENGOPERATIONSTATUS_DFCO_RESERVED = 3;
      EMS_ENGOPERATIONSTATUS_CRANKING = 4;
      EMS_ENGOPERATIONSTATUS_STALLING = 5;
    }
    enum Ems_aircompressorstatusType {
      EMS_AIRCOMPRESSORSTATUS_OFF = 0;
      EMS_AIRCOMPRESSORSTATUS_ON = 1;
    }
    enum Ems_throttleplatepositionerrorType {
      EMS_THROTTLEPLATEPOSITIONERROR_NOERROR = 0;
      EMS_THROTTLEPLATEPOSITIONERROR_ERROR = 1;
    }
    enum Ems_startstopmessageType {
      EMS_STARTSTOPMESSAGE_NOWARNINGMESSAGE = 0;
      EMS_STARTSTOPMESSAGE_CLIMATEREQUEST = 1;
      EMS_STARTSTOPMESSAGE_BRAKELOW = 2;
      EMS_STARTSTOPMESSAGE_START_STOPOFF = 3;
      EMS_STARTSTOPMESSAGE_BATTERYLOW = 4;
      EMS_STARTSTOPMESSAGE_ECTLOW = 5;
      EMS_STARTSTOPMESSAGE_APAINHIBIT = 6;
      EMS_STARTSTOPMESSAGE_ACCINHIBIT = 7;
      EMS_STARTSTOPMESSAGE_TCUINHIBIT = 8;
      EMS_STARTSTOPMESSAGE_STARTPROTECT = 9;
      EMS_STARTSTOPMESSAGE_HOODOPEN = 10;
      EMS_STARTSTOPMESSAGE_DRVIEDOOROPNE = 11;
      EMS_STARTSTOPMESSAGE_STEERINGANGELHIGH = 12;
      EMS_STARTSTOPMESSAGE_STARTSTOPFAILURE = 13;
      EMS_STARTSTOPMESSAGE_MANUALLYRESTART = 14;
      EMS_STARTSTOPMESSAGE_RESERVED = 15;
    }
    enum Ems_ignswtstsType {
      EMS_IGNSWTSTS_IGNITIONOFF = 0;
      EMS_IGNSWTSTS_IGNITIONON = 1;
    }
    // [��[deg]] [-60|60]
    optional int32 ems_ignitiontiming = 1;
    // [rpm] [0|4095]
    optional double ems_setlengidlespeed = 2;
    // [] [0|5]
    optional Ems_engoperationstatusType ems_engoperationstatus = 3;
    // [] [0|1]
    optional Ems_aircompressorstatusType ems_aircompressorstatus = 4;
    // [] [0|1]
    optional Ems_throttleplatepositionerrorType ems_throttleplatepositionerror = 5;
    // [] [0|15]
    optional Ems_startstopmessageType ems_startstopmessage = 6;
    // [] [0|15]
    optional int32 dcm_ems_rollingcounter_0x142 = 7;
    // [] [0|1]
    optional Ems_ignswtstsType ems_ignswtsts = 8;
    // [] [0|255]
    optional int32 dcm_ems_checksum_0x142 = 9;
    // [%] [0|99.568]
    optional double ems_engthrottleposition = 10;
  }

  message Gw_tbox_location_0x580_580 {
    // Report Message
      enum Tbox_gps_ubType {
        TBOX_GPS_UB_NOT_UPDATE_GPS = 0;
        TBOX_GPS_UB_UPDATE_GPS = 1;
      }
      enum Tbox_locationstsType {
        TBOX_LOCATIONSTS_NORTH_LATITUDE_EAST_LONGITUDE = 0;
        TBOX_LOCATIONSTS_NORTH_LATITUDE_WEST_LONGITUDE = 1;
        TBOX_LOCATIONSTS_SOUTH_LATITUDE_EAST_LONGITUDE = 2;
        TBOX_LOCATIONSTS_SOUTH_LATITUDE_WEST_LONGITUDE = 3;
        TBOX_LOCATIONSTS_INVALID = 7;
      }
      // [] [0|180]
      optional double tbox_longitude = 1;
      // [] [0|90]
      optional double tbox_latidude = 2;
      // [] [0|1]
      optional Tbox_gps_ubType tbox_gps_ub = 3;
      // [] [0|6]
      optional Tbox_locationstsType tbox_locationsts = 4;
    }

message Srs_0x350_350 {
// Report Message
  enum Srs_sbr_secondrowrightType {
    SRS_SBR_SECONDROWRIGHT_LAMP_OFF = 0;
    SRS_SBR_SECONDROWRIGHT_LAMP_FLASHING_RESERVED = 1;
    SRS_SBR_SECONDROWRIGHT_LAMP_ON = 2;
    SRS_SBR_SECONDROWRIGHT_FAULT_RESERVED = 3;
  }
  enum Srs_sbr_secondrowmidType {
    SRS_SBR_SECONDROWMID_LAMP_OFF = 0;
    SRS_SBR_SECONDROWMID_LAMP_FLASHING_RESERVED = 1;
    SRS_SBR_SECONDROWMID_LAMP_ON = 2;
    SRS_SBR_SECONDROWMID_FAULT_RESERVED = 3;
  }
  enum Srs_sbr_secondrowleftType {
    SRS_SBR_SECONDROWLEFT_LAMP_OFF = 0;
    SRS_SBR_SECONDROWLEFT_LAMP_FLASHING_RESERVED = 1;
    SRS_SBR_SECONDROWLEFT_LAMP_ON = 2;
    SRS_SBR_SECONDROWLEFT_FAULT_RESERVED = 3;
  }
  enum Srs_sbr_pamsengerType {
    SRS_SBR_PAMSENGER_LAMP_OFF = 0;
    SRS_SBR_PAMSENGER_LAMP_FLASHING_RESERVED = 1;
    SRS_SBR_PAMSENGER_LAMP_ON = 2;
    SRS_SBR_PAMSENGER_FAULT_RESERVED = 3;
  }
  enum Srs_sbr_driverType {
    SRS_SBR_DRIVER_LAMP_OFF = 0;
    SRS_SBR_DRIVER_LAMP_FLASHING_RESERVED = 1;
    SRS_SBR_DRIVER_LAMP_ON = 2;
    SRS_SBR_DRIVER_FAULT_RESERVED = 3;
  }
  enum Srs_crashoutputstsType {
    SRS_CRASHOUTPUTSTS_NO_CRASH = 0;
    SRS_CRASHOUTPUTSTS_CRASH = 1;
  }
  enum Srs_airbagfailstsType {
    SRS_AIRBAGFAILSTS_LAMP_OFF = 0;
    SRS_AIRBAGFAILSTS_LAMP_FLASH = 1;
    SRS_AIRBAGFAILSTS_LAMP_ON = 2;
    SRS_AIRBAGFAILSTS_RESERVED = 3;
  }
  // [] [0|3]
  optional Srs_sbr_secondrowrightType srs_sbr_secondrowright = 1;
  // [] [0|3]
  optional Srs_sbr_secondrowmidType srs_sbr_secondrowmid = 2;
  // [] [0|3]
  optional Srs_sbr_secondrowleftType srs_sbr_secondrowleft = 3;
  // [] [0|3]
  optional Srs_sbr_pamsengerType srs_sbr_pamsenger = 4;
  // [] [0|15]
  optional int32 rolling_counter_0x350 = 5;
  // [] [0|3]
  optional Srs_sbr_driverType srs_sbr_driver = 6;
  // [] [0|255]
  optional int32 checksum_0x350 = 7;
  // [] [0|1]
  optional Srs_crashoutputstsType srs_crashoutputsts = 8;
  // [] [0|3]
  optional Srs_airbagfailstsType srs_airbagfailsts = 9;
}

message Ipm_0x245_245 {
// Report Message
  enum Ipm_laneassit_torquereqstatusType {
    IPM_LANEASSIT_TORQUEREQSTATUS_NO_REQUEST = 0;
    IPM_LANEASSIT_TORQUEREQSTATUS_TORQUE_REQUEST = 1;
    IPM_LANEASSIT_TORQUEREQSTATUS_RESERVED = 2;
  }
  enum Ipm_laneassit_torquevalidityType {
    IPM_LANEASSIT_TORQUEVALIDITY_VALID = 0;
    IPM_LANEASSIT_TORQUEVALIDITY_INVALID = 1;
  }
  enum Ipm_laneassit_sensitivityType {
    IPM_LANEASSIT_SENSITIVITY_HIGHSENSITIVITY = 0;
    IPM_LANEASSIT_SENSITIVITY_LOWSENSITIVITY = 1;
  }
  enum Ipm_laneassit_warningaudioType {
    IPM_LANEASSIT_WARNINGAUDIO_INACTIVE = 0;
    IPM_LANEASSIT_WARNINGAUDIO_ACTIVE = 1;
  }
  enum Ipm_laneassit_leftvisualizationType {
    IPM_LANEASSIT_LEFTVISUALIZATION_NO_DISPLAY = 0;
    IPM_LANEASSIT_LEFTVISUALIZATION_LINE_TRACKING = 1;
    IPM_LANEASSIT_LEFTVISUALIZATION_INTERVENTION = 2;
    IPM_LANEASSIT_LEFTVISUALIZATION_WARNING = 3;
  }
  enum Ipm_laneassit_rightvisualizationType {
    IPM_LANEASSIT_RIGHTVISUALIZATION_NO_DISPLAY = 0;
    IPM_LANEASSIT_RIGHTVISUALIZATION_LINE_TRACKING = 1;
    IPM_LANEASSIT_RIGHTVISUALIZATION_INTERVENTION = 2;
    IPM_LANEASSIT_RIGHTVISUALIZATION_WARNING = 3;
  }
  enum Ipm_slaspdlimitunitsType {
    IPM_SLASPDLIMITUNITS_UNKNOWN = 0;
    IPM_SLASPDLIMITUNITS_KMH = 1;
    IPM_SLASPDLIMITUNITS_MPH = 2;
    IPM_SLASPDLIMITUNITS_RESERVED = 3;
  }
  enum Ipm_slastateType {
    IPM_SLASTATE_OFF = 0;
    IPM_SLASTATE_FUSION_MODE = 1;
    IPM_SLASTATE_VISION_MODE = 2;
    IPM_SLASTATE_NAVIGATION_ONLY_MODE = 3;
    IPM_SLASTATE_DEFECT = 4;
  }
  enum Ipm_laneassit_statusType {
    IPM_LANEASSIT_STATUS_OFF = 0;
    IPM_LANEASSIT_STATUS_STANDBY = 1;
    IPM_LANEASSIT_STATUS_LDW_ACTIVE_LKA_STANDBY = 2;
    IPM_LANEASSIT_STATUS_LDW_STANDBY_LKA_ACTIVE = 3;
    IPM_LANEASSIT_STATUS_ACTIVE = 4;
    IPM_LANEASSIT_STATUS_FAULT = 5;
    IPM_LANEASSIT_STATUS_CAMERA_BLOCKED = 6;
    IPM_LANEASSIT_STATUS_CAMERA_UNCALIBRATED = 7;
  }
  enum Ipm_slaspdlimitType {
    IPM_SLASPDLIMIT_NO_DISPLAY = 0;
    IPM_SLASPDLIMIT_SPL_CANCELLED = 1;
    IPM_SLASPDLIMIT_SPL_5 = 2;
    IPM_SLASPDLIMIT_SPL_10 = 3;
    IPM_SLASPDLIMIT_SPL_15 = 4;
    IPM_SLASPDLIMIT_SPL_20 = 5;
    IPM_SLASPDLIMIT_SPL_25 = 6;
    IPM_SLASPDLIMIT_SPL_30 = 7;
    IPM_SLASPDLIMIT_SPL_35 = 8;
    IPM_SLASPDLIMIT_SPL_40 = 9;
    IPM_SLASPDLIMIT_SPL_45 = 10;
    IPM_SLASPDLIMIT_SPL_50 = 11;
    IPM_SLASPDLIMIT_SPL_55 = 12;
    IPM_SLASPDLIMIT_SPL_60 = 13;
    IPM_SLASPDLIMIT_SPL_65 = 14;
    IPM_SLASPDLIMIT_SPL_70 = 15;
    IPM_SLASPDLIMIT_SPL_75 = 16;
    IPM_SLASPDLIMIT_SPL_80 = 17;
    IPM_SLASPDLIMIT_SPL_85 = 18;
    IPM_SLASPDLIMIT_SPL_90 = 19;
    IPM_SLASPDLIMIT_SPL_95 = 20;
    IPM_SLASPDLIMIT_SPL_100 = 21;
    IPM_SLASPDLIMIT_SPL_105 = 22;
    IPM_SLASPDLIMIT_SPL_110 = 23;
    IPM_SLASPDLIMIT_SPL_115 = 24;
    IPM_SLASPDLIMIT_SPL_120 = 25;
    IPM_SLASPDLIMIT_SPL_125 = 26;
    IPM_SLASPDLIMIT_SPL_130 = 27;
  }
  enum Ipm_hma_statusType {
    IPM_HMA_STATUS_OFF = 0;
    IPM_HMA_STATUS_PASSIVE = 1;
    IPM_HMA_STATUS_STANDBY = 2;
    IPM_HMA_STATUS_ACTIVE = 3;
    IPM_HMA_STATUS_FAULT = 4;
    IPM_HMA_STATUS_CAMERA_BLOCKED = 5;
    IPM_HMA_STATUS_RESERVED = 6;
  }
  enum Ipm_tjaica_statusType {
    IPM_TJAICA_STATUS_INACTIVE = 0;
    IPM_TJAICA_STATUS_ACTIVE = 1;
  }
  enum Ipm_ldwwarningtypeType {
    IPM_LDWWARNINGTYPE_AUDIBLE_WARNING_AND_WHEELSTEER_SHAKE = 0;
    IPM_LDWWARNINGTYPE_AUDIBLE_WARNING = 1;
    IPM_LDWWARNINGTYPE_WHEELSTEER_SHAKE = 2;
    IPM_LDWWARNINGTYPE_RESERVED = 3;
  }
  enum Ipm_laneassit_handsonreqType {
    IPM_LANEASSIT_HANDSONREQ_INACTIVE = 0;
    IPM_LANEASSIT_HANDSONREQ_ACTIVE = 1;
  }
  enum Ipm_hma_highbeamreqType {
    IPM_HMA_HIGHBEAMREQ_NO_REQUEST = 0;
    IPM_HMA_HIGHBEAMREQ_HIGH_BEAM_REQUEST = 1;
  }
  enum Ipm_laneassittypeType {
    IPM_LANEASSITTYPE_UNAVAILABLE = 0;
    IPM_LANEASSITTYPE_LDW = 1;
    IPM_LANEASSITTYPE_LKA = 2;
    IPM_LANEASSITTYPE_LDW_LKA = 3;
    IPM_LANEASSITTYPE_TJA_ICA = 4;
    IPM_LANEASSITTYPE_TJA_ICA_LDW = 5;
    IPM_LANEASSITTYPE_RESERVED = 6;
  }
  enum Ipm_laneassit_warningvibrationType {
    IPM_LANEASSIT_WARNINGVIBRATION_INACTIVE = 0;
    IPM_LANEASSIT_WARNINGVIBRATION_ACTIVE = 1;
  }
  // [] [0|3]
  optional Ipm_laneassit_torquereqstatusType ipm_laneassit_torquereqstatus = 1;
  // [] [0|1]
  optional Ipm_laneassit_torquevalidityType ipm_laneassit_torquevalidity = 2;
  // [] [0|1]
  optional Ipm_laneassit_sensitivityType ipm_laneassit_sensitivity = 3;
  // [] [0|1]
  optional Ipm_laneassit_warningaudioType ipm_laneassit_warningaudio = 4;
  // [] [0|3]
  optional Ipm_laneassit_leftvisualizationType ipm_laneassit_leftvisualization = 5;
  // [] [0|3]
  optional Ipm_laneassit_rightvisualizationType ipm_laneassit_rightvisualization = 6;
  // [] [0|3]
  optional Ipm_slaspdlimitunitsType ipm_slaspdlimitunits = 7;
  // [] [0|7]
  optional Ipm_slastateType ipm_slastate = 8;
  // [] [0|7]
  optional Ipm_laneassit_statusType ipm_laneassit_status = 9;
  // [] [0|255]
  optional Ipm_slaspdlimitType ipm_slaspdlimit = 10;
  // [] [0|7]
  optional Ipm_hma_statusType ipm_hma_status = 11;
  // [] [0|1]
  optional Ipm_tjaica_statusType ipm_tjaica_status = 12;
  // [] [0|15]
  optional int32 rolling_counter_0x245 = 13;
  // [] [0|3]
  optional Ipm_ldwwarningtypeType ipm_ldwwarningtype = 14;
  // [] [0|1]
  optional Ipm_laneassit_handsonreqType ipm_laneassit_handsonreq = 15;
  // [] [0|1]
  optional Ipm_hma_highbeamreqType ipm_hma_highbeamreq = 16;
  // [] [0|255]
  optional int32 checksum_0x245 = 17;
  // [Nm] [-10.24|10.22]
  optional double ipm_laneassit_torquereq = 18;
  // [] [0|7]
  optional Ipm_laneassittypeType ipm_laneassittype = 19;
  // [] [0|1]
  optional Ipm_laneassit_warningvibrationType ipm_laneassit_warningvibration = 20;
}

message Gw_ems_tqwhl_0x111_111 {
  // Report Message
    enum Ems_indicatedaccmesgerrorType {
      EMS_INDICATEDACCMESGERROR_NOEERROR = 0;
      EMS_INDICATEDACCMESGERROR_REVERSIBLE_ERROR = 1;
      EMS_INDICATEDACCMESGERROR_IRREVERSIBLE_ERROR = 2;
      EMS_INDICATEDACCMESGERROR_NOTDEFINED = 3;
    }
    enum Ems_indicateddriveroverrideType {
      EMS_INDICATEDDRIVEROVERRIDE_NOOVERRIDE = 0;
      EMS_INDICATEDDRIVEROVERRIDE_DRIVEROVERRIDE = 1;
    }
    // [Nm] [-30000|30000]
    optional int32 ems_indicatedrealengtorqwhl = 1;
    // [] [0|3]
    optional Ems_indicatedaccmesgerrorType ems_indicatedaccmesgerror = 2;
    // [] [0|1]
    optional Ems_indicateddriveroverrideType ems_indicateddriveroverride = 3;
    // [Nm] [-1000|1000]
    optional double ems_indicateddriverreqtorq = 4;
    // [] [0|15]
    optional int32 dcm_ems_rollingcounter_0x111 = 5;
    // [] [0|255]
    optional int32 dcm_ems_checksum_0x111 = 6;
    // [Nm] [-30000|30000]
    optional int32 ems_indicateddriverreqtorqwhl = 7;
  }

message Gw_tcu_gearinfo_0x123_123 {
// Report Message
  enum Tcu_displaygearType {
    TCU_DISPLAYGEAR_CURRENT_GEAR_N = 0;
    TCU_DISPLAYGEAR_GEAR_1 = 1;
    TCU_DISPLAYGEAR_GEAR_2 = 2;
    TCU_DISPLAYGEAR_GEAR_3 = 3;
    TCU_DISPLAYGEAR_GEAR_4 = 4;
    TCU_DISPLAYGEAR_GEAR_5 = 5;
    TCU_DISPLAYGEAR_GEAR_6 = 6;
    TCU_DISPLAYGEAR_GEAR_7 = 7;
    TCU_DISPLAYGEAR_GEAR_8 = 8;
    TCU_DISPLAYGEAR_CURRENT_GEAR_D = 9;
    TCU_DISPLAYGEAR_CURRENT_GEAR_L = 10;
    TCU_DISPLAYGEAR_CURRENT_GEAR_R = 11;
    TCU_DISPLAYGEAR_RESERVED = 12;
    TCU_DISPLAYGEAR_CURRENT_GEAR_P = 13;
    TCU_DISPLAYGEAR_INVALID = 15;
  }
  enum Tcu_gearselectorreqType {
    TCU_GEARSELECTORREQ_P = 0;
    TCU_GEARSELECTORREQ_L_RESERVED = 1;
    TCU_GEARSELECTORREQ_2_RESERVED = 2;
    TCU_GEARSELECTORREQ_3_RESERVED = 3;
    TCU_GEARSELECTORREQ_D = 5;
    TCU_GEARSELECTORREQ_N = 6;
    TCU_GEARSELECTORREQ_R = 7;
    TCU_GEARSELECTORREQ_M = 8;
    TCU_GEARSELECTORREQ_INVALID = 15;
  }
  enum Tcu_transpmotoparkreqinvalidType {
    TCU_TRANSPMOTOPARKREQINVALID_VALID = 0;
    TCU_TRANSPMOTOPARKREQINVALID_INVALID = 1;
  }
  enum Tcu_gearshiftinprogressType {
    TCU_GEARSHIFTINPROGRESS_NOGEARSHIFTINPROGRESS = 0;
    TCU_GEARSHIFTINPROGRESS_GEARSHIFTINPROGRESS = 1;
  }
  enum Tcu_shiftleverpos_sbwmType {
    TCU_SHIFTLEVERPOS_SBWM_P = 0;
    TCU_SHIFTLEVERPOS_SBWM_D = 1;
    TCU_SHIFTLEVERPOS_SBWM_N = 2;
    TCU_SHIFTLEVERPOS_SBWM_R = 3;
    TCU_SHIFTLEVERPOS_SBWM_M = 4;
    TCU_SHIFTLEVERPOS_SBWM_BLANK = 5;
    TCU_SHIFTLEVERPOS_SBWM_RESERVED = 6;
    TCU_SHIFTLEVERPOS_SBWM_INVALID = 7;
  }
  enum Tcu_targetgearreqType {
    TCU_TARGETGEARREQ_DRIVETRAINOPEN_GEARN = 0;
    TCU_TARGETGEARREQ_1STGEAR = 1;
    TCU_TARGETGEARREQ_2NDGEAR = 2;
    TCU_TARGETGEARREQ_3RDGEAR = 3;
    TCU_TARGETGEARREQ_4THGEAR = 4;
    TCU_TARGETGEARREQ_5THGEAR = 5;
    TCU_TARGETGEARREQ_6THGEAR = 6;
    TCU_TARGETGEARREQ_7THGEAR = 7;
    TCU_TARGETGEARREQ_8THGEAR = 8;
    TCU_TARGETGEARREQ_REVERSEGEAR = 14;
    TCU_TARGETGEARREQ_INVALID = 15;
  }
  enum Tcu_availableType {
    TCU_AVAILABLE_NOTAVAILABLE = 0;
    TCU_AVAILABLE_AVAILABLE = 1;
  }
  enum Tcu_driverinterventionType {
    TCU_DRIVERINTERVENTION_NOINTERVENTION = 0;
    TCU_DRIVERINTERVENTION_DRIVERINTERVENTION = 1;
  }
  enum Tcu_trsmfaultflagType {
    TCU_TRSMFAULTFLAG_NORMAL = 0;
    TCU_TRSMFAULTFLAG_FAILURE_NOLIMP_HOME = 1;
    TCU_TRSMFAULTFLAG_FAIL_LIMP_HOMEACTIVATED = 2;
    TCU_TRSMFAULTFLAG_RESERVED = 3;
  }
  enum Tcu_stgearmodeType {
    TCU_STGEARMODE_STANDARD = 0;
    TCU_STGEARMODE_SNOW = 1;
    TCU_STGEARMODE_MANUAL_RESERVED = 2;
    TCU_STGEARMODE_SPORT = 3;
    TCU_STGEARMODE_ECO = 4;
    TCU_STGEARMODE_4L = 5;
    TCU_STGEARMODE_WETMUD = 7;
    TCU_STGEARMODE_SAND = 8;
    TCU_STGEARMODE_GHAT = 9;
    TCU_STGEARMODE_MANUAL = 13;
    TCU_STGEARMODE_ATSFAULTTCU = 14;
    TCU_STGEARMODE_INVALID = 15;
  }
  enum Tcu_driving_mode_reqType {
    TCU_DRIVING_MODE_REQ_NORMAL = 0;
    TCU_DRIVING_MODE_REQ_SNOW = 1;
    TCU_DRIVING_MODE_REQ_NOUSED = 2;
    TCU_DRIVING_MODE_REQ_SPORT = 3;
    TCU_DRIVING_MODE_REQ_ECO = 4;
    TCU_DRIVING_MODE_REQ_4L = 5;
    TCU_DRIVING_MODE_REQ_ROCK = 6;
    TCU_DRIVING_MODE_REQ_WETMUD = 7;
    TCU_DRIVING_MODE_REQ_SAND = 8;
    TCU_DRIVING_MODE_REQ_SWITCHFAULT = 14;
    TCU_DRIVING_MODE_REQ_INVALID = 15;
  }
  enum Tcu_epblockreqType {
    TCU_EPBLOCKREQ_NO_REQUEST = 0;
    TCU_EPBLOCKREQ_REQUEST_PARK_BRAKE_ENGAGE = 1;
  }
  enum Tcu_highresistanceType {
    TCU_HIGHRESISTANCE_NO_HIGHRESISTANCE = 0;
    TCU_HIGHRESISTANCE_HIGHRESISTANCE = 1;
  }
  enum Tcu_drivingmodechange_fault_flagType {
    TCU_DRIVINGMODECHANGE_FAULT_FLAG_NOFAULT = 0;
    TCU_DRIVINGMODECHANGE_FAULT_FLAG_FAULT = 1;
  }
  enum Tcu_shiftlevertopreqinvalidType {
    TCU_SHIFTLEVERTOPREQINVALID_VALID = 0;
    TCU_SHIFTLEVERTOPREQINVALID_INVALID = 1;
  }
  enum Tcu_transpmotorparkreqType {
    TCU_TRANSPMOTORPARKREQ_NOREQUEST = 0;
    TCU_TRANSPMOTORPARKREQ_UNPARKREQUEST = 1;
    TCU_TRANSPMOTORPARKREQ_PARKREQUEST = 2;
    TCU_TRANSPMOTORPARKREQ_RESERVED = 3;
  }
  enum Tcu_shiftlevertopreqType {
    TCU_SHIFTLEVERTOPREQ_NOREQUEST = 0;
    TCU_SHIFTLEVERTOPREQ_PARKREQUEST = 1;
    TCU_SHIFTLEVERTOPREQ_RESERVED = 2;
  }
  enum Tcu_currentgearpositionType {
    TCU_CURRENTGEARPOSITION_DRIVETRAINOPEN_GEARN = 0;
    TCU_CURRENTGEARPOSITION_1STGEAR = 1;
    TCU_CURRENTGEARPOSITION_2NDGEAR = 2;
    TCU_CURRENTGEARPOSITION_3RDGEAR = 3;
    TCU_CURRENTGEARPOSITION_4THGEAR = 4;
    TCU_CURRENTGEARPOSITION_5THGEAR = 5;
    TCU_CURRENTGEARPOSITION_6THGEAR = 6;
    TCU_CURRENTGEARPOSITION_7THGEAR = 7;
    TCU_CURRENTGEARPOSITION_8THGEAR = 8;
    TCU_CURRENTGEARPOSITION_REVERSEGEAR = 14;
    TCU_CURRENTGEARPOSITION_INVALID = 15;
  }
  // [] [0|15]
  optional Tcu_displaygearType tcu_displaygear = 1;
  // [] [0|15]
  optional Tcu_gearselectorreqType tcu_gearselectorreq = 2;
  // [] [0|1]
  optional Tcu_transpmotoparkreqinvalidType tcu_transpmotoparkreqinvalid = 3;
  // [] [0|1]
  optional Tcu_gearshiftinprogressType tcu_gearshiftinprogress = 4;
  // [ ] [0|7]
  optional Tcu_shiftleverpos_sbwmType tcu_shiftleverpos_sbwm = 5;
  // [] [0|15]
  optional Tcu_targetgearreqType tcu_targetgearreq = 6;
  // [] [0|1]
  optional Tcu_availableType tcu_available = 7;
  // [] [0|1]
  optional Tcu_driverinterventionType tcu_driverintervention = 8;
  // [] [0|3]
  optional Tcu_trsmfaultflagType tcu_trsmfaultflag = 9;
  // [] [0|15]
  optional Tcu_stgearmodeType tcu_stgearmode = 10;
  // [] [0|15]
  optional Tcu_driving_mode_reqType tcu_driving_mode_req = 11;
  // [] [0|1]
  optional Tcu_epblockreqType tcu_epblockreq = 12;
  // [] [0|1]
  optional Tcu_highresistanceType tcu_highresistance = 13;
  // [] [0|1]
  optional Tcu_drivingmodechange_fault_flagType tcu_drivingmodechange_fault_flag = 14;
  // [] [0|1]
  optional Tcu_shiftlevertopreqinvalidType tcu_shiftlevertopreqinvalid = 15;
  // [] [0|15]
  optional int32 tcu_status_alivecounter0x123 = 16;
  // [] [0|3]
  optional Tcu_transpmotorparkreqType tcu_transpmotorparkreq = 17;
  // [] [0|3]
  optional Tcu_shiftlevertopreqType tcu_shiftlevertopreq = 18;
  // [] [0|255]
  optional int32 tcu_status_checksum0x123 = 19;
  // [] [0|15]
  optional Tcu_currentgearpositionType tcu_currentgearposition = 20;
}

message Esp_pressure_0x241_241 {
  // Report Message
    enum Esp_trfcasemodreqdbyespType {
      ESP_TRFCASEMODREQDBYESP_NO_REQUEST = 0;
      ESP_TRFCASEMODREQDBYESP_FAST_OPEN_REQUEST = 1;
      ESP_TRFCASEMODREQDBYESP_TORQUE_UPPER_LIMIT_REQUEST = 2;
      ESP_TRFCASEMODREQDBYESP_FAILURE = 3;
    }
    enum Esp_presoffsetmastercylindervaliType {
      ESP_PRESOFFSETMASTERCYLINDERVALI_VALID = 0;
      ESP_PRESOFFSETMASTERCYLINDERVALI_INVALID = 1;
    }
    enum Esp_master_cylinder_pressure_staType {
      ESP_MASTER_CYLINDER_PRESSURE_STA_VALID = 0;
      ESP_MASTER_CYLINDER_PRESSURE_STA_INVALID = 1;
    }
    // [Nm] [0|4095]
    optional int32 esp_trfcasetqlmtdbyesp = 1;
    // [] [0|3]
    optional Esp_trfcasemodreqdbyespType esp_trfcasemodreqdbyesp = 2;
    // [] [0|1]
    optional Esp_presoffsetmastercylindervaliType esp_presoffsetmastercylindervali = 3;
    // [bar] [-15|15]
    optional int32 esp_presoffsetmastercylinder = 4;
    // [] [0|15]
    optional int32 rolling_counter_0x241 = 5;
    // [] [0|1]
    optional Esp_master_cylinder_pressure_staType esp_master_cylinder_pressure_sta = 6;
    // [] [0|255]
    optional int32 checksum_0x241 = 7;
    // [bar] [0|255.9375]
    optional double esp_master_cylinder_pressure = 8;
  }

message Esp_status_0x243_243 {
// Report Message
  enum Esp_hhcavailableType {
    ESP_HHCAVAILABLE_AVAILABLE = 0;
    ESP_HHCAVAILABLE_NOT_AVAILABLE = 1;
  }
  enum Esp_hhcactiveType {
    ESP_HHCACTIVE_NOT_ACTIVE = 0;
    ESP_HHCACTIVE_ACTIVE = 1;
  }
  enum Esp_hdcactiveType {
    ESP_HDCACTIVE_OFF = 0;
    ESP_HDCACTIVE_ON_ACTIVE_BRAKING = 1;
    ESP_HDCACTIVE_ON_NOT_ACTIVE_BRAKING = 2;
  }
  enum Esp_ldmblc_blrequestcontrollerType {
    ESP_LDMBLC_BLREQUESTCONTROLLER_NOT_ILLUMINATE = 0;
    ESP_LDMBLC_BLREQUESTCONTROLLER_ILLUMINATE = 1;
  }
  enum Esp_cdpavailableType {
    ESP_CDPAVAILABLE_AVAILABLE = 0;
    ESP_CDPAVAILABLE_NOT_AVAILABLE = 1;
  }
  enum Esp_cdpactiveType {
    ESP_CDPACTIVE_NOT_ACTIVE = 0;
    ESP_CDPACTIVE_ACTIVE = 1;
  }
  enum Esp_epbwarningmessage3Type {
    ESP_EPBWARNINGMESSAGE3_NO_DISPLAY = 0;
    ESP_EPBWARNINGMESSAGE3_WHEN_APPLIED_THE_EPB_THE_SLOPE_OF_VEHICLE_IS_MORE_THAN_20_FOR_PK_30_FOR_SUV = 1;
  }
  enum Esp_epbwarningmessage2Type {
    ESP_EPBWARNINGMESSAGE2_NO_DISPLAY = 0;
    ESP_EPBWARNINGMESSAGE2_EPB_DRIVEROFF_WITHOUT_SEATBLET_OR_DRIVER_DOOR = 1;
  }
  enum Esp_epbwarningmessage1Type {
    ESP_EPBWARNINGMESSAGE1_NO_DISPLAY = 0;
    ESP_EPBWARNINGMESSAGE1_NO_BRAKE_PEDAL_PRESSED_AND_RELEASE_THE_EPB = 1;
  }
  enum Esp_avhwarningmessageType {
    ESP_AVHWARNINGMESSAGE_NO_WARNING = 0;
    ESP_AVHWARNINGMESSAGE_PLEASE_CLOSE_THE_DOOR_OR_SEATBLET_THEN_PRESSURE_THE_AVH_BUTTON = 1;
  }
  enum Esp_avhactiveType {
    ESP_AVHACTIVE_INACTIVE = 0;
    ESP_AVHACTIVE_ACTIVE = 1;
  }
  enum Esp_avhstandbyType {
    ESP_AVHSTANDBY_NOT_STANDBY = 0;
    ESP_AVHSTANDBY_STANDBY = 1;
  }
  enum Esp_avhavabliableType {
    ESP_AVHAVABLIABLE_AVAILABLE = 0;
    ESP_AVHAVABLIABLE_NOT_AVAILABLE = 1;
  }
  enum Esp_vdcflgfltType {
    ESP_VDCFLGFLT_NO_FAILURE = 0;
    ESP_VDCFLGFLT_FAILURE = 1;
  }
  enum Esp_tcsflgfltType {
    ESP_TCSFLGFLT_NO_FAILURE = 0;
    ESP_TCSFLGFLT_FAILURE = 1;
  }
  enum Esp_tcsctrlactvType {
    ESP_TCSCTRLACTV_NOT_ACTIVE = 0;
    ESP_TCSCTRLACTV_ACTIVE = 1;
  }
  enum Esp_espctrlactvType {
    ESP_ESPCTRLACTV_NOT_ACTIVE = 0;
    ESP_ESPCTRLACTV_ACTIVE = 1;
  }
  enum Esp_driving_mode_reqType {
    ESP_DRIVING_MODE_REQ_AUTO = 0;
    ESP_DRIVING_MODE_REQ_SNOW = 1;
    ESP_DRIVING_MODE_REQ_NO_USED = 2;
    ESP_DRIVING_MODE_REQ_SPORT = 3;
    ESP_DRIVING_MODE_REQ_ECO = 4;
    ESP_DRIVING_MODE_REQ_4L = 5;
    ESP_DRIVING_MODE_REQ_ROCK = 6;
    ESP_DRIVING_MODE_REQ_WETMUD = 7;
    ESP_DRIVING_MODE_REQ_SAND = 8;
    ESP_DRIVING_MODE_REQ_ATS_SHIFTING = 13;
    ESP_DRIVING_MODE_REQ_ATS_SHIFT_FAILURE = 14;
    ESP_DRIVING_MODE_REQ_INVALID = 15;
  }
  enum Esp_espinfolampType {
    ESP_ESPINFOLAMP_OFF = 0;
    ESP_ESPINFOLAMP_ON = 1;
  }
  enum Esp_espenablestsType {
    ESP_ESPENABLESTS_ESP_DISABLED = 0;
    ESP_ESPENABLESTS_ESP_ENABLED = 1;
  }
  enum Esp_gearshiftprevnType {
    ESP_GEARSHIFTPREVN_NO_REQUEST = 0;
    ESP_GEARSHIFTPREVN_INHIBIT_UPSHIFT = 1;
    ESP_GEARSHIFTPREVN_INHIBIT_DOWN_SHIFT = 2;
    ESP_GEARSHIFTPREVN_INHIBIT_ALL_SHIFTS = 3;
  }
  enum Esp_epbstatusType {
    ESP_EPBSTATUS_RELEASED = 0;
    ESP_EPBSTATUS_APPLIED = 1;
    ESP_EPBSTATUS_RELEASINGR = 2;
    ESP_EPBSTATUS_APPLYING = 3;
    ESP_EPBSTATUS_UNKNOWN = 4;
    ESP_EPBSTATUS_ERROR = 5;
  }
  enum RollerbenchmodestsType {
    ROLLERBENCHMODESTS_ROLLERBENCH_MODE_INACTIVE = 0;
    ROLLERBENCHMODESTS_ROLLERBENCH_MODE_ACTIVE = 1;
  }
  enum Esp_epberrorstatusType {
    ESP_EPBERRORSTATUS_UNDEFINED = 0;
    ESP_EPBERRORSTATUS_NO_ERROR = 1;
    ESP_EPBERRORSTATUS_ERROR = 2;
    ESP_EPBERRORSTATUS_DIAGNOSIS = 3;
  }
  enum Esp_ccswitchoffType {
    ESP_CCSWITCHOFF_NOT_SWITCH_OFF_CRUISE_CONTROL = 0;
    ESP_CCSWITCHOFF_SWITCH_OFF_CRUISE_CONTROL = 1;
  }
  enum Esp_hdcavailableType {
    ESP_HDCAVAILABLE_AVAILABLE = 0;
    ESP_HDCAVAILABLE_NOT_AVAILABLE = 1;
  }
  // [] [0|1]
  optional Esp_hhcavailableType esp_hhcavailable = 1;
  // [] [0|1]
  optional Esp_hhcactiveType esp_hhcactive = 2;
  // [] [0|2]
  optional Esp_hdcactiveType esp_hdcactive = 3;
  // [] [0|1]
  optional Esp_ldmblc_blrequestcontrollerType esp_ldmblc_blrequestcontroller = 4;
  // [] [0|1]
  optional Esp_cdpavailableType esp_cdpavailable = 5;
  // [] [0|1]
  optional Esp_cdpactiveType esp_cdpactive = 6;
  // [] [0|1]
  optional Esp_epbwarningmessage3Type esp_epbwarningmessage3 = 7;
  // [] [0|1]
  optional Esp_epbwarningmessage2Type esp_epbwarningmessage2 = 8;
  // [] [0|1]
  optional Esp_epbwarningmessage1Type esp_epbwarningmessage1 = 9;
  // [] [0|1]
  optional Esp_avhwarningmessageType esp_avhwarningmessage = 10;
  // [] [0|1]
  optional Esp_avhactiveType esp_avhactive = 11;
  // [] [0|1]
  optional Esp_avhstandbyType esp_avhstandby = 12;
  // [] [0|1]
  optional Esp_avhavabliableType esp_avhavabliable = 13;
  // [] [0|1]
  optional Esp_vdcflgfltType esp_vdcflgflt = 14;
  // [] [0|1]
  optional Esp_tcsflgfltType esp_tcsflgflt = 15;
  // [] [0|1]
  optional Esp_tcsctrlactvType esp_tcsctrlactv = 16;
  // [] [0|1]
  optional Esp_espctrlactvType esp_espctrlactv = 17;
  // [] [0|15]
  optional Esp_driving_mode_reqType esp_driving_mode_req = 18;
  // [] [0|1]
  optional Esp_espinfolampType esp_espinfolamp = 19;
  // [] [0|1]
  optional Esp_espenablestsType esp_espenablests = 20;
  // [] [0|3]
  optional Esp_gearshiftprevnType esp_gearshiftprevn = 21;
  // [] [0|7]
  optional Esp_epbstatusType esp_epbstatus = 22;
  // [] [0|15]
  optional int32 rollingcounter_0x243 = 23;
  // [] [0|1]
  optional RollerbenchmodestsType rollerbenchmodests = 24;
  // [] [0|255]
  optional int32 checksum_0x243 = 25;
  // [] [0|3]
  optional Esp_epberrorstatusType esp_epberrorstatus = 26;
  // [] [0|1]
  optional Esp_ccswitchoffType esp_ccswitchoff = 27;
  // [] [0|1]
  optional Esp_hdcavailableType esp_hdcavailable = 28;
}

message Esp_axay_0x242_242 {
// Report Message
  enum Esp_yawratestatusType {
    ESP_YAWRATESTATUS_OK = 0;
    ESP_YAWRATESTATUS_FAULT = 1;
  }
  enum Esp_alatstatusType {
    ESP_ALATSTATUS_OK = 0;
    ESP_ALATSTATUS_FAULT = 1;
  }
  enum Esp_algtstatusType {
    ESP_ALGTSTATUS_OK = 0;
    ESP_ALGTSTATUS_FAULT = 1;
  }
  // [m s^2] [-21.593092|21.593092]
  optional double esp_alat = 1;
  // [rad s] [-2.0942132|2.0942132]
  optional double esp_yawrate = 2;
  // [] [0|15]
  optional int32 rolling_counter_0x242 = 3;
  // [] [0|1]
  optional Esp_yawratestatusType esp_yawratestatus = 4;
  // [] [0|1]
  optional Esp_alatstatusType esp_alatstatus = 5;
  // [] [0|1]
  optional Esp_algtstatusType esp_algtstatus = 6;
  // [] [0|255]
  optional int32 checksum_0x242 = 7;
  // [m s^2] [-21.593092|21.593092]
  optional double esp_algt = 8;
}

message Gw_swm_mrr_0x31b_31b {
// Report Message
  enum Swm_acctaugapsetplusType {
    SWM_ACCTAUGAPSETPLUS_NO_PRESS = 0;
    SWM_ACCTAUGAPSETPLUS_PRESSED = 1;
  }
  enum Swm_accvsetminusType {
    SWM_ACCVSETMINUS_NO_PRESS = 0;
    SWM_ACCVSETMINUS_PRESSED = 1;
  }
  enum Swm_shiftpadrequpType {
    SWM_SHIFTPADREQUP_NO_PRESS = 0;
    SWM_SHIFTPADREQUP_PRESS = 1;
  }
  enum Swm_acclimphomestsType {
    SWM_ACCLIMPHOMESTS_NORMAL = 0;
    SWM_ACCLIMPHOMESTS_LIMPHOME = 1;
  }
  enum Swm_laneassistswitchType {
    SWM_LANEASSISTSWITCH_PREVENT_LANEASSIST_CONTROL = 0;
    SWM_LANEASSISTSWITCH_ENABLE_LANEASSIST_CONTROL = 1;
  }
  enum Swm_acctaugapsetminusType {
    SWM_ACCTAUGAPSETMINUS_NO_PRESS = 0;
    SWM_ACCTAUGAPSETMINUS_PRESSED = 1;
  }
  enum Swm_accvsetplusType {
    SWM_ACCVSETPLUS_NO_PRESS = 0;
    SWM_ACCVSETPLUS_PRESSED = 1;
  }
  enum Swm_shiftpadfltType {
    SWM_SHIFTPADFLT_NO_FAULT = 0;
    SWM_SHIFTPADFLT_FAULT = 1;
  }
  enum Swm_accdeactivateType {
    SWM_ACCDEACTIVATE_NO_PRESS = 0;
    SWM_ACCDEACTIVATE_PRESSED = 1;
  }
  enum Swm_accresumeType {
    SWM_ACCRESUME_NO_PRESS = 0;
    SWM_ACCRESUME_PRESSED = 1;
  }
  enum Swm_accsetType {
    SWM_ACCSET_NO_PRESS = 0;
    SWM_ACCSET_PRESSED = 1;
  }
  enum Swm_accenableswitchType {
    SWM_ACCENABLESWITCH_PREVENT_ACC_CONTROL = 0;
    SWM_ACCENABLESWITCH_ENABLE_ACC_CONTROL = 1;
  }
  enum Swm_accresume_qtType {
    SWM_ACCRESUME_QT_VALID = 0;
    SWM_ACCRESUME_QT_INVALID = 1;
  }
  enum Swm_tjaswitchType {
    SWM_TJASWITCH_PREVENT_TJA_CONTROL = 0;
    SWM_TJASWITCH_ENABLE_TJA_CONTROL = 1;
  }
  enum Swm_shiftpadreqdownType {
    SWM_SHIFTPADREQDOWN_NO_PRESS = 0;
    SWM_SHIFTPADREQDOWN_PRESS = 1;
  }
  // [] [0|1]
  optional Swm_acctaugapsetplusType swm_acctaugapsetplus = 1;
  // [] [0|1]
  optional Swm_accvsetminusType swm_accvsetminus = 2;
  // [] [0|1]
  optional Swm_shiftpadrequpType swm_shiftpadrequp = 3;
  // [] [0|1]
  optional Swm_acclimphomestsType swm_acclimphomests = 4;
  // [] [0|1]
  optional Swm_laneassistswitchType swm_laneassistswitch = 5;
  // [] [0|1]
  optional Swm_acctaugapsetminusType swm_acctaugapsetminus = 6;
  // [] [0|1]
  optional Swm_accvsetplusType swm_accvsetplus = 7;
  // [] [0|1]
  optional Swm_shiftpadfltType swm_shiftpadflt = 8;
  // [] [0|1]
  optional Swm_accdeactivateType swm_accdeactivate = 9;
  // [] [0|1]
  optional Swm_accresumeType swm_accresume = 10;
  // [] [0|1]
  optional Swm_accsetType swm_accset = 11;
  // [] [0|15]
  optional int32 rolling_counter_0x31b = 12;
  // [] [0|1]
  optional Swm_accenableswitchType swm_accenableswitch = 13;
  // [] [0|255]
  optional int32 checksum_0x31b = 14;
  // [] [0|1]
  optional Swm_accresume_qtType swm_accresume_qt = 15;
  // [] [0|1]
  optional Swm_tjaswitchType swm_tjaswitch = 16;
  // [] [0|1]
  optional Swm_shiftpadreqdownType swm_shiftpadreqdown = 17;
}

message Gw_swm_body_0x31a_31a {
// Report Message
  enum Swm_highbeamType {
    SWM_HIGHBEAM_RELEASED = 0;
    SWM_HIGHBEAM_PRESSED = 1;
    SWM_HIGHBEAM_RESERVED = 2;
    SWM_HIGHBEAM_INVALID = 3;
  }
  enum Swm_frontwipingmodeType {
    SWM_FRONTWIPINGMODE_FRONT_WIPING_OFF = 0;
    SWM_FRONTWIPINGMODE_FRONT_WIPER_SPEED_LOW_ACTIVATION = 1;
    SWM_FRONTWIPINGMODE_FRONT_WIPER_SPEED_HIGH_ACTIVATION = 2;
    SWM_FRONTWIPINGMODE_FRONT_MIST_WIPING_ACTIVATION = 3;
    SWM_FRONTWIPINGMODE_FRONT_AUTO_INTERVAL_WIPING_ACTIVATION = 4;
    SWM_FRONTWIPINGMODE_INVALID = 7;
  }
  enum Swm_wipinginterval_sensitvityType {
    SWM_WIPINGINTERVAL_SENSITVITY_SENSITIVITY_0 = 0;
    SWM_WIPINGINTERVAL_SENSITVITY_SENSITIVITY_1 = 1;
    SWM_WIPINGINTERVAL_SENSITVITY_SENSITIVITY_2 = 2;
    SWM_WIPINGINTERVAL_SENSITVITY_SENSITIVITY_3 = 3;
    SWM_WIPINGINTERVAL_SENSITVITY_INVALID = 7;
  }
  enum Swm_rearfoglightType {
    SWM_REARFOGLIGHT_RELEASED = 0;
    SWM_REARFOGLIGHT_PRESSED = 1;
    SWM_REARFOGLIGHT_RESERVED = 2;
    SWM_REARFOGLIGHT_INVALID = 3;
  }
  enum Swm_frontfoglightType {
    SWM_FRONTFOGLIGHT_OFF = 0;
    SWM_FRONTFOGLIGHT_ON = 1;
    SWM_FRONTFOGLIGHT_RESERVED = 2;
    SWM_FRONTFOGLIGHT_INVALID = 3;
  }
  enum Swm_washerlimphomestsType {
    SWM_WASHERLIMPHOMESTS_NORMAL = 0;
    SWM_WASHERLIMPHOMESTS_LIMPHOME = 1;
  }
  enum Swm_rearwipingmodeType {
    SWM_REARWIPINGMODE_REARWIPING_OFF = 0;
    SWM_REARWIPINGMODE_REAR_WIPER_UNIFORMITY_SPEED = 1;
    SWM_REARWIPINGMODE_RESERVED = 2;
    SWM_REARWIPINGMODE_INVALID = 3;
  }
  enum Swm_turnindicationactType {
    SWM_TURNINDICATIONACT_DEFAULT = 0;
    SWM_TURNINDICATIONACT_TURN_LEFT = 1;
    SWM_TURNINDICATIONACT_TURN_RIGHT = 2;
    SWM_TURNINDICATIONACT_INVALID = 3;
  }
  enum Swm_vol_plusType {
    SWM_VOL_PLUS_RELEASED = 0;
    SWM_VOL_PLUS_PRESSED = 1;
    SWM_VOL_PLUS_RESERVED = 2;
    SWM_VOL_PLUS_INVALID = 3;
  }
  enum Swm_vol_minusType {
    SWM_VOL_MINUS_RELEASED = 0;
    SWM_VOL_MINUS_PRESSED = 1;
    SWM_VOL_MINUS_RESERVED = 2;
    SWM_VOL_MINUS_INVALID = 3;
  }
  enum Swm_wechatType {
    SWM_WECHAT_RELEASED = 0;
    SWM_WECHAT_PRESSED = 1;
  }
  enum Swm_lamplimphomestsType {
    SWM_LAMPLIMPHOMESTS_NORMAL = 0;
    SWM_LAMPLIMPHOMESTS_LIMPHOME = 1;
  }
  enum Swm_headlampType {
    SWM_HEADLAMP_OFF = 0;
    SWM_HEADLAMP_AUTOLIGHT = 1;
    SWM_HEADLAMP_POSITIONLIGHT = 2;
    SWM_HEADLAMP_LOWBEAM = 3;
    SWM_HEADLAMP_INVALID = 4;
  }
  enum Swm_next_songType {
    SWM_NEXT_SONG_RELEASED = 0;
    SWM_NEXT_SONG_PRESSED = 1;
    SWM_NEXT_SONG_RESERVED = 2;
    SWM_NEXT_SONG_INVALID = 3;
  }
  enum Swm_previous_songType {
    SWM_PREVIOUS_SONG_RELEASED = 0;
    SWM_PREVIOUS_SONG_PRESSED = 1;
    SWM_PREVIOUS_SONG_RESERVED = 2;
    SWM_PREVIOUS_SONG_INVALID = 3;
  }
  enum Swm_phoneType {
    SWM_PHONE_RELEASED = 0;
    SWM_PHONE_PRESSED = 1;
    SWM_PHONE_RESERVED = 2;
    SWM_PHONE_INVALID = 3;
  }
  enum Swm_muteType {
    SWM_MUTE_RELEASED = 0;
    SWM_MUTE_PRESSED = 1;
    SWM_MUTE_RESERVED = 2;
    SWM_MUTE_INVALID = 3;
  }
  enum Swm_menu_rightType {
    SWM_MENU_RIGHT_RELEASED = 0;
    SWM_MENU_RIGHT_PRESSED = 1;
    SWM_MENU_RIGHT_RESERVED = 2;
    SWM_MENU_RIGHT_INVALID = 3;
  }
  enum Swm_menu_leftType {
    SWM_MENU_LEFT_RELEASED = 0;
    SWM_MENU_LEFT_PRESSED = 1;
    SWM_MENU_LEFT_RESERVED = 2;
    SWM_MENU_LEFT_INVALID = 3;
  }
  enum Swm_menu_downType {
    SWM_MENU_DOWN_RELEASED = 0;
    SWM_MENU_DOWN_PRESSED = 1;
    SWM_MENU_DOWN_RESERVED = 2;
    SWM_MENU_DOWN_INVALID = 3;
  }
  enum Swm_menu_upType {
    SWM_MENU_UP_RELEASED = 0;
    SWM_MENU_UP_PRESSED = 1;
    SWM_MENU_UP_RESERVED = 2;
    SWM_MENU_UP_INVALID = 3;
  }
  enum Swm_fwasherstsType {
    SWM_FWASHERSTS_RELEASED = 0;
    SWM_FWASHERSTS_PRESSED = 1;
    SWM_FWASHERSTS_RESERVED = 2;
    SWM_FWASHERSTS_INVALID = 3;
  }
  enum Swm_menu_returnType {
    SWM_MENU_RETURN_RELEASED = 0;
    SWM_MENU_RETURN_PRESSED = 1;
    SWM_MENU_RETURN_RESERVED = 2;
    SWM_MENU_RETURN_INVALID = 3;
  }
  enum Swm_menu_confirmType {
    SWM_MENU_CONFIRM_RELEASED = 0;
    SWM_MENU_CONFIRM_PRESSED = 1;
    SWM_MENU_CONFIRM_RESERVED = 2;
    SWM_MENU_CONFIRM_INVALID = 3;
  }
  enum Swm_rwasherstsType {
    SWM_RWASHERSTS_RELEASED = 0;
    SWM_RWASHERSTS_PRESSED = 1;
    SWM_RWASHERSTS_RESERVED = 2;
    SWM_RWASHERSTS_INVALID = 3;
  }
  enum Swm_flashlightstsType {
    SWM_FLASHLIGHTSTS_RELEASED = 0;
    SWM_FLASHLIGHTSTS_PRESSED = 1;
    SWM_FLASHLIGHTSTS_RESERVED = 2;
    SWM_FLASHLIGHTSTS_INVALID = 3;
  }
  // [] [0|3]
  optional Swm_highbeamType swm_highbeam = 1;
  // [] [0|7]
  optional Swm_frontwipingmodeType swm_frontwipingmode = 2;
  // [] [0|7]
  optional Swm_wipinginterval_sensitvityType swm_wipinginterval_sensitvity = 3;
  // [] [0|3]
  optional Swm_rearfoglightType swm_rearfoglight = 4;
  // [] [0|3]
  optional Swm_frontfoglightType swm_frontfoglight = 5;
  // [] [0|1]
  optional Swm_washerlimphomestsType swm_washerlimphomests = 6;
  // [] [0|3]
  optional Swm_rearwipingmodeType swm_rearwipingmode = 7;
  // [] [0|3]
  optional Swm_turnindicationactType swm_turnindicationact = 8;
  // [] [0|3]
  optional Swm_vol_plusType swm_vol_plus = 9;
  // [] [0|3]
  optional Swm_vol_minusType swm_vol_minus = 10;
  // [] [0|1]
  optional Swm_wechatType swm_wechat = 11;
  // [] [0|1]
  optional Swm_lamplimphomestsType swm_lamplimphomests = 12;
  // [] [0|3]
  optional Swm_headlampType swm_headlamp = 13;
  // [] [0|3]
  optional Swm_next_songType swm_next_song = 14;
  // [] [0|3]
  optional Swm_previous_songType swm_previous_song = 15;
  // [] [0|3]
  optional Swm_phoneType swm_phone = 16;
  // [] [0|3]
  optional Swm_muteType swm_mute = 17;
  // [] [0|3]
  optional Swm_menu_rightType swm_menu_right = 18;
  // [] [0|3]
  optional Swm_menu_leftType swm_menu_left = 19;
  // [] [0|3]
  optional Swm_menu_downType swm_menu_down = 20;
  // [] [0|3]
  optional Swm_menu_upType swm_menu_up = 21;
  // [] [0|3]
  optional Swm_fwasherstsType swm_fwashersts = 22;
  // [] [0|15]
  optional int32 rolling_counter_0x31a = 23;
  // [] [0|3]
  optional Swm_menu_returnType swm_menu_return = 24;
  // [] [0|3]
  optional Swm_menu_confirmType swm_menu_confirm = 25;
  // [] [0|255]
  optional int32 checksum_0x31a = 26;
  // [] [0|3]
  optional Swm_rwasherstsType swm_rwashersts = 27;
  // [] [0|3]
  optional Swm_flashlightstsType swm_flashlightsts = 28;
}

message Gw_ems_tq_0x101_101 {
  // Report Message
    enum Ems_engspeederrorType {
      EMS_ENGSPEEDERROR_NOERROR = 0;
      EMS_ENGSPEEDERROR_ERROR = 1;
    }
    // [Nm] [-1000|1000]
    optional double ems_indicatedrealengtorq = 1;
    // [rpm] [0|16383]
    optional double ems_engspeed = 2;
    // [] [0|1]
    optional Ems_engspeederrorType ems_engspeederror = 3;
    // [Nm] [-1000|1000]
    optional double ems_rngmodtorqcrsleadmin = 4;
    // [] [0|15]
    optional int32 dcm_ems_rollingcounter_0x101 = 5;
    // [] [0|255]
    optional int32 dcm_ems_checksum_0x101 = 6;
    // [Nm] [-1000|1000]
    optional double ems_rngmodtorqcrsleadmax = 7;
  }

message Esp_vlc_0x223_223 {
// Report Message
  enum Esp_apa_gearboxenableType {
    ESP_APA_GEARBOXENABLE_NO_REQUEST = 0;
    ESP_APA_GEARBOXENABLE_GEAR_SHIFT_REQUEST = 1;
  }
  enum Esp_target_gear_requestType {
    ESP_TARGET_GEAR_REQUEST_NO_REQUEST = 0;
    ESP_TARGET_GEAR_REQUEST_PARK = 1;
    ESP_TARGET_GEAR_REQUEST_REVERSE = 2;
    ESP_TARGET_GEAR_REQUEST_NEUTRAL = 3;
    ESP_TARGET_GEAR_REQUEST_DRIVE = 4;
  }
  enum Esp_vlc_apactiveType {
    ESP_VLC_APACTIVE_NOT_ACTIVE = 0;
    ESP_VLC_APACTIVE_ACTIVE = 1;
  }
  enum Esp_pam_lc_failurestsType {
    ESP_PAM_LC_FAILURESTS_NO_ERROR = 0;
    ESP_PAM_LC_FAILURESTS_VEHICLE_BLOCKED = 1;
    ESP_PAM_LC_FAILURESTS_UNEXPECTED_GEARPOSITION = 2;
    ESP_PAM_LC_FAILURESTS_UNEXPECTED_EPB_ACTION = 3;
    ESP_PAM_LC_FAILURESTS_UNEXPECTED_ACCPEDALINTERVENTION = 4;
    ESP_PAM_LC_FAILURESTS_UNEXPECTED_GEARINTERVENTION = 5;
    ESP_PAM_LC_FAILURESTS_ERROR = 7;
  }
  enum Esp_pam_lc_statusType {
    ESP_PAM_LC_STATUS_OFF = 0;
    ESP_PAM_LC_STATUS_STANDBY = 1;
    ESP_PAM_LC_STATUS_ACTIVE_AUTOMATICPARK = 4;
    ESP_PAM_LC_STATUS_ERROR = 10;
  }
  enum Esp_vlc_activeType {
    ESP_VLC_ACTIVE_NOT_ACTIVE = 0;
    ESP_VLC_ACTIVE_ACTIVE = 1;
  }
  enum Esp_vlc_availableType {
    ESP_VLC_AVAILABLE_NOT_AVAILABLE = 0;
    ESP_VLC_AVAILABLE_AVAILABLE = 1;
  }
  enum Esp_vlcapa_availableType {
    ESP_VLCAPA_AVAILABLE_NOT_AVAILABLE = 0;
    ESP_VLCAPA_AVAILABLE_AVAILABLE = 1;
  }
  enum Esp_vlcengtorqreqactType {
    ESP_VLCENGTORQREQACT_VALID = 0;
    ESP_VLCENGTORQREQACT_INVALID = 1;
  }
  // [] [-7|5.75]
  optional double esp_vlc_internaltargetacce = 1;
  // [] [0|3]
  optional Esp_apa_gearboxenableType esp_apa_gearboxenable = 2;
  // [] [0|7]
  optional Esp_target_gear_requestType esp_target_gear_request = 3;
  // [] [0|1]
  optional Esp_vlc_apactiveType esp_vlc_apactive = 4;
  // [] [0|7]
  optional Esp_pam_lc_failurestsType esp_pam_lc_failurests = 5;
  // [] [0|15]
  optional Esp_pam_lc_statusType esp_pam_lc_status = 6;
  // [] [0|15]
  optional int32 rolling_counter_0x223 = 7;
  // [] [0|1]
  optional Esp_vlc_activeType esp_vlc_active = 8;
  // [] [0|1]
  optional Esp_vlc_availableType esp_vlc_available = 9;
  // [] [0|1]
  optional Esp_vlcapa_availableType esp_vlcapa_available = 10;
  // [] [0|1]
  optional Esp_vlcengtorqreqactType esp_vlcengtorqreqact = 11;
  // [] [0|255]
  optional int32 checksum_0x223 = 12;
  // [Nm] [-30000|30000]
  optional int32 esp_vlcengtorqreq = 13;
}

message Gw_ems_whltq_0x107_107 {
  // Report Message
    enum Ems_kickdownType {
      EMS_KICKDOWN_NOTACTIVE = 0;
      EMS_KICKDOWN_ACTIVE = 1;
    }
    enum Ems_accpedalratioerrorType {
      EMS_ACCPEDALRATIOERROR_NOERROR = 0;
      EMS_ACCPEDALRATIOERROR_ERROR = 1;
    }
    enum Ems_brkpedalstasusType {
      EMS_BRKPEDALSTASUS_NOTPRESSED = 0;
      EMS_BRKPEDALSTASUS_PRESSED = 1;
      EMS_BRKPEDALSTASUS_RESERVED = 2;
      EMS_BRKPEDALSTASUS_ERROR = 3;
    }
    // [Nm] [-30000|30000]
    optional int32 minindicatedtorqwhl = 1;
    // [] [0|99.9998]
    optional double ems_accrawpedalratio = 2;
    // [%] [0|99.9998]
    optional double ems_accpedalratio = 3;
    // [] [0|15]
    optional int32 dcm_ems_rollingcounter_0x107 = 4;
    // [] [0|1]
    optional Ems_kickdownType ems_kickdown = 5;
    // [] [0|1]
    optional Ems_accpedalratioerrorType ems_accpedalratioerror = 6;
    // [] [0|3]
    optional Ems_brkpedalstasusType ems_brkpedalstasus = 7;
    // [] [0|255]
    optional int32 dcm_ems_checksum_0x107 = 8;
    // [Nm] [-30000|30000]
    optional int32 maxindicatedtorqwhl = 9;
  }

message Abs_sts_0x221_221 {
  // Report Message
    enum Abs_vehspddirectionType {
      ABS_VEHSPDDIRECTION_FORWARD = 0;
      ABS_VEHSPDDIRECTION_BACKWARD = 1;
    }
    enum Abs_ebdflgfltType {
      ABS_EBDFLGFLT_NO_FAILURE = 0;
      ABS_EBDFLGFLT_FAILURE = 1;
    }
    enum Abs_absflgfltType {
      ABS_ABSFLGFLT_NO_FAILURE = 0;
      ABS_ABSFLGFLT_FAILURE = 1;
    }
    enum Abs_absctrlactvType {
      ABS_ABSCTRLACTV_NOT_ACTIVE = 0;
      ABS_ABSCTRLACTV_ACTIVE = 1;
    }
    enum Abs_whlmilgfrntlestatusType {
      ABS_WHLMILGFRNTLESTATUS_VALID = 0;
      ABS_WHLMILGFRNTLESTATUS_INVALID = 1;
    }
    enum Abs_whlmilgfrntristatusType {
      ABS_WHLMILGFRNTRISTATUS_VALID = 0;
      ABS_WHLMILGFRNTRISTATUS_INVALID = 1;
    }
    enum Abs_vehspdlgtstatusType {
      ABS_VEHSPDLGTSTATUS_VALID = 0;
      ABS_VEHSPDLGTSTATUS_INVALID = 1;
      ABS_VEHSPDLGTSTATUS_INIT = 2;
    }
    // [] [0|65535]
    optional int32 abs_whlmilgfrntri = 1;
    // [kph] [0|230.34375]
    optional double abs_vehspdlgt = 2;
    // [] [0|1]
    optional Abs_vehspddirectionType abs_vehspddirection = 3;
    // [] [0|1]
    optional Abs_ebdflgfltType abs_ebdflgflt = 4;
    // [] [0|1]
    optional Abs_absflgfltType abs_absflgflt = 5;
    // [] [0|1]
    optional Abs_absctrlactvType abs_absctrlactv = 6;
    // [] [0|15]
    optional int32 rollingcounter_0x221 = 7;
    // [] [0|1]
    optional Abs_whlmilgfrntlestatusType abs_whlmilgfrntlestatus = 8;
    // [] [0|1]
    optional Abs_whlmilgfrntristatusType abs_whlmilgfrntristatus = 9;
    // [] [0|2]
    optional Abs_vehspdlgtstatusType abs_vehspdlgtstatus = 10;
    // [] [0|255]
    optional int32 checksum_0x221 = 11;
    // [] [0|65535]
    optional int32 abs_whlmilgfrntle = 12;
  }

  message Mrr_frobj_0x480_480 {
    // Report Message
      enum Mrr_l_obj_0x_classType {
        MRR_L_OBJ_0X_CLASS_UNKNOWN = 0;
        MRR_L_OBJ_0X_CLASS_CAR = 1;
        MRR_L_OBJ_0X_CLASS_TRUCK = 2;
        MRR_L_OBJ_0X_CLASS_TWO_WHEELER = 3;
      }
      enum Mrr_r_obj_0x_classType {
        MRR_R_OBJ_0X_CLASS_UNKNOWN = 0;
        MRR_R_OBJ_0X_CLASS_CAR = 1;
        MRR_R_OBJ_0X_CLASS_TRUCK = 2;
        MRR_R_OBJ_0X_CLASS_TWO_WHEELER = 3;
      }
      enum Mrr_lefttargrtdetectionType {
        MRR_LEFTTARGRTDETECTION_NOT_DECTECTED = 0;
        MRR_LEFTTARGRTDETECTION_DECTECTED = 1;
      }
      enum Mrr_righttargrtdetectionType {
        MRR_RIGHTTARGRTDETECTION_NOT_DECTECTED = 0;
        MRR_RIGHTTARGRTDETECTION_DECTECTED = 1;
      }
      // [] [-15|15]
      optional double mrr_l_object_dy = 1;
      // [] [0|7]
      optional Mrr_l_obj_0x_classType mrr_l_obj_0x_class = 2;
      // [] [0|255.875]
      optional double mrr_r_object_dx = 3;
      // [] [-15|15]
      optional double mrr_r_object_dy = 4;
      // [] [0|7]
      optional Mrr_r_obj_0x_classType mrr_r_obj_0x_class = 5;
      // [] [0|1]
      optional Mrr_lefttargrtdetectionType mrr_lefttargrtdetection = 6;
      // [] [0|1]
      optional Mrr_righttargrtdetectionType mrr_righttargrtdetection = 7;
      // [] [0|255.875]
      optional double mrr_l_object_dx = 8;
    }

message Mrr_0x246_246 {
// Report Message
  enum TaugapsetType {
    TAUGAPSET_TAUGAP_0 = 0;
    TAUGAPSET_TAUGAP_1 = 1;
    TAUGAPSET_TAUGAP_2 = 2;
    TAUGAPSET_TAUGAP_3 = 3;
    TAUGAPSET_TAUGAP_4 = 4;
    TAUGAPSET_TAUGAP_5 = 5;
    TAUGAPSET_TAUGAP_6 = 6;
    TAUGAPSET_TAUGAP_7 = 7;
  }
  enum DxtarobjType {
    DXTAROBJ_DISTANCE_0 = 0;
    DXTAROBJ_DISTANCE_1 = 1;
    DXTAROBJ_DISTANCE_2 = 2;
    DXTAROBJ_DISTANCE_3 = 3;
    DXTAROBJ_DISTANCE_4 = 4;
    DXTAROBJ_DISTANCE_5 = 5;
    DXTAROBJ_DISTANCE_6 = 6;
    DXTAROBJ_DISTANCE_7 = 7;
  }
  enum Acchmi_modeType {
    ACCHMI_MODE_OFF_MODE = 0;
    ACCHMI_MODE_PASSIVE_MODE = 1;
    ACCHMI_MODE_STAND_BY_MODE = 2;
    ACCHMI_MODE_ACTIVE_CONTROL_MODE = 3;
    ACCHMI_MODE_BRAKE_ONLY_MODE = 4;
    ACCHMI_MODE_OVERRIDE = 5;
    ACCHMI_MODE_STANDSTILL = 6;
    ACCHMI_MODE_FAILURE_MODE = 7;
  }
  enum AccfailinfoType {
    ACCFAILINFO_NO_ERROR = 0;
    ACCFAILINFO_ERROR = 1;
  }
  enum TakeoverreqType {
    TAKEOVERREQ_NO_TAKEOVER_REQUEST = 0;
    TAKEOVERREQ_VALID_TAKEOVER_REQUEST = 1;
  }
  enum Mrr_fcw_sensitiveType {
    MRR_FCW_SENSITIVE_UNAVAILABLE = 0;
    MRR_FCW_SENSITIVE_LEVEL1_LOW_SENSITIVE = 1;
    MRR_FCW_SENSITIVE_LEVEL2_NORMAL = 2;
    MRR_FCW_SENSITIVE_LEVEL3_HIGH_SENSITIVE = 3;
  }
  enum Aeb_stateType {
    AEB_STATE_UNAVAILABLE = 0;
    AEB_STATE_OFF = 1;
    AEB_STATE_STANDBY = 2;
    AEB_STATE_ACTIVE_NO_INTERVENTION = 3;
    AEB_STATE_ACTIVE = 4;
    AEB_STATE_RESERVED = 5;
  }
  enum Acc_startstop_inforType {
    ACC_STARTSTOP_INFOR_ACC_STOPALLOWED = 0;
    ACC_STARTSTOP_INFOR_ACC_STOPFORBIDDEN = 1;
    ACC_STARTSTOP_INFOR_ACC_STARTREQUEST = 2;
    ACC_STARTSTOP_INFOR_ACC_SYSTEMFAILURE = 3;
  }
  enum Fcw_prewarningType {
    FCW_PREWARNING_NO_WARNING = 0;
    FCW_PREWARNING_WARNING = 1;
  }
  enum Fcw_latentwarningType {
    FCW_LATENTWARNING_NO_WARNING = 0;
    FCW_LATENTWARNING_WARNING = 1;
  }
  enum Fcw_stateType {
    FCW_STATE_UNAVAILABLE = 0;
    FCW_STATE_OFF = 1;
    FCW_STATE_STANDBY = 2;
    FCW_STATE_ACTIVE_NO_INTERVENTION = 3;
    FCW_STATE_ACTIVE = 4;
    FCW_STATE_RESERVED = 5;
  }
  enum TextinfoType {
    TEXTINFO_NO_DISPLAY = 0;
    TEXTINFO_ACC_IS_SWITCHED_ON = 1;
    TEXTINFO_ACC_IS_SWITCHED_OFF = 2;
    TEXTINFO_ACC_IS_CANCELLED = 3;
    TEXTINFO_ACC_ACTIVE = 4;
    TEXTINFO_MRR_BLINDNESS = 5;
    TEXTINFO_ACC_AND_PEBS_ERROR = 6;
    TEXTINFO_EPB_ACTIVATE = 7;
    TEXTINFO_NO_FORWARD_GEAR = 8;
    TEXTINFO_SEATBELT_UNBUCKLED = 9;
    TEXTINFO_ESP_OFF = 10;
    TEXTINFO_SPEED_OVER_150KPH = 11;
    TEXTINFO_DOOR_OPEN = 12;
    TEXTINFO_OVERRIDE = 13;
    TEXTINFO_ESP_ERROR = 14;
    TEXTINFO_UNCALIBRATED = 15;
  }
  enum VsetdisType {
    VSETDIS_INVALID = 511;
  }
  enum ObjvalidType {
    OBJVALID_NO_OBJECT = 0;
    OBJVALID_TARGET_OBJECT_DETECTED = 1;
  }
  // [] [0|7]
  optional TaugapsetType taugapset = 1;
  // [] [0|7]
  optional DxtarobjType dxtarobj = 2;
  // [] [0|7]
  optional Acchmi_modeType acchmi_mode = 3;
  // [] [0|1]
  optional AccfailinfoType accfailinfo = 4;
  // [] [0|1]
  optional TakeoverreqType takeoverreq = 5;
  // [] [0|3]
  optional Mrr_fcw_sensitiveType mrr_fcw_sensitive = 6;
  // [] [0|7]
  optional Aeb_stateType aeb_state = 7;
  // [] [0|3]
  optional Acc_startstop_inforType acc_startstop_infor = 8;
  // [] [0|1]
  optional Fcw_prewarningType fcw_prewarning = 9;
  // [] [0|1]
  optional Fcw_latentwarningType fcw_latentwarning = 10;
  // [] [0|7]
  optional Fcw_stateType fcw_state = 11;
  // [] [0|255]
  optional int32 obj_speed = 12;
  // [] [0|15]
  optional int32 rolling_counter_0x246 = 13;
  // [] [0|15]
  optional TextinfoType textinfo = 14;
  // [] [0|255]
  optional int32 checksum_0x246 = 15;
  // [kph] [0|255.5]
  optional VsetdisType vsetdis = 16;
  // [] [0|1]
  optional ObjvalidType objvalid = 17;
}

message Gw_mp5_nav_0x533_533 {
// Report Message
  enum Nav_speedlimitunitsType {
    NAV_SPEEDLIMITUNITS_UNKNOWN = 0;
    NAV_SPEEDLIMITUNITS_MPH = 1;
    NAV_SPEEDLIMITUNITS_KMH = 2;
    NAV_SPEEDLIMITUNITS_RESERVED = 3;
  }
  enum Nav_currroadtypeType {
    NAV_CURRROADTYPE_UNKNOW = 0;
    NAV_CURRROADTYPE_HIGH_SPEED_ROAD = 1;
    NAV_CURRROADTYPE_CITY_EXPRESS_WAY = 2;
    NAV_CURRROADTYPE_DOWNTOWN_ROAD = 3;
    NAV_CURRROADTYPE_COUNTRY_ROAD = 4;
  }
  enum Nav_speedlimitType {
    NAV_SPEEDLIMIT_NO_DISPLAY = 0;
    NAV_SPEEDLIMIT_SPL_5 = 1;
    NAV_SPEEDLIMIT_SPL_10 = 2;
    NAV_SPEEDLIMIT_SPL_15 = 3;
    NAV_SPEEDLIMIT_SPL_20 = 4;
    NAV_SPEEDLIMIT_SPL_25 = 5;
    NAV_SPEEDLIMIT_SPL_130 = 26;
  }
  enum Mp5_apaactive_cmdType {
    MP5_APAACTIVE_CMD_NO_REQUEST = 0;
    MP5_APAACTIVE_CMD_REQUEST = 1;
  }
  enum Mp5_apa_confirmbuttonType {
    MP5_APA_CONFIRMBUTTON_NO_BUTTON_PRESS = 0;
    MP5_APA_CONFIRMBUTTON_COMFIRM_BUTTON_PRESS = 1;
    MP5_APA_CONFIRMBUTTON_TERMINATED_BUTTON_PRESS = 2;
    MP5_APA_CONFIRMBUTTON_RESERVED = 3;
  }
  enum Mp5_apa_function_selectType {
    MP5_APA_FUNCTION_SELECT_NO_BUTTON_PRESS = 0;
    MP5_APA_FUNCTION_SELECT_PPSC_BUTTON_PRESS = 1;
    MP5_APA_FUNCTION_SELECT_CPSC_BUTTON_PRESS = 2;
    MP5_APA_FUNCTION_SELECT_POC_BUTTON_PRESS = 3;
  }
  enum Nav_stsType {
    NAV_STS_INACTIVE = 0;
    NAV_STS_ACTIVE = 1;
  }
  enum Nav_speedlimitstatusType {
    NAV_SPEEDLIMITSTATUS_SL_UNKNOWN = 0;
    NAV_SPEEDLIMITSTATUS_SL_EXISTS = 1;
    NAV_SPEEDLIMITSTATUS_SL_NOLIMIT = 2;
    NAV_SPEEDLIMITSTATUS_SL_PLURAL = 3;
  }
  // [] [0|3]
  optional Nav_speedlimitunitsType nav_speedlimitunits = 1;
  // [] [0|15]
  optional Nav_currroadtypeType nav_currroadtype = 2;
  // [] [0|63]
  optional Nav_speedlimitType nav_speedlimit = 3;
  // [] [0|1]
  optional Mp5_apaactive_cmdType mp5_apaactive_cmd = 4;
  // [] [0|3]
  optional Mp5_apa_confirmbuttonType mp5_apa_confirmbutton = 5;
  // [] [0|3]
  optional Mp5_apa_function_selectType mp5_apa_function_select = 6;
  // [] [0|1]
  optional Nav_stsType nav_sts = 7;
  // [] [0|255]
  optional int32 nav_countrycode = 8;
  // [] [0|3]
  optional Nav_speedlimitstatusType nav_speedlimitstatus = 9;
}

message Gw_mp5_0x530_530 {
// Report Message
  enum Mp5_fcw_sensitiveType {
    MP5_FCW_SENSITIVE_UNAVAILABLE = 0;
    MP5_FCW_SENSITIVE_LEVEL1_LOW_SENSITIVE = 1;
    MP5_FCW_SENSITIVE_LEVEL2_NORMAL = 2;
    MP5_FCW_SENSITIVE_LEVEL3_HIGH_SENSITIVE = 3;
  }
  enum Mp5_icmenushift_buttonType {
    MP5_ICMENUSHIFT_BUTTON_NO_EVENT = 0;
    MP5_ICMENUSHIFT_BUTTON_PAGE_UP = 1;
    MP5_ICMENUSHIFT_BUTTON_PAGE_DOWN = 2;
    MP5_ICMENUSHIFT_BUTTON_INVALID = 3;
  }
  enum Mp5_aeb_on_offType {
    MP5_AEB_ON_OFF_SWITCH_ON = 0;
    MP5_AEB_ON_OFF_SWITCH_OFF = 1;
  }
  enum Mp5_fcw_on_offType {
    MP5_FCW_ON_OFF_SWITCH_ON = 0;
    MP5_FCW_ON_OFF_SWITCH_OFF = 1;
  }
  enum Mp5_bsdswitchstsType {
    MP5_BSDSWITCHSTS_ON = 0;
    MP5_BSDSWITCHSTS_OFF = 1;
  }
  enum Mp5_afs_swtichstsType {
    MP5_AFS_SWTICHSTS_NO_PRESS = 0;
    MP5_AFS_SWTICHSTS_PRESS = 1;
  }
  enum Mp5_laneassittypereqType {
    MP5_LANEASSITTYPEREQ_NO_SELECTION = 0;
    MP5_LANEASSITTYPEREQ_LDW = 1;
    MP5_LANEASSITTYPEREQ_LKA = 2;
    MP5_LANEASSITTYPEREQ_LDW_LKA = 3;
  }
  enum Mp5_icmenuactive_buttonType {
    MP5_ICMENUACTIVE_BUTTON_OFF = 0;
    MP5_ICMENUACTIVE_BUTTON_MENU_SWITCH_ACTIVE = 1;
    MP5_ICMENUACTIVE_BUTTON_SILENCE = 2;
    MP5_ICMENUACTIVE_BUTTON_INVALID = 3;
  }
  enum Mp5_alarmstatusType {
    MP5_ALARMSTATUS_INACTIVE = 0;
    MP5_ALARMSTATUS_ACTIVE = 1;
    MP5_ALARMSTATUS_FAILED = 2;
    MP5_ALARMSTATUS_RESERVED = 3;
  }
  enum Mp5_alarmornotType {
    MP5_ALARMORNOT_NO_ALARM = 0;
    MP5_ALARMORNOT_ALARM = 1;
  }
  enum Mp5_paakreset_reqType {
    MP5_PAAKRESET_REQ_NO_REQUEST = 0;
    MP5_PAAKRESET_REQ_REQUEST = 1;
  }
  enum Mp5_cta_activeType {
    MP5_CTA_ACTIVE_ON = 0;
    MP5_CTA_ACTIVE_OFF = 1;
  }
  enum Mp5_bsdlca_activeType {
    MP5_BSDLCA_ACTIVE_ON = 0;
    MP5_BSDLCA_ACTIVE_OFF = 1;
  }
  enum Mp5_tsrmenureqType {
    MP5_TSRMENUREQ_ON = 0;
    MP5_TSRMENUREQ_OFF = 1;
  }
  enum Mp5_ldwwarningType {
    MP5_LDWWARNING_AUDIBLE_WARNING_AND_WHEELSTEER_SHAKE = 0;
    MP5_LDWWARNING_AUDIBLE_WARNING = 1;
    MP5_LDWWARNING_WHEELSTEER_SHAKE = 2;
    MP5_LDWWARNING_RESERVED = 3;
  }
  enum Mp5_ldwsensitvityType {
    MP5_LDWSENSITVITY_HIGH = 0;
    MP5_LDWSENSITVITY_LOW = 1;
    MP5_LDWSENSITVITY_RESERVED = 2;
  }
  enum Mp5_avm_angleType {
    MP5_AVM_ANGLE_CENTER_KEY = 0;
    MP5_AVM_ANGLE_FRONT_3D_FRONT_AVM_2D = 1;
    MP5_AVM_ANGLE_FRONT_RIGHT_3D = 2;
    MP5_AVM_ANGLE_RIGHT_3D_RIGHT_AVM_2D = 3;
    MP5_AVM_ANGLE_REAR_RIGHT_3D = 4;
    MP5_AVM_ANGLE_REAR_3D_REAR_AVM_2D = 5;
    MP5_AVM_ANGLE_LEFT_REAR_3D = 6;
    MP5_AVM_ANGLE_LEFT_3D_LEFT_AVM_2D = 7;
    MP5_AVM_ANGLE_LEFT_FRONT_3D = 8;
    MP5_AVM_ANGLE_3D_KEY = 9;
    MP5_AVM_ANGLE_2D_KEY = 10;
    MP5_AVM_ANGLE_NO_VIDEO_SIGNAL_RESERVED = 11;
    MP5_AVM_ANGLE_RESERVED = 12;
    MP5_AVM_ANGLE_INVALID = 15;
  }
  enum Mp5_ihcmenureqType {
    MP5_IHCMENUREQ_ON = 0;
    MP5_IHCMENUREQ_OFF = 1;
  }
  enum Mp5_doa_activeType {
    MP5_DOA_ACTIVE_ON = 0;
    MP5_DOA_ACTIVE_OFF = 1;
  }
  enum Mp5_apa_available_stsType {
    MP5_APA_AVAILABLE_STS_INITIAL = 0;
    MP5_APA_AVAILABLE_STS_AVALIBLE = 1;
    MP5_APA_AVAILABLE_STS_NOT_AVALIBLE = 2;
  }
  enum Mp5_tpmsautolocationsettingType {
    MP5_TPMSAUTOLOCATIONSETTING_AUTOLOCATIONSETTINGOFF = 0;
    MP5_TPMSAUTOLOCATIONSETTING_AUTOLOCATIONSETTINGON = 1;
  }
  enum Mp5_avm_rotationdirectionType {
    MP5_AVM_ROTATIONDIRECTION_INITIAL = 0;
    MP5_AVM_ROTATIONDIRECTION_CLOCKWISE = 1;
    MP5_AVM_ROTATIONDIRECTION_ANTICLOCKWISE = 2;
    MP5_AVM_ROTATIONDIRECTION_RESERVED = 3;
  }
  enum Mp5_avm_buttonType {
    MP5_AVM_BUTTON_INIT = 0;
    MP5_AVM_BUTTON_START_UP = 1;
    MP5_AVM_BUTTON_SHUT_DOWN = 2;
    MP5_AVM_BUTTON_FAULTURE = 3;
  }
  enum Mp5_view_choiceType {
    MP5_VIEW_CHOICE_AVM = 0;
    MP5_VIEW_CHOICE_ADAS = 1;
  }
  // [] [0|3]
  optional Mp5_fcw_sensitiveType mp5_fcw_sensitive = 1;
  // [] [0|3]
  optional Mp5_icmenushift_buttonType mp5_icmenushift_button = 2;
  // [] [0|1]
  optional Mp5_aeb_on_offType mp5_aeb_on_off = 3;
  // [] [0|1]
  optional Mp5_fcw_on_offType mp5_fcw_on_off = 4;
  // [] [0|1]
  optional Mp5_bsdswitchstsType mp5_bsdswitchsts = 5;
  // [] [0|1]
  optional Mp5_afs_swtichstsType mp5_afs_swtichsts = 6;
  // [] [0|3]
  optional Mp5_laneassittypereqType mp5_laneassittypereq = 7;
  // [] [0|3]
  optional Mp5_icmenuactive_buttonType mp5_icmenuactive_button = 8;
  // [] [0|3]
  optional Mp5_alarmstatusType mp5_alarmstatus = 9;
  // [] [0|1]
  optional Mp5_alarmornotType mp5_alarmornot = 10;
  // [] [0|1]
  optional Mp5_paakreset_reqType mp5_paakreset_req = 11;
  // [] [0|1]
  optional Mp5_cta_activeType mp5_cta_active = 12;
  // [] [0|1]
  optional Mp5_bsdlca_activeType mp5_bsdlca_active = 13;
  // [] [0|1]
  optional Mp5_tsrmenureqType mp5_tsrmenureq = 14;
  // [] [0|3]
  optional Mp5_ldwwarningType mp5_ldwwarning = 15;
  // [] [0|3]
  optional Mp5_ldwsensitvityType mp5_ldwsensitvity = 16;
  // [] [0|15]
  optional Mp5_avm_angleType mp5_avm_angle = 17;
  // [deg] [0|63]
  optional int32 mp5_avm_rotationchange = 18;
  // [] [0|1]
  optional Mp5_ihcmenureqType mp5_ihcmenureq = 19;
  // [] [0|1]
  optional Mp5_doa_activeType mp5_doa_active = 20;
  // [] [0|1]
  optional Mp5_apa_available_stsType mp5_apa_available_sts = 21;
  // [] [0|1]
  optional Mp5_tpmsautolocationsettingType mp5_tpmsautolocationsetting = 22;
  // [] [0|3]
  optional Mp5_avm_rotationdirectionType mp5_avm_rotationdirection = 23;
  // [] [0|3]
  optional Mp5_avm_buttonType mp5_avm_button = 24;
  // [] [0|1]
  optional Mp5_view_choiceType mp5_view_choice = 25;
}

message Mrr_frobj_0x279_279 {
  // Report Message
    enum Mrr_f_obj_0x_classType {
      MRR_F_OBJ_0X_CLASS_UNKNOWN = 0;
      MRR_F_OBJ_0X_CLASS_CAR = 1;
      MRR_F_OBJ_0X_CLASS_TRUCK = 2;
      MRR_F_OBJ_0X_CLASS_TWO_WHEELER = 3;
    }
    enum Mrr_ff_obj_0x_classType {
      MRR_FF_OBJ_0X_CLASS_UNKNOWN = 0;
      MRR_FF_OBJ_0X_CLASS_CAR = 1;
      MRR_FF_OBJ_0X_CLASS_TRUCK = 2;
      MRR_FF_OBJ_0X_CLASS_TWO_WHEELER = 3;
    }
    enum Mrr_fftargrtdetectionType {
      MRR_FFTARGRTDETECTION_NOT_DECTECTED = 0;
      MRR_FFTARGRTDETECTION_DECTECTED = 1;
    }
    enum Mrr_peddetectionType {
      MRR_PEDDETECTION_NOT_DECTECTED = 0;
      MRR_PEDDETECTION_DECTECTED = 1;
    }
    // [] [-15|15]
    optional double mrr_f_object_dy = 1;
    // [] [0|7]
    optional Mrr_f_obj_0x_classType mrr_f_obj_0x_class = 2;
    // [] [0|255.875]
    optional double mrr_ff_object_dx = 3;
    // [] [-15|15]
    optional double mrr_ff_object_dy = 4;
    // [] [0|7]
    optional Mrr_ff_obj_0x_classType mrr_ff_obj_0x_class = 5;
    // [] [0|1]
    optional Mrr_fftargrtdetectionType mrr_fftargrtdetection = 6;
    // [] [0|1]
    optional Mrr_peddetectionType mrr_peddetection = 7;
    // [] [0|255.875]
    optional double mrr_f_object_dx = 8;
  }

message Gw_ic_0x510_510 {
  // Report Message
    enum Ic_airbagtelltalebehaviorType {
      IC_AIRBAGTELLTALEBEHAVIOR_NO_FAILURE_IN_LAMP_AND_LAMP_IS_OFF = 0;
      IC_AIRBAGTELLTALEBEHAVIOR_FAILURE_IN_LAMP = 1;
      IC_AIRBAGTELLTALEBEHAVIOR_NO_FAILURE_IN_THE_LAMP_LAMP_IS_ON = 2;
      IC_AIRBAGTELLTALEBEHAVIOR_NO_FAILURE_IN_THE_LAMP_LAMP_IS_BLINKING = 3;
      IC_AIRBAGTELLTALEBEHAVIOR_AIRBAGFAILSTS_SIGNAL_NOT_RECEIVED = 4;
      IC_AIRBAGTELLTALEBEHAVIOR_INVALID = 5;
    }
    enum Ic_vehbrkpump_err_icType {
      IC_VEHBRKPUMP_ERR_IC_NORMAL = 0;
      IC_VEHBRKPUMP_ERR_IC_ERROR = 1;
    }
    enum Ic_disfailType {
      IC_DISFAIL_NO_ERROR = 0;
      IC_DISFAIL_ERROR = 1;
    }
    enum Ic_qdashaccfailType {
      IC_QDASHACCFAIL_NO_ERROR = 0;
      IC_QDASHACCFAIL_REVERSIBLE_ERROR = 1;
      IC_QDASHACCFAIL_IRREVERSIBLE_ERROR = 2;
      IC_QDASHACCFAIL_NOT_DEFINED = 3;
    }
    // [] [0|7]
    optional Ic_airbagtelltalebehaviorType ic_airbagtelltalebehavior = 1;
    // [] [0|1]
    optional Ic_vehbrkpump_err_icType ic_vehbrkpump_err_ic = 2;
    // [] [0|1]
    optional Ic_disfailType ic_disfail = 3;
    // [] [0|3]
    optional Ic_qdashaccfailType ic_qdashaccfail = 4;
    // [kph] [0|500]
    optional int32 ic_vehspd_hmi = 5;
    // [] [0|15]
    optional int32 ic_rolling_counter_0x510 = 6;
    // [] [0|255]
    optional int32 ic_checksum_0x510 = 7;
    // [km] [0|999999]
    optional double ic_odometermastervalue = 8;
  }

message Esp_tq_0x217_217 {
// Report Message
  enum Esp_trqinc_reqType {
    ESP_TRQINC_REQ_INACTIVE = 0;
    ESP_TRQINC_REQ_ACTIVE = 1;
  }
  enum Esp_trqred_reqType {
    ESP_TRQRED_REQ_INACTIVE = 0;
    ESP_TRQRED_REQ_ACTIVE = 1;
  }
  // [Nm] [-1000|1000]
  optional double esp_tqdecreqdbyespslow = 1;
  // [Nm] [-1000|1000]
  optional double esp_tqinccreqdbyesp = 2;
  // [] [0|15]
  optional int32 rolling_counter_0x217 = 3;
  // [] [0|1]
  optional Esp_trqinc_reqType esp_trqinc_req = 4;
  // [] [0|1]
  optional Esp_trqred_reqType esp_trqred_req = 5;
  // [] [0|255]
  optional int32 checksum_0x217 = 6;
  // [Nm] [-1000|1000]
  optional double esp_tqdecreqdbyespfast = 7;
}

message Esp_rpmf_0x213_213 {
// Report Message
  enum Esp_wheelrpmfrvalidType {
    ESP_WHEELRPMFRVALID_VALID = 0;
    ESP_WHEELRPMFRVALID_INVALID = 1;
  }
  enum Esp_wheelrpmflvalidType {
    ESP_WHEELRPMFLVALID_VALID = 0;
    ESP_WHEELRPMFLVALID_INVALID = 1;
  }
  // [rpm] [0|2047.875]
  optional double esp_wheelrpmfr = 1;
  // [] [0|1]
  optional Esp_wheelrpmfrvalidType esp_wheelrpmfrvalid = 2;
  // [] [0|15]
  optional int32 rolling_counter_0x213 = 3;
  // [] [0|255]
  optional int32 checksum_0x213 = 4;
  // [rpm] [0|2047.875]
  optional double esp_wheelrpmfl = 5;
  // [] [0|1]
  optional Esp_wheelrpmflvalidType esp_wheelrpmflvalid = 6;
}

message Gw_ic_time_0x581_581 {
// Report Message
  enum Ic_monthType {
    IC_MONTH_1 = 0;
    IC_MONTH_2 = 1;
    IC_MONTH_3 = 2;
    IC_MONTH_4 = 3;
    IC_MONTH_5 = 4;
    IC_MONTH_6 = 5;
    IC_MONTH_7 = 6;
    IC_MONTH_8 = 7;
    IC_MONTH_9 = 8;
    IC_MONTH_10 = 9;
    IC_MONTH_11 = 10;
    IC_MONTH_12 = 11;
  }
  enum Ic_dateType {
    IC_DATE_1 = 0;
    IC_DATE_2 = 1;
    IC_DATE_3 = 2;
    IC_DATE_4 = 3;
    IC_DATE_5 = 4;
    IC_DATE_6 = 5;
    IC_DATE_7 = 6;
    IC_DATE_8 = 7;
    IC_DATE_9 = 8;
    IC_DATE_10 = 9;
    IC_DATE_11 = 10;
    IC_DATE_12 = 11;
    IC_DATE_13 = 12;
    IC_DATE_14 = 13;
    IC_DATE_15 = 14;
    IC_DATE_16 = 15;
    IC_DATE_17 = 16;
    IC_DATE_18 = 17;
    IC_DATE_19 = 18;
    IC_DATE_20 = 19;
    IC_DATE_21 = 20;
    IC_DATE_22 = 21;
    IC_DATE_23 = 22;
    IC_DATE_24 = 23;
    IC_DATE_25 = 24;
    IC_DATE_26 = 25;
    IC_DATE_27 = 26;
    IC_DATE_28 = 27;
    IC_DATE_29 = 28;
    IC_DATE_30 = 29;
    IC_DATE_31 = 30;
  }
  enum Ic_hourType {
    IC_HOUR_0 = 0;
    IC_HOUR_1 = 1;
    IC_HOUR_2 = 2;
    IC_HOUR_3 = 3;
    IC_HOUR_4 = 4;
    IC_HOUR_5 = 5;
    IC_HOUR_6 = 6;
    IC_HOUR_7 = 7;
    IC_HOUR_8 = 8;
    IC_HOUR_9 = 9;
    IC_HOUR_10 = 10;
    IC_HOUR_11 = 11;
    IC_HOUR_12 = 12;
    IC_HOUR_13 = 13;
    IC_HOUR_14 = 14;
    IC_HOUR_15 = 15;
    IC_HOUR_16 = 16;
    IC_HOUR_17 = 17;
    IC_HOUR_18 = 18;
    IC_HOUR_19 = 19;
    IC_HOUR_20 = 20;
    IC_HOUR_21 = 21;
    IC_HOUR_22 = 22;
    IC_HOUR_23 = 23;
  }
  enum Ic_minuteType {
    IC_MINUTE_0 = 0;
    IC_MINUTE_1 = 1;
    IC_MINUTE_2 = 2;
    IC_MINUTE_3 = 3;
    IC_MINUTE_4 = 4;
    IC_MINUTE_5 = 5;
    IC_MINUTE_6 = 6;
    IC_MINUTE_7 = 7;
    IC_MINUTE_8 = 8;
    IC_MINUTE_9 = 9;
    IC_MINUTE_10 = 10;
    IC_MINUTE_11 = 11;
    IC_MINUTE_12 = 12;
    IC_MINUTE_13 = 13;
    IC_MINUTE_14 = 14;
    IC_MINUTE_15 = 15;
    IC_MINUTE_16 = 16;
    IC_MINUTE_17 = 17;
    IC_MINUTE_18 = 18;
    IC_MINUTE_19 = 19;
    IC_MINUTE_20 = 20;
    IC_MINUTE_21 = 21;
    IC_MINUTE_22 = 22;
    IC_MINUTE_23 = 23;
    IC_MINUTE_24 = 24;
    IC_MINUTE_25 = 25;
    IC_MINUTE_26 = 26;
    IC_MINUTE_27 = 27;
    IC_MINUTE_28 = 28;
    IC_MINUTE_29 = 29;
    IC_MINUTE_30 = 30;
    IC_MINUTE_31 = 31;
    IC_MINUTE_32 = 32;
    IC_MINUTE_33 = 33;
    IC_MINUTE_34 = 34;
    IC_MINUTE_35 = 35;
    IC_MINUTE_36 = 36;
    IC_MINUTE_37 = 37;
    IC_MINUTE_38 = 38;
    IC_MINUTE_39 = 39;
    IC_MINUTE_40 = 40;
    IC_MINUTE_41 = 41;
    IC_MINUTE_42 = 42;
    IC_MINUTE_43 = 43;
    IC_MINUTE_44 = 44;
    IC_MINUTE_45 = 45;
    IC_MINUTE_46 = 46;
    IC_MINUTE_47 = 47;
    IC_MINUTE_48 = 48;
    IC_MINUTE_49 = 49;
    IC_MINUTE_50 = 50;
    IC_MINUTE_51 = 51;
    IC_MINUTE_52 = 52;
    IC_MINUTE_53 = 53;
    IC_MINUTE_54 = 54;
    IC_MINUTE_55 = 55;
    IC_MINUTE_56 = 56;
    IC_MINUTE_57 = 57;
    IC_MINUTE_58 = 58;
    IC_MINUTE_59 = 59;
  }
  enum Ic_secondType {
    IC_SECOND_0 = 0;
    IC_SECOND_1 = 1;
    IC_SECOND_2 = 2;
    IC_SECOND_3 = 3;
    IC_SECOND_4 = 4;
    IC_SECOND_5 = 5;
    IC_SECOND_6 = 6;
    IC_SECOND_7 = 7;
    IC_SECOND_8 = 8;
    IC_SECOND_9 = 9;
    IC_SECOND_10 = 10;
    IC_SECOND_11 = 11;
    IC_SECOND_12 = 12;
    IC_SECOND_13 = 13;
    IC_SECOND_14 = 14;
    IC_SECOND_15 = 15;
    IC_SECOND_16 = 16;
    IC_SECOND_17 = 17;
    IC_SECOND_18 = 18;
    IC_SECOND_19 = 19;
    IC_SECOND_20 = 20;
    IC_SECOND_21 = 21;
    IC_SECOND_22 = 22;
    IC_SECOND_23 = 23;
    IC_SECOND_24 = 24;
    IC_SECOND_25 = 25;
    IC_SECOND_26 = 26;
    IC_SECOND_27 = 27;
    IC_SECOND_28 = 28;
    IC_SECOND_29 = 29;
    IC_SECOND_30 = 30;
    IC_SECOND_31 = 31;
    IC_SECOND_32 = 32;
    IC_SECOND_33 = 33;
    IC_SECOND_34 = 34;
    IC_SECOND_35 = 35;
    IC_SECOND_36 = 36;
    IC_SECOND_37 = 37;
    IC_SECOND_38 = 38;
    IC_SECOND_39 = 39;
    IC_SECOND_40 = 40;
    IC_SECOND_41 = 41;
    IC_SECOND_42 = 42;
    IC_SECOND_43 = 43;
    IC_SECOND_44 = 44;
    IC_SECOND_45 = 45;
    IC_SECOND_46 = 46;
    IC_SECOND_47 = 47;
    IC_SECOND_48 = 48;
    IC_SECOND_49 = 49;
    IC_SECOND_50 = 50;
    IC_SECOND_51 = 51;
    IC_SECOND_52 = 52;
    IC_SECOND_53 = 53;
    IC_SECOND_54 = 54;
    IC_SECOND_55 = 55;
    IC_SECOND_56 = 56;
    IC_SECOND_57 = 57;
    IC_SECOND_58 = 58;
    IC_SECOND_59 = 59;
  }
  enum Ic_yearType {
    IC_YEAR_2019 = 2;
    IC_YEAR_2020 = 3;
    IC_YEAR_2021 = 4;
  }
  // [] [1|12]
  optional Ic_monthType ic_month = 1;
  // [] [1|31]
  optional Ic_dateType ic_date = 2;
  // [] [0|23]
  optional Ic_hourType ic_hour = 3;
  // [] [0|59]
  optional Ic_minuteType ic_minute = 4;
  // [] [0|59]
  optional Ic_secondType ic_second = 5;
  // [] [2017|2272]
  optional Ic_yearType ic_year = 6;
}

message Afs_0x5a0_5a0 {
// Report Message
  enum Afs_work_stsType {
    AFS_WORK_STS_OFF = 0;
    AFS_WORK_STS_ON = 1;
    AFS_WORK_STS_ERROR = 2;
    AFS_WORK_STS_NOT_CALIBRATION = 3;
  }
  // [] [0|3]
  optional Afs_work_stsType afs_work_sts = 1;
}

message Sod_nm_0x440_440 {
// Report Message
  enum SodnmlimphomeType {
    SODNMLIMPHOME_NOT_ACTIVE = 0;
    SODNMLIMPHOME_ACTIVE = 1;
  }
  enum SodnmsleepindType {
    SODNMSLEEPIND_NOT_ACTIVE = 0;
    SODNMSLEEPIND_ACTIVE = 1;
  }
  enum SodnmsleepackType {
    SODNMSLEEPACK_NOT_ACTIVE = 0;
    SODNMSLEEPACK_ACTIVE = 1;
  }
  enum SodnmaliveType {
    SODNMALIVE_NOT_ACTIVE = 0;
    SODNMALIVE_ACTIVE = 1;
  }
  enum SodnmringType {
    SODNMRING_NOT_ACTIVE = 0;
    SODNMRING_ACTIVE = 1;
  }
  // [] [0|1]
  optional SodnmlimphomeType sodnmlimphome = 1;
  // [] [0|1]
  optional SodnmsleepindType sodnmsleepind = 2;
  // [] [0|1]
  optional SodnmsleepackType sodnmsleepack = 3;
  // [] [0|255]
  optional int32 sodnmdestaddr = 4;
  // [] [0|1]
  optional SodnmaliveType sodnmalive = 5;
  // [] [0|1]
  optional SodnmringType sodnmring = 6;
}

message Gw_nm_0x460_460 {
// Report Message
  enum GwnmlimphomeType {
    GWNMLIMPHOME_NOT_ACTIVE = 0;
    GWNMLIMPHOME_ACTIVE = 1;
  }
  enum GwnmsleepindType {
    GWNMSLEEPIND_NOT_ACTIVE = 0;
    GWNMSLEEPIND_ACTIVE = 1;
  }
  enum GwnmsleepackType {
    GWNMSLEEPACK_NOT_ACTIVE = 0;
    GWNMSLEEPACK_ACTIVE = 1;
  }
  enum GwnmaliveType {
    GWNMALIVE_NOT_ACTIVE = 0;
    GWNMALIVE_ACTIVE = 1;
  }
  enum GwnmringType {
    GWNMRING_NOT_ACTIVE = 0;
    GWNMRING_ACTIVE = 1;
  }
  // [] [0|1]
  optional GwnmlimphomeType gwnmlimphome = 1;
  // [] [0|1]
  optional GwnmsleepindType gwnmsleepind = 2;
  // [] [0|1]
  optional GwnmsleepackType gwnmsleepack = 3;
  // [] [0|255]
  optional int32 gwnmdestaddr = 4;
  // [] [0|1]
  optional GwnmaliveType gwnmalive = 5;
  // [] [0|1]
  optional GwnmringType gwnmring = 6;
}

message Eps_0x260_260 {
// Report Message
  enum Eps_sassoftlimitrightflgType {
    EPS_SASSOFTLIMITRIGHTFLG_NO_LEARNED = 0;
    EPS_SASSOFTLIMITRIGHTFLG_PRIMARY_LEARNED_ONLY_FOR_CEPS = 1;
    EPS_SASSOFTLIMITRIGHTFLG_LEARNED = 2;
    EPS_SASSOFTLIMITRIGHTFLG_RESERVED = 3;
  }
  enum Eps_st_emergencypowerlimitType {
    EPS_ST_EMERGENCYPOWERLIMIT_NORMAL = 0;
    EPS_ST_EMERGENCYPOWERLIMIT_POWER_DENSITY_LIMIT = 1;
  }
  enum Eps_st_emergencymotorType {
    EPS_ST_EMERGENCYMOTOR_NORMAL = 0;
    EPS_ST_EMERGENCYMOTOR_SERVO_MOTOR_FAULT = 1;
  }
  enum Eps_st_emergencyecuType {
    EPS_ST_EMERGENCYECU_NORMAL = 0;
    EPS_ST_EMERGENCYECU_ECU_INNER_FAULT = 1;
  }
  enum Eps_st_emergencycaninterfaceType {
    EPS_ST_EMERGENCYCANINTERFACE_NORMAL = 0;
    EPS_ST_EMERGENCYCANINTERFACE_CAN_INTERFACE_IS_FAULT = 1;
  }
  enum Eps_st_emergencysensorType {
    EPS_ST_EMERGENCYSENSOR_NORMAL = 0;
    EPS_ST_EMERGENCYSENSOR_SENSOR_IS_FAULT = 1;
  }
  enum Eps_st_emergencyovertempType {
    EPS_ST_EMERGENCYOVERTEMP_NORMAL = 0;
    EPS_ST_EMERGENCYOVERTEMP_OVER_TEMPERATURE = 1;
  }
  enum Eps_st_emergencyovervoltageType {
    EPS_ST_EMERGENCYOVERVOLTAGE_NORMAL = 0;
    EPS_ST_EMERGENCYOVERVOLTAGE_OVER_VOLTAGE = 1;
  }
  enum Eps_st_emergencyundervoltageType {
    EPS_ST_EMERGENCYUNDERVOLTAGE_NORMAL = 0;
    EPS_ST_EMERGENCYUNDERVOLTAGE_UNDER_VOLTAGE = 1;
  }
  enum Eps_f_ecutempvalidType {
    EPS_F_ECUTEMPVALID_INVALID = 0;
    EPS_F_ECUTEMPVALID_VALID = 1;
  }
  enum Eps_sassoftlimitleftflgType {
    EPS_SASSOFTLIMITLEFTFLG_NO_LEARNED = 0;
    EPS_SASSOFTLIMITLEFTFLG_PRIMARY_LEARNED_ONLY_FOR_CEPS = 1;
    EPS_SASSOFTLIMITLEFTFLG_LEARNED = 2;
    EPS_SASSOFTLIMITLEFTFLG_RESERVED = 3;
  }
  enum Eps_st_dtcflagType {
    EPS_ST_DTCFLAG_NO_DTC_EXIST = 0;
    EPS_ST_DTCFLAG_DTC_EXIST = 1;
  }
  enum Eps_sasindexstsType {
    EPS_SASINDEXSTS_STEERWHEEL_NOT_AT_MIDDLE_POSITION = 0;
    EPS_SASINDEXSTS_STEERWHEEL_AT_MIDDLE_POSITION = 1;
  }
  enum Eps_s_warninglampyellowType {
    EPS_S_WARNINGLAMPYELLOW_CLOSE = 0;
    EPS_S_WARNINGLAMPYELLOW_OPEN = 1;
  }
  enum Eps_s_safelampredType {
    EPS_S_SAFELAMPRED_CLOSE = 0;
    EPS_S_SAFELAMPRED_OPEN = 1;
  }
  enum Eps_f_loadinfoType {
    EPS_F_LOADINFO_NO_FAULT = 0;
    EPS_F_LOADINFO_FAULT = 1;
  }
  // [] [0|3]
  optional Eps_sassoftlimitrightflgType eps_sassoftlimitrightflg = 1;
  // [A] [0|127]
  optional int32 eps_n_loadinfo = 2;
  // [] [0|1]
  optional Eps_st_emergencypowerlimitType eps_st_emergencypowerlimit = 3;
  // [] [0|1]
  optional Eps_st_emergencymotorType eps_st_emergencymotor = 4;
  // [] [0|1]
  optional Eps_st_emergencyecuType eps_st_emergencyecu = 5;
  // [] [0|1]
  optional Eps_st_emergencycaninterfaceType eps_st_emergencycaninterface = 6;
  // [] [0|1]
  optional Eps_st_emergencysensorType eps_st_emergencysensor = 7;
  // [] [0|1]
  optional Eps_st_emergencyovertempType eps_st_emergencyovertemp = 8;
  // [] [0|1]
  optional Eps_st_emergencyovervoltageType eps_st_emergencyovervoltage = 9;
  // [] [0|1]
  optional Eps_st_emergencyundervoltageType eps_st_emergencyundervoltage = 10;
  // [] [0|1]
  optional Eps_f_ecutempvalidType eps_f_ecutempvalid = 11;
  // [] [0|3]
  optional Eps_sassoftlimitleftflgType eps_sassoftlimitleftflg = 12;
  // [Degree] [-70|185]
  optional int32 eps_n_ecutemp = 13;
  // [%] [0|100]
  optional double eps_n_performanceredu = 14;
  // [] [0|1]
  optional Eps_st_dtcflagType eps_st_dtcflag = 15;
  // [] [0|15]
  optional int32 rolling_counter_0x260 = 16;
  // [] [0|1]
  optional Eps_sasindexstsType eps_sasindexsts = 17;
  // [] [0|1]
  optional Eps_s_warninglampyellowType eps_s_warninglampyellow = 18;
  // [] [0|255]
  optional int32 checksum_0x260 = 19;
  // [] [0|1]
  optional Eps_s_safelampredType eps_s_safelampred = 20;
  // [] [0|1]
  optional Eps_f_loadinfoType eps_f_loadinfo = 21;
}

message Sod_0x275_275 {
// Report Message
  enum Sod_lca_warningreqrightType {
    SOD_LCA_WARNINGREQRIGHT_NO_WARNING = 0;
    SOD_LCA_WARNINGREQRIGHT_WARNING_LEVEL_1 = 1;
    SOD_LCA_WARNINGREQRIGHT_WARNING_LEVEL_2 = 2;
    SOD_LCA_WARNINGREQRIGHT_RESERVED = 3;
  }
  enum Sod_blis_activeType {
    SOD_BLIS_ACTIVE_NO_ACTIVE = 0;
    SOD_BLIS_ACTIVE_STANBY = 1;
    SOD_BLIS_ACTIVE_ACTIVE = 2;
    SOD_BLIS_ACTIVE_FAIL = 3;
  }
  enum Sod_blis_displayType {
    SOD_BLIS_DISPLAY_NO_DISPLAY = 0;
    SOD_BLIS_DISPLAY_SOD_LCA_CTA_DOA_ERROR = 1;
    SOD_BLIS_DISPLAY_SOD_LCA_CTA_DOA_BLINDNESS = 2;
    SOD_BLIS_DISPLAY_SOD_LCA_CTA_DOA_UNCALIBRATION = 3;
    SOD_BLIS_DISPLAY_TEMPORARY_ERROR = 4;
    SOD_BLIS_DISPLAY_RESERVED = 5;
  }
  enum Sod_lca_warningreqleftType {
    SOD_LCA_WARNINGREQLEFT_NO_WARNING = 0;
    SOD_LCA_WARNINGREQLEFT_WARNING_LEVEL_1 = 1;
    SOD_LCA_WARNINGREQLEFT_WARNING_LEVEL_2 = 2;
    SOD_LCA_WARNINGREQLEFT_RESERVED = 3;
  }
  enum Sod_doa_warningreqleftrearType {
    SOD_DOA_WARNINGREQLEFTREAR_NO_WARNING = 0;
    SOD_DOA_WARNINGREQLEFTREAR_WARNING_LEVEL_1 = 1;
    SOD_DOA_WARNINGREQLEFTREAR_WARNING_LEVEL_2 = 2;
    SOD_DOA_WARNINGREQLEFTREAR_RESERVED = 3;
  }
  enum Sod_doa_warningreqleftfrontType {
    SOD_DOA_WARNINGREQLEFTFRONT_NO_WARNING = 0;
    SOD_DOA_WARNINGREQLEFTFRONT_WARNING_LEVEL_1 = 1;
    SOD_DOA_WARNINGREQLEFTFRONT_WARNING_LEVEL_2 = 2;
    SOD_DOA_WARNINGREQLEFTFRONT_RESERVED = 3;
  }
  enum Sod_cta_warningreqleftType {
    SOD_CTA_WARNINGREQLEFT_NO_WARNING = 0;
    SOD_CTA_WARNINGREQLEFT_RESERVED = 1;
    SOD_CTA_WARNINGREQLEFT_WARNING_LEVEL_2 = 2;
  }
  enum Sod_doa_stateType {
    SOD_DOA_STATE_INACTIVE = 0;
    SOD_DOA_STATE_ACTIVE = 1;
  }
  enum Sod_cta_stateType {
    SOD_CTA_STATE_INACTIVE = 0;
    SOD_CTA_STATE_ACTIVE = 1;
  }
  enum Sod_sodlca_stateType {
    SOD_SODLCA_STATE_INACTIVE = 0;
    SOD_SODLCA_STATE_ACTIVE = 1;
  }
  enum Doa_offtelltaleType {
    DOA_OFFTELLTALE_OFFTELLTLAE_OFF = 0;
    DOA_OFFTELLTALE_OFFTELLTALE_ON = 1;
  }
  enum Sod_doa_warningreqrightrearType {
    SOD_DOA_WARNINGREQRIGHTREAR_NO_WARNING = 0;
    SOD_DOA_WARNINGREQRIGHTREAR_WARNING_LEVEL_1 = 1;
    SOD_DOA_WARNINGREQRIGHTREAR_WARNING_LEVEL_2 = 2;
    SOD_DOA_WARNINGREQRIGHTREAR_RESERVED = 3;
  }
  enum Cta_offtelltaleType {
    CTA_OFFTELLTALE_OFFTELLTLAE_OFF = 0;
    CTA_OFFTELLTALE_OFFTELLTALE_ON = 1;
  }
  enum Sodlca_offtelltaleType {
    SODLCA_OFFTELLTALE_OFFTELLTLAE_OFF = 0;
    SODLCA_OFFTELLTALE_OFFTELLTALE_ON = 1;
  }
  enum Sod_doa_warningreqrightfrontType {
    SOD_DOA_WARNINGREQRIGHTFRONT_NO_WARNING = 0;
    SOD_DOA_WARNINGREQRIGHTFRONT_WARNING_LEVEL_1 = 1;
    SOD_DOA_WARNINGREQRIGHTFRONT_WARNING_LEVEL_2 = 2;
    SOD_DOA_WARNINGREQRIGHTFRONT_RESERVED = 3;
  }
  enum Sod_cta_warningreqrightType {
    SOD_CTA_WARNINGREQRIGHT_NO_WARNING = 0;
    SOD_CTA_WARNINGREQRIGHT_RESERVED = 1;
    SOD_CTA_WARNINGREQRIGHT_WARNING_LEVEL_2 = 2;
  }
  enum Sod_autoalignmentflagType {
    SOD_AUTOALIGNMENTFLAG_NO_SUCCESS = 0;
    SOD_AUTOALIGNMENTFLAG_SUCCESSFUL = 1;
    SOD_AUTOALIGNMENTFLAG_RESERVED = 3;
  }
  // [] [0|3]
  optional Sod_lca_warningreqrightType sod_lca_warningreqright = 1;
  // [] [0|3]
  optional Sod_blis_activeType sod_blis_active = 2;
  // [] [0|15]
  optional Sod_blis_displayType sod_blis_display = 3;
  // [] [0|3]
  optional Sod_lca_warningreqleftType sod_lca_warningreqleft = 4;
  // [] [0|3]
  optional Sod_doa_warningreqleftrearType sod_doa_warningreqleftrear = 5;
  // [] [0|3]
  optional Sod_doa_warningreqleftfrontType sod_doa_warningreqleftfront = 6;
  // [] [0|3]
  optional Sod_cta_warningreqleftType sod_cta_warningreqleft = 7;
  // [] [0|1]
  optional Sod_doa_stateType sod_doa_state = 8;
  // [] [0|1]
  optional Sod_cta_stateType sod_cta_state = 9;
  // [] [0|1]
  optional Sod_sodlca_stateType sod_sodlca_state = 10;
  // [] [0|1]
  optional Doa_offtelltaleType doa_offtelltale = 11;
  // [] [0|3]
  optional Sod_doa_warningreqrightrearType sod_doa_warningreqrightrear = 12;
  // [] [0|1]
  optional Cta_offtelltaleType cta_offtelltale = 13;
  // [] [0|1]
  optional Sodlca_offtelltaleType sodlca_offtelltale = 14;
  // [] [0|3]
  optional Sod_doa_warningreqrightfrontType sod_doa_warningreqrightfront = 15;
  // [] [0|15]
  optional int32 rolling_counter_0x275 = 16;
  // [] [0|255]
  optional int32 checksum_0x275 = 17;
  // [] [0|3]
  optional Sod_cta_warningreqrightType sod_cta_warningreqright = 18;
  // [] [0|3]
  optional Sod_autoalignmentflagType sod_autoalignmentflag = 19;
}

message Gw_tpms_tire_0x361_361 {
// Report Message
  enum Tpms_lf_pressure_warningType {
    TPMS_LF_PRESSURE_WARNING_NO_WARNING = 0;
    TPMS_LF_PRESSURE_WARNING_HIGH_PRESSURE_WARNING = 1;
    TPMS_LF_PRESSURE_WARNING_LOW_PRESSURE_WARNING = 2;
    TPMS_LF_PRESSURE_WARNING_QUIK_LEAKAGE_RESERVED = 3;
    TPMS_LF_PRESSURE_WARNING_LOST_SENSOR = 4;
    TPMS_LF_PRESSURE_WARNING_SENSOR_BATTERY_LOW = 5;
    TPMS_LF_PRESSURE_WARNING_SENSOR_FAULTURE_RESERVED = 6;
    TPMS_LF_PRESSURE_WARNING_LOW_PRESSURE_WARN_QUIK_LEAK_RESERVED = 7;
  }
  enum Tpms_rf_pressure_warningType {
    TPMS_RF_PRESSURE_WARNING_NO_WARNING = 0;
    TPMS_RF_PRESSURE_WARNING_HIGH_PRESSURE_WARNING = 1;
    TPMS_RF_PRESSURE_WARNING_LOW_PRESSURE_WARNING = 2;
    TPMS_RF_PRESSURE_WARNING_QUIK_LEAKAGE_RESERVED = 3;
    TPMS_RF_PRESSURE_WARNING_LOST_SENSOR = 4;
    TPMS_RF_PRESSURE_WARNING_SENSOR_BATTERY_LOW = 5;
    TPMS_RF_PRESSURE_WARNING_SENSOR_FAULTURE_RESERVED = 6;
    TPMS_RF_PRESSURE_WARNING_LOW_PRESSURE_WARN_QUIK_LEAK_RESERVED = 7;
  }
  enum Tpms_system_statusType {
    TPMS_SYSTEM_STATUS_NO_ANY_ERROR = 0;
    TPMS_SYSTEM_STATUS_SYSTEM_ERROR = 1;
    TPMS_SYSTEM_STATUS_SYETEM_WAIT_FOR_LEARNING = 2;
    TPMS_SYSTEM_STATUS_WINTER_MODE = 3;
  }
  enum Tpms_rr_pressure_warningType {
    TPMS_RR_PRESSURE_WARNING_NO_WARNING = 0;
    TPMS_RR_PRESSURE_WARNING_HIGH_PRESSURE_WARNING = 1;
    TPMS_RR_PRESSURE_WARNING_LOW_PRESSURE_WARNING = 2;
    TPMS_RR_PRESSURE_WARNING_QUIK_LEAKAGE_RESERVED = 3;
    TPMS_RR_PRESSURE_WARNING_LOST_SENSOR = 4;
    TPMS_RR_PRESSURE_WARNING_SENSOR_BATTERY_LOW = 5;
    TPMS_RR_PRESSURE_WARNING_SENSOR_FAULTURE_RESERVED = 6;
    TPMS_RR_PRESSURE_WARNING_LOW_PRESSURE_WARN_QUIK_LEAK_RESERVED = 7;
  }
  enum Tpms_lr_pressure_warningType {
    TPMS_LR_PRESSURE_WARNING_NO_WARNING = 0;
    TPMS_LR_PRESSURE_WARNING_HIGH_PRESSURE_WARNING = 1;
    TPMS_LR_PRESSURE_WARNING_LOW_PRESSURE_WARNING = 2;
    TPMS_LR_PRESSURE_WARNING_QUIK_LEAKAGE_RESERVED = 3;
    TPMS_LR_PRESSURE_WARNING_LOST_SENSOR = 4;
    TPMS_LR_PRESSURE_WARNING_SENSOR_BATTERY_LOW = 5;
    TPMS_LR_PRESSURE_WARNING_SENSOR_FAULTURE_RESERVED = 6;
    TPMS_LR_PRESSURE_WARNING_LOW_PRESSURE_WARN_QUIK_LEAK_RESERVED = 7;
  }
  enum Tpms_temperature_warningType {
    TPMS_TEMPERATURE_WARNING_NO_TEMPERATURE_WARNING = 0;
    TPMS_TEMPERATURE_WARNING_TEMPERATURE_WARNING = 1;
  }
  enum Tpms_resrvedType {
    TPMS_RESRVED_RESERVED = 0;
    TPMS_RESRVED_RESERVED1 = 1;
  }
  enum Tire_positionType {
    TIRE_POSITION_NO_ANY_SENSOR_ERROR = 0;
    TIRE_POSITION_LEFT_FRONT_TIRE = 1;
    TIRE_POSITION_RIGHT_FRONT_TIRE = 2;
    TIRE_POSITION_RIGHT_REAR_TIRE = 3;
    TIRE_POSITION_LEFT_REAR_TIRE = 4;
    TIRE_POSITION_RESERVED = 5;
  }
  enum Tpms_lamp_statusType {
    TPMS_LAMP_STATUS_NO_LAMP_LIGHT = 0;
    TPMS_LAMP_STATUS_LAMP_FLASH = 1;
    TPMS_LAMP_STATUS_LAMP_LIGHT = 2;
    TPMS_LAMP_STATUS_RESEVED = 3;
  }
  enum Tpms_al_stateType {
    TPMS_AL_STATE_DEFAULTS = 0;
    TPMS_AL_STATE_SELF_LEARNING = 1;
    TPMS_AL_STATE_SELF_LEARNING_OVER = 2;
    TPMS_AL_STATE_RESERVE = 3;
  }
  // [Kpa] [0|698.5]
  optional double tpms_rf_pressure = 1;
  // [Kpa] [0|698.5]
  optional double tpms_rr_pressure = 2;
  // [Kpa] [0|698.5]
  optional double tpms_lr_pressure = 3;
  // [deg.C] [-60|194]
  optional int32 tpms_tire_temperature = 4;
  // [] [0|7]
  optional Tpms_lf_pressure_warningType tpms_lf_pressure_warning = 5;
  // [] [0|7]
  optional Tpms_rf_pressure_warningType tpms_rf_pressure_warning = 6;
  // [] [0|3]
  optional Tpms_system_statusType tpms_system_status = 7;
  // [] [0|7]
  optional Tpms_rr_pressure_warningType tpms_rr_pressure_warning = 8;
  // [] [0|7]
  optional Tpms_lr_pressure_warningType tpms_lr_pressure_warning = 9;
  // [] [0|1]
  optional Tpms_temperature_warningType tpms_temperature_warning = 10;
  // [] [0|1]
  optional Tpms_resrvedType tpms_resrved = 11;
  // [] [0|7]
  optional Tire_positionType tire_position = 12;
  // [] [0|3]
  optional Tpms_lamp_statusType tpms_lamp_status = 13;
  // [] [0|1]
  optional Tpms_al_stateType tpms_al_state = 14;
  // [Kpa] [0|698.5]
  optional double tpms_lf_pressure = 15;
}

message Ins_datainfo_506 {
// Report Message
  enum Ins_car_statusType {
    INS_CAR_STATUS_RECEIVEWHEELSPEED = 0;
    INS_CAR_STATUS_NORECEIVE = 1;
  }
  enum Ins_statusType {
    INS_STATUS_NONE = 0;
    INS_STATUS_ATTITUDEINITIALIZATION = 1;
    INS_STATUS_NAVIGATION = 2;
  }
  // [] [0|255]
  optional int32 ins_gpsflag_pos = 1;
  // [] [0|255]
  optional int32 ins_numsv = 2;
  // [] [0|255]
  optional int32 ins_gpsflag_heading = 3;
  // [s] [0|255]
  optional int32 ins_gps_age = 4;
  // [] [0|255]
  optional int32 ins_car_status = 5;
  // [] [0|255]
  optional int32 ins_status = 6;
}

message Ins_std_507 {
// Report Message
  // [] [0|65.535]
  optional double ins_std_lat = 1;
  // [] [0|65.535]
  optional double ins_std_lon = 2;
  // [] [0|65.535]
  optional double ins_std_locatheight = 3;
  // [] [0|65.535]
  optional double inins_std_heading = 4;
}

message Ins_latitudelongitude_504 {
// Report Message
  // [deg] [-180|180]
  optional double ins__latitude = 1;
  // [deg] [-180|180]
  optional double ins_longitude = 2;
}

message Ins_speed_505 {
// Report Message
  // [m/s] [-100|100]
  optional double ins_northspd = 1;
  // [m/s] [-100|100]
  optional double ins_eastspd = 2;
  // [m/s] [-100|100]
  optional double ins_togroundspd = 3;
}

message Ins_headingpitchroll_502 {
// Report Message
  // [deg] [-360|360]
  optional double ins_pitchangle = 1;
  // [deg] [-360|360]
  optional double ins_rollangle = 2;
  // [deg] [-360|360]
  optional double ins_headingangle = 3;
}

message Ins_heightandtime_503 {
// Report Message
  // [m] [-10000|10000]
  optional double ins_locatheight = 1;
  // [ms] [0|4294970000]
  optional int32 ins_time = 2;
}

message Ins_gyro_501 {
// Report Message
  // [deg/s] [-250|250]
  optional double gyro_x = 1;
  // [deg/s] [-250|250]
  optional double gyro_y = 2;
  // [deg/s] [-250|250]
  optional double gyro_z = 3;
}

message Ins_acc_500 {
// Report Message
  // [g] [-4|4]
  optional double acc_x = 1;
  // [g] [-4|4]
  optional double acc_y = 2;
  // [g] [-4|4]
  optional double acc_z = 3;
}

message Cx75 {
  optional Gw_ems_sts_0x151_151 gw_ems_sts_0x151_151 = 1; // report message
  optional Esp_raw_0x212_212 esp_raw_0x212_212 = 2; // report message
  optional Gw_bcm_door_0x310_310 gw_bcm_door_0x310_310 = 3; // report message
  optional Pam_0x270_270 pam_0x270_270 = 4; // control message
  optional Pam_0x271_271 pam_0x271_271 = 5; // control message
  optional Pam_0x272_272 pam_0x272_272 = 6; // control message
  optional Mrr_0x238_238 mrr_0x238_238 = 7; // control message
  optional Mrr_0x239_239 mrr_0x239_239 = 8;// control message
  optional Esp_direction_0x235_235 esp_direction_0x235_235 = 9; // report message
  optional Esp_advanced_0x234_234 esp_advanced_0x234_234 = 10; // report message
  optional Eps_advanced_0x176_176 eps_advanced_0x176_176 = 11; // report message
  optional Esp_whlpulse_0x236_236 esp_whlpulse_0x236_236 = 12; // report message
  optional Ipm_rightline_0x490_490 ipm_rightline_0x490_490 = 13;// control message
  optional Sas_sensor_0x175_175 sas_sensor_0x175_175 = 14; // report message
  optional Gw_body_0x321_321 gw_body_0x321_321 = 15; // report message
  optional Ipm_leftline_0x278_278 ipm_leftline_0x278_278 = 16; // control message
  optional Gw_ems_engstatus_0x142_142 gw_ems_engstatus_0x142_142 = 17; // report message
  optional Gw_tbox_location_0x580_580 gw_tbox_location_0x580_580 = 18; // report message
  optional Srs_0x350_350 srs_0x350_350 = 19; // report message
  optional Ipm_0x245_245 ipm_0x245_245 = 20; // control message
  optional Gw_ems_tqwhl_0x111_111 gw_ems_tqwhl_0x111_111 = 21; // report message
  optional Gw_tcu_gearinfo_0x123_123 gw_tcu_gearinfo_0x123_123 = 22; // report message
  optional Esp_pressure_0x241_241 esp_pressure_0x241_241 = 23; // report message
  optional Esp_status_0x243_243 esp_status_0x243_243 = 24; // report message
  optional Esp_axay_0x242_242 esp_axay_0x242_242 = 25; // report message
  optional Gw_swm_mrr_0x31b_31b gw_swm_mrr_0x31b_31b = 26; // report message
  optional Gw_swm_body_0x31a_31a gw_swm_body_0x31a_31a = 27; // report message
  optional Gw_ems_tq_0x101_101 gw_ems_tq_0x101_101 = 28; // report message
  optional Esp_vlc_0x223_223 esp_vlc_0x223_223 = 29; // report message
  optional Gw_ems_whltq_0x107_107 gw_ems_whltq_0x107_107 = 30; // report message
  optional Abs_sts_0x221_221 abs_sts_0x221_221 = 31; // report message
  optional Mrr_frobj_0x480_480 mrr_frobj_0x480_480 = 32; // control message
  optional Mrr_0x246_246 mrr_0x246_246 = 33; // control message
  optional Gw_mp5_nav_0x533_533 gw_mp5_nav_0x533_533 = 34; // report message
  optional Gw_mp5_0x530_530 gw_mp5_0x530_530 = 35; // report message
  optional Mrr_frobj_0x279_279 mrr_frobj_0x279_279 = 36; // control message
  optional Gw_ic_0x510_510 gw_ic_0x510_510 = 37; // report message
  optional Abs_whlspd_0x211_211 abs_whlspd_0x211_211 = 38; // report message
  optional Esp_tq_0x217_217 esp_tq_0x217_217 = 39; // report message
  optional Esp_rpmf_0x213_213 esp_rpmf_0x213_213 = 40; // report message
  optional Gw_ic_time_0x581_581 gw_ic_time_0x581_581 = 41; // report message
  optional Afs_0x5a0_5a0 afs_0x5a0_5a0 = 42; // report message
  optional Sod_nm_0x440_440 sod_nm_0x440_440 = 43; // report message
  optional Gw_nm_0x460_460 gw_nm_0x460_460 = 44; // report message
  optional Eps_0x260_260 eps_0x260_260 = 45; // report message
  optional Sod_0x275_275 sod_0x275_275 = 46; // report message
  optional Gw_tpms_tire_0x361_361 gw_tpms_tire_0x361_361 = 47; // report message
  optional Ins_datainfo_506 ins_datainfo_506 = 48; // report message
  optional Ins_std_507 ins_std_507 = 49; // report message
  optional Ins_latitudelongitude_504 ins_latitudelongitude_504 = 50; // report message
  optional Ins_speed_505 ins_speed_505 = 51; // report message
  optional Ins_headingpitchroll_502 ins_headingpitchroll_502 = 52; // report message
  optional Ins_heightandtime_503 ins_heightandtime_503 = 53; // report message
  optional Ins_gyro_501 ins_gyro_501 = 54; // report message
  optional Ins_acc_500 ins_acc_500 = 55; // report message
}
