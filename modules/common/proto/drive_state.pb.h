// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/proto/drive_state.proto

#ifndef PROTOBUF_modules_2fcommon_2fproto_2fdrive_5fstate_2eproto__INCLUDED
#define PROTOBUF_modules_2fcommon_2fproto_2fdrive_5fstate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace jmc_auto {
namespace common {
class EngageAdvice;
class EngageAdviceDefaultTypeInternal;
extern EngageAdviceDefaultTypeInternal _EngageAdvice_default_instance_;
}  // namespace common
}  // namespace jmc_auto

namespace jmc_auto {
namespace common {

namespace protobuf_modules_2fcommon_2fproto_2fdrive_5fstate_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_modules_2fcommon_2fproto_2fdrive_5fstate_2eproto

enum EngageAdvice_Advice {
  EngageAdvice_Advice_UNKNOWN = 0,
  EngageAdvice_Advice_DISALLOW_ENGAGE = 1,
  EngageAdvice_Advice_READY_TO_ENGAGE = 2,
  EngageAdvice_Advice_KEEP_ENGAGED = 3,
  EngageAdvice_Advice_PREPARE_DISENGAGE = 4
};
bool EngageAdvice_Advice_IsValid(int value);
const EngageAdvice_Advice EngageAdvice_Advice_Advice_MIN = EngageAdvice_Advice_UNKNOWN;
const EngageAdvice_Advice EngageAdvice_Advice_Advice_MAX = EngageAdvice_Advice_PREPARE_DISENGAGE;
const int EngageAdvice_Advice_Advice_ARRAYSIZE = EngageAdvice_Advice_Advice_MAX + 1;

const ::google::protobuf::EnumDescriptor* EngageAdvice_Advice_descriptor();
inline const ::std::string& EngageAdvice_Advice_Name(EngageAdvice_Advice value) {
  return ::google::protobuf::internal::NameOfEnum(
    EngageAdvice_Advice_descriptor(), value);
}
inline bool EngageAdvice_Advice_Parse(
    const ::std::string& name, EngageAdvice_Advice* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EngageAdvice_Advice>(
    EngageAdvice_Advice_descriptor(), name, value);
}
// ===================================================================

class EngageAdvice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jmc_auto.common.EngageAdvice) */ {
 public:
  EngageAdvice();
  virtual ~EngageAdvice();

  EngageAdvice(const EngageAdvice& from);

  inline EngageAdvice& operator=(const EngageAdvice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EngageAdvice& default_instance();

  static inline const EngageAdvice* internal_default_instance() {
    return reinterpret_cast<const EngageAdvice*>(
               &_EngageAdvice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(EngageAdvice* other);

  // implements Message ----------------------------------------------

  inline EngageAdvice* New() const PROTOBUF_FINAL { return New(NULL); }

  EngageAdvice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EngageAdvice& from);
  void MergeFrom(const EngageAdvice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EngageAdvice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EngageAdvice_Advice Advice;
  static const Advice UNKNOWN =
    EngageAdvice_Advice_UNKNOWN;
  static const Advice DISALLOW_ENGAGE =
    EngageAdvice_Advice_DISALLOW_ENGAGE;
  static const Advice READY_TO_ENGAGE =
    EngageAdvice_Advice_READY_TO_ENGAGE;
  static const Advice KEEP_ENGAGED =
    EngageAdvice_Advice_KEEP_ENGAGED;
  static const Advice PREPARE_DISENGAGE =
    EngageAdvice_Advice_PREPARE_DISENGAGE;
  static inline bool Advice_IsValid(int value) {
    return EngageAdvice_Advice_IsValid(value);
  }
  static const Advice Advice_MIN =
    EngageAdvice_Advice_Advice_MIN;
  static const Advice Advice_MAX =
    EngageAdvice_Advice_Advice_MAX;
  static const int Advice_ARRAYSIZE =
    EngageAdvice_Advice_Advice_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Advice_descriptor() {
    return EngageAdvice_Advice_descriptor();
  }
  static inline const ::std::string& Advice_Name(Advice value) {
    return EngageAdvice_Advice_Name(value);
  }
  static inline bool Advice_Parse(const ::std::string& name,
      Advice* value) {
    return EngageAdvice_Advice_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .jmc_auto.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
  bool has_advice() const;
  void clear_advice();
  static const int kAdviceFieldNumber = 1;
  ::jmc_auto::common::EngageAdvice_Advice advice() const;
  void set_advice(::jmc_auto::common::EngageAdvice_Advice value);

  // @@protoc_insertion_point(class_scope:jmc_auto.common.EngageAdvice)
 private:
  void set_has_advice();
  void clear_has_advice();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int advice_;
  friend struct protobuf_modules_2fcommon_2fproto_2fdrive_5fstate_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EngageAdvice

// optional .jmc_auto.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
inline bool EngageAdvice::has_advice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EngageAdvice::set_has_advice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EngageAdvice::clear_has_advice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EngageAdvice::clear_advice() {
  advice_ = 1;
  clear_has_advice();
}
inline ::jmc_auto::common::EngageAdvice_Advice EngageAdvice::advice() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.EngageAdvice.advice)
  return static_cast< ::jmc_auto::common::EngageAdvice_Advice >(advice_);
}
inline void EngageAdvice::set_advice(::jmc_auto::common::EngageAdvice_Advice value) {
  assert(::jmc_auto::common::EngageAdvice_Advice_IsValid(value));
  set_has_advice();
  advice_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.common.EngageAdvice.advice)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace common
}  // namespace jmc_auto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::jmc_auto::common::EngageAdvice_Advice> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::jmc_auto::common::EngageAdvice_Advice>() {
  return ::jmc_auto::common::EngageAdvice_Advice_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fcommon_2fproto_2fdrive_5fstate_2eproto__INCLUDED
