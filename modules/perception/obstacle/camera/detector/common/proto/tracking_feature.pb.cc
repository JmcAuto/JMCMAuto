// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/obstacle/camera/detector/common/proto/tracking_feature.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/perception/obstacle/camera/detector/common/proto/tracking_feature.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace jmc_auto {
namespace perception {
class FeatureParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FeatureParam> {
} _FeatureParam_default_instance_;
class ExtractorParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ExtractorParam> {
} _ExtractorParam_default_instance_;
class ROIPoolingParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ROIPoolingParam> {
} _ROIPoolingParam_default_instance_;
class ReorgParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReorgParam> {
} _ReorgParam_default_instance_;

namespace protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureParam, feat_stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureParam, extractor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureParam, remap_model_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtractorParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtractorParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtractorParam, feat_blob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtractorParam, feat_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtractorParam, roi_pooling_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtractorParam, reorg_param_),
  0,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ROIPoolingParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ROIPoolingParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ROIPoolingParam, pooled_h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ROIPoolingParam, pooled_w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ROIPoolingParam, use_floor_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReorgParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReorgParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReorgParam, ref_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReorgParam, ref_width_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(FeatureParam)},
  { 11, 20, sizeof(ExtractorParam)},
  { 24, 32, sizeof(ROIPoolingParam)},
  { 35, 42, sizeof(ReorgParam)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_FeatureParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExtractorParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ROIPoolingParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReorgParam_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/perception/obstacle/camera/detector/common/proto/tracking_feature.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _FeatureParam_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ExtractorParam_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ROIPoolingParam_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ReorgParam_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _FeatureParam_default_instance_.DefaultConstruct();
  _ExtractorParam_default_instance_.DefaultConstruct();
  _ROIPoolingParam_default_instance_.DefaultConstruct();
  _ReorgParam_default_instance_.DefaultConstruct();
  _ExtractorParam_default_instance_.get_mutable()->roi_pooling_param_ = const_cast< ::jmc_auto::perception::ROIPoolingParam*>(
      ::jmc_auto::perception::ROIPoolingParam::internal_default_instance());
  _ExtractorParam_default_instance_.get_mutable()->reorg_param_ = const_cast< ::jmc_auto::perception::ReorgParam*>(
      ::jmc_auto::perception::ReorgParam::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\nOmodules/perception/obstacle/camera/det"
      "ector/common/proto/tracking_feature.prot"
      "o\022\023jmc_auto.perception\"t\n\014FeatureParam\022\027"
      "\n\013feat_stride\030\001 \001(\005:\00232\0226\n\textractor\030\002 \003"
      "(\0132#.jmc_auto.perception.ExtractorParam\022"
      "\023\n\013remap_model\030\003 \001(\t\"\217\002\n\016ExtractorParam\022"
      "\021\n\tfeat_blob\030\001 \001(\t\022I\n\tfeat_type\030\002 \001(\0162/."
      "jmc_auto.perception.ExtractorParam.Featu"
      "reType:\005Reorg\022\?\n\021roi_pooling_param\030\003 \001(\013"
      "2$.jmc_auto.perception.ROIPoolingParam\0224"
      "\n\013reorg_param\030\004 \001(\0132\037.jmc_auto.perceptio"
      "n.ReorgParam\"(\n\013FeatureType\022\t\n\005Reorg\020\000\022\016"
      "\n\nROIPooling\020\001\"U\n\017ROIPoolingParam\022\023\n\010poo"
      "led_h\030\001 \001(\005:\0013\022\023\n\010pooled_w\030\002 \001(\005:\0013\022\030\n\tu"
      "se_floor\030\003 \001(\010:\005false\"9\n\nReorgParam\022\025\n\nr"
      "ef_height\030\001 \001(\005:\0010\022\024\n\tref_width\030\002 \001(\005:\0010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 640);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/perception/obstacle/camera/detector/common/proto/tracking_feature.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto

const ::google::protobuf::EnumDescriptor* ExtractorParam_FeatureType_descriptor() {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::file_level_enum_descriptors[0];
}
bool ExtractorParam_FeatureType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExtractorParam_FeatureType ExtractorParam::Reorg;
const ExtractorParam_FeatureType ExtractorParam::ROIPooling;
const ExtractorParam_FeatureType ExtractorParam::FeatureType_MIN;
const ExtractorParam_FeatureType ExtractorParam::FeatureType_MAX;
const int ExtractorParam::FeatureType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeatureParam::kFeatStrideFieldNumber;
const int FeatureParam::kExtractorFieldNumber;
const int FeatureParam::kRemapModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeatureParam::FeatureParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.perception.FeatureParam)
}
FeatureParam::FeatureParam(const FeatureParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      extractor_(from.extractor_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remap_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_remap_model()) {
    remap_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remap_model_);
  }
  feat_stride_ = from.feat_stride_;
  // @@protoc_insertion_point(copy_constructor:jmc_auto.perception.FeatureParam)
}

void FeatureParam::SharedCtor() {
  _cached_size_ = 0;
  remap_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feat_stride_ = 32;
}

FeatureParam::~FeatureParam() {
  // @@protoc_insertion_point(destructor:jmc_auto.perception.FeatureParam)
  SharedDtor();
}

void FeatureParam::SharedDtor() {
  remap_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FeatureParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FeatureParam::descriptor() {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeatureParam& FeatureParam::default_instance() {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::InitDefaults();
  return *internal_default_instance();
}

FeatureParam* FeatureParam::New(::google::protobuf::Arena* arena) const {
  FeatureParam* n = new FeatureParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FeatureParam::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.perception.FeatureParam)
  extractor_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_remap_model()) {
      GOOGLE_DCHECK(!remap_model_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*remap_model_.UnsafeRawStringPointer())->clear();
    }
    feat_stride_ = 32;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FeatureParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.perception.FeatureParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 feat_stride = 1 [default = 32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_feat_stride();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feat_stride_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .jmc_auto.perception.ExtractorParam extractor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_extractor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string remap_model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remap_model()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->remap_model().data(), this->remap_model().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jmc_auto.perception.FeatureParam.remap_model");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.perception.FeatureParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.perception.FeatureParam)
  return false;
#undef DO_
}

void FeatureParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.perception.FeatureParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 feat_stride = 1 [default = 32];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->feat_stride(), output);
  }

  // repeated .jmc_auto.perception.ExtractorParam extractor = 2;
  for (unsigned int i = 0, n = this->extractor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->extractor(i), output);
  }

  // optional string remap_model = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remap_model().data(), this->remap_model().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.FeatureParam.remap_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->remap_model(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.perception.FeatureParam)
}

::google::protobuf::uint8* FeatureParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.perception.FeatureParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 feat_stride = 1 [default = 32];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->feat_stride(), target);
  }

  // repeated .jmc_auto.perception.ExtractorParam extractor = 2;
  for (unsigned int i = 0, n = this->extractor_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->extractor(i), deterministic, target);
  }

  // optional string remap_model = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remap_model().data(), this->remap_model().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.FeatureParam.remap_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->remap_model(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.perception.FeatureParam)
  return target;
}

size_t FeatureParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.perception.FeatureParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .jmc_auto.perception.ExtractorParam extractor = 2;
  {
    unsigned int count = this->extractor_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extractor(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string remap_model = 3;
    if (has_remap_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remap_model());
    }

    // optional int32 feat_stride = 1 [default = 32];
    if (has_feat_stride()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->feat_stride());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FeatureParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.perception.FeatureParam)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeatureParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.perception.FeatureParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.perception.FeatureParam)
    MergeFrom(*source);
  }
}

void FeatureParam::MergeFrom(const FeatureParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.perception.FeatureParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extractor_.MergeFrom(from.extractor_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_remap_model();
      remap_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remap_model_);
    }
    if (cached_has_bits & 0x00000002u) {
      feat_stride_ = from.feat_stride_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FeatureParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.perception.FeatureParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureParam::CopyFrom(const FeatureParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.perception.FeatureParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureParam::IsInitialized() const {
  return true;
}

void FeatureParam::Swap(FeatureParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeatureParam::InternalSwap(FeatureParam* other) {
  extractor_.InternalSwap(&other->extractor_);
  remap_model_.Swap(&other->remap_model_);
  std::swap(feat_stride_, other->feat_stride_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FeatureParam::GetMetadata() const {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FeatureParam

// optional int32 feat_stride = 1 [default = 32];
bool FeatureParam::has_feat_stride() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FeatureParam::set_has_feat_stride() {
  _has_bits_[0] |= 0x00000002u;
}
void FeatureParam::clear_has_feat_stride() {
  _has_bits_[0] &= ~0x00000002u;
}
void FeatureParam::clear_feat_stride() {
  feat_stride_ = 32;
  clear_has_feat_stride();
}
::google::protobuf::int32 FeatureParam::feat_stride() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.FeatureParam.feat_stride)
  return feat_stride_;
}
void FeatureParam::set_feat_stride(::google::protobuf::int32 value) {
  set_has_feat_stride();
  feat_stride_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.perception.FeatureParam.feat_stride)
}

// repeated .jmc_auto.perception.ExtractorParam extractor = 2;
int FeatureParam::extractor_size() const {
  return extractor_.size();
}
void FeatureParam::clear_extractor() {
  extractor_.Clear();
}
const ::jmc_auto::perception::ExtractorParam& FeatureParam::extractor(int index) const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.FeatureParam.extractor)
  return extractor_.Get(index);
}
::jmc_auto::perception::ExtractorParam* FeatureParam::mutable_extractor(int index) {
  // @@protoc_insertion_point(field_mutable:jmc_auto.perception.FeatureParam.extractor)
  return extractor_.Mutable(index);
}
::jmc_auto::perception::ExtractorParam* FeatureParam::add_extractor() {
  // @@protoc_insertion_point(field_add:jmc_auto.perception.FeatureParam.extractor)
  return extractor_.Add();
}
::google::protobuf::RepeatedPtrField< ::jmc_auto::perception::ExtractorParam >*
FeatureParam::mutable_extractor() {
  // @@protoc_insertion_point(field_mutable_list:jmc_auto.perception.FeatureParam.extractor)
  return &extractor_;
}
const ::google::protobuf::RepeatedPtrField< ::jmc_auto::perception::ExtractorParam >&
FeatureParam::extractor() const {
  // @@protoc_insertion_point(field_list:jmc_auto.perception.FeatureParam.extractor)
  return extractor_;
}

// optional string remap_model = 3;
bool FeatureParam::has_remap_model() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FeatureParam::set_has_remap_model() {
  _has_bits_[0] |= 0x00000001u;
}
void FeatureParam::clear_has_remap_model() {
  _has_bits_[0] &= ~0x00000001u;
}
void FeatureParam::clear_remap_model() {
  remap_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_remap_model();
}
const ::std::string& FeatureParam::remap_model() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.FeatureParam.remap_model)
  return remap_model_.GetNoArena();
}
void FeatureParam::set_remap_model(const ::std::string& value) {
  set_has_remap_model();
  remap_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jmc_auto.perception.FeatureParam.remap_model)
}
#if LANG_CXX11
void FeatureParam::set_remap_model(::std::string&& value) {
  set_has_remap_model();
  remap_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jmc_auto.perception.FeatureParam.remap_model)
}
#endif
void FeatureParam::set_remap_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_remap_model();
  remap_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jmc_auto.perception.FeatureParam.remap_model)
}
void FeatureParam::set_remap_model(const char* value, size_t size) {
  set_has_remap_model();
  remap_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jmc_auto.perception.FeatureParam.remap_model)
}
::std::string* FeatureParam::mutable_remap_model() {
  set_has_remap_model();
  // @@protoc_insertion_point(field_mutable:jmc_auto.perception.FeatureParam.remap_model)
  return remap_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FeatureParam::release_remap_model() {
  // @@protoc_insertion_point(field_release:jmc_auto.perception.FeatureParam.remap_model)
  clear_has_remap_model();
  return remap_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FeatureParam::set_allocated_remap_model(::std::string* remap_model) {
  if (remap_model != NULL) {
    set_has_remap_model();
  } else {
    clear_has_remap_model();
  }
  remap_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remap_model);
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.perception.FeatureParam.remap_model)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtractorParam::kFeatBlobFieldNumber;
const int ExtractorParam::kFeatTypeFieldNumber;
const int ExtractorParam::kRoiPoolingParamFieldNumber;
const int ExtractorParam::kReorgParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtractorParam::ExtractorParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.perception.ExtractorParam)
}
ExtractorParam::ExtractorParam(const ExtractorParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  feat_blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_feat_blob()) {
    feat_blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feat_blob_);
  }
  if (from.has_roi_pooling_param()) {
    roi_pooling_param_ = new ::jmc_auto::perception::ROIPoolingParam(*from.roi_pooling_param_);
  } else {
    roi_pooling_param_ = NULL;
  }
  if (from.has_reorg_param()) {
    reorg_param_ = new ::jmc_auto::perception::ReorgParam(*from.reorg_param_);
  } else {
    reorg_param_ = NULL;
  }
  feat_type_ = from.feat_type_;
  // @@protoc_insertion_point(copy_constructor:jmc_auto.perception.ExtractorParam)
}

void ExtractorParam::SharedCtor() {
  _cached_size_ = 0;
  feat_blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roi_pooling_param_, 0, reinterpret_cast<char*>(&feat_type_) -
    reinterpret_cast<char*>(&roi_pooling_param_) + sizeof(feat_type_));
}

ExtractorParam::~ExtractorParam() {
  // @@protoc_insertion_point(destructor:jmc_auto.perception.ExtractorParam)
  SharedDtor();
}

void ExtractorParam::SharedDtor() {
  feat_blob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete roi_pooling_param_;
  }
  if (this != internal_default_instance()) {
    delete reorg_param_;
  }
}

void ExtractorParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtractorParam::descriptor() {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtractorParam& ExtractorParam::default_instance() {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExtractorParam* ExtractorParam::New(::google::protobuf::Arena* arena) const {
  ExtractorParam* n = new ExtractorParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExtractorParam::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.perception.ExtractorParam)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_feat_blob()) {
      GOOGLE_DCHECK(!feat_blob_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*feat_blob_.UnsafeRawStringPointer())->clear();
    }
    if (has_roi_pooling_param()) {
      GOOGLE_DCHECK(roi_pooling_param_ != NULL);
      roi_pooling_param_->::jmc_auto::perception::ROIPoolingParam::Clear();
    }
    if (has_reorg_param()) {
      GOOGLE_DCHECK(reorg_param_ != NULL);
      reorg_param_->::jmc_auto::perception::ReorgParam::Clear();
    }
  }
  feat_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExtractorParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.perception.ExtractorParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string feat_blob = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_feat_blob()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->feat_blob().data(), this->feat_blob().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jmc_auto.perception.ExtractorParam.feat_blob");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.perception.ExtractorParam.FeatureType feat_type = 2 [default = Reorg];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::perception::ExtractorParam_FeatureType_IsValid(value)) {
            set_feat_type(static_cast< ::jmc_auto::perception::ExtractorParam_FeatureType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.perception.ROIPoolingParam roi_pooling_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roi_pooling_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.perception.ReorgParam reorg_param = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reorg_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.perception.ExtractorParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.perception.ExtractorParam)
  return false;
#undef DO_
}

void ExtractorParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.perception.ExtractorParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string feat_blob = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->feat_blob().data(), this->feat_blob().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.ExtractorParam.feat_blob");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->feat_blob(), output);
  }

  // optional .jmc_auto.perception.ExtractorParam.FeatureType feat_type = 2 [default = Reorg];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->feat_type(), output);
  }

  // optional .jmc_auto.perception.ROIPoolingParam roi_pooling_param = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->roi_pooling_param_, output);
  }

  // optional .jmc_auto.perception.ReorgParam reorg_param = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->reorg_param_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.perception.ExtractorParam)
}

::google::protobuf::uint8* ExtractorParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.perception.ExtractorParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string feat_blob = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->feat_blob().data(), this->feat_blob().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.ExtractorParam.feat_blob");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->feat_blob(), target);
  }

  // optional .jmc_auto.perception.ExtractorParam.FeatureType feat_type = 2 [default = Reorg];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->feat_type(), target);
  }

  // optional .jmc_auto.perception.ROIPoolingParam roi_pooling_param = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->roi_pooling_param_, deterministic, target);
  }

  // optional .jmc_auto.perception.ReorgParam reorg_param = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->reorg_param_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.perception.ExtractorParam)
  return target;
}

size_t ExtractorParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.perception.ExtractorParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string feat_blob = 1;
    if (has_feat_blob()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->feat_blob());
    }

    // optional .jmc_auto.perception.ROIPoolingParam roi_pooling_param = 3;
    if (has_roi_pooling_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->roi_pooling_param_);
    }

    // optional .jmc_auto.perception.ReorgParam reorg_param = 4;
    if (has_reorg_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->reorg_param_);
    }

    // optional .jmc_auto.perception.ExtractorParam.FeatureType feat_type = 2 [default = Reorg];
    if (has_feat_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->feat_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtractorParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.perception.ExtractorParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtractorParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtractorParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.perception.ExtractorParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.perception.ExtractorParam)
    MergeFrom(*source);
  }
}

void ExtractorParam::MergeFrom(const ExtractorParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.perception.ExtractorParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_feat_blob();
      feat_blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feat_blob_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_roi_pooling_param()->::jmc_auto::perception::ROIPoolingParam::MergeFrom(from.roi_pooling_param());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_reorg_param()->::jmc_auto::perception::ReorgParam::MergeFrom(from.reorg_param());
    }
    if (cached_has_bits & 0x00000008u) {
      feat_type_ = from.feat_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExtractorParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.perception.ExtractorParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtractorParam::CopyFrom(const ExtractorParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.perception.ExtractorParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtractorParam::IsInitialized() const {
  return true;
}

void ExtractorParam::Swap(ExtractorParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtractorParam::InternalSwap(ExtractorParam* other) {
  feat_blob_.Swap(&other->feat_blob_);
  std::swap(roi_pooling_param_, other->roi_pooling_param_);
  std::swap(reorg_param_, other->reorg_param_);
  std::swap(feat_type_, other->feat_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExtractorParam::GetMetadata() const {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExtractorParam

// optional string feat_blob = 1;
bool ExtractorParam::has_feat_blob() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ExtractorParam::set_has_feat_blob() {
  _has_bits_[0] |= 0x00000001u;
}
void ExtractorParam::clear_has_feat_blob() {
  _has_bits_[0] &= ~0x00000001u;
}
void ExtractorParam::clear_feat_blob() {
  feat_blob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_feat_blob();
}
const ::std::string& ExtractorParam::feat_blob() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.ExtractorParam.feat_blob)
  return feat_blob_.GetNoArena();
}
void ExtractorParam::set_feat_blob(const ::std::string& value) {
  set_has_feat_blob();
  feat_blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jmc_auto.perception.ExtractorParam.feat_blob)
}
#if LANG_CXX11
void ExtractorParam::set_feat_blob(::std::string&& value) {
  set_has_feat_blob();
  feat_blob_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jmc_auto.perception.ExtractorParam.feat_blob)
}
#endif
void ExtractorParam::set_feat_blob(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_feat_blob();
  feat_blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jmc_auto.perception.ExtractorParam.feat_blob)
}
void ExtractorParam::set_feat_blob(const char* value, size_t size) {
  set_has_feat_blob();
  feat_blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jmc_auto.perception.ExtractorParam.feat_blob)
}
::std::string* ExtractorParam::mutable_feat_blob() {
  set_has_feat_blob();
  // @@protoc_insertion_point(field_mutable:jmc_auto.perception.ExtractorParam.feat_blob)
  return feat_blob_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExtractorParam::release_feat_blob() {
  // @@protoc_insertion_point(field_release:jmc_auto.perception.ExtractorParam.feat_blob)
  clear_has_feat_blob();
  return feat_blob_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExtractorParam::set_allocated_feat_blob(::std::string* feat_blob) {
  if (feat_blob != NULL) {
    set_has_feat_blob();
  } else {
    clear_has_feat_blob();
  }
  feat_blob_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feat_blob);
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.perception.ExtractorParam.feat_blob)
}

// optional .jmc_auto.perception.ExtractorParam.FeatureType feat_type = 2 [default = Reorg];
bool ExtractorParam::has_feat_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ExtractorParam::set_has_feat_type() {
  _has_bits_[0] |= 0x00000008u;
}
void ExtractorParam::clear_has_feat_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void ExtractorParam::clear_feat_type() {
  feat_type_ = 0;
  clear_has_feat_type();
}
::jmc_auto::perception::ExtractorParam_FeatureType ExtractorParam::feat_type() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.ExtractorParam.feat_type)
  return static_cast< ::jmc_auto::perception::ExtractorParam_FeatureType >(feat_type_);
}
void ExtractorParam::set_feat_type(::jmc_auto::perception::ExtractorParam_FeatureType value) {
  assert(::jmc_auto::perception::ExtractorParam_FeatureType_IsValid(value));
  set_has_feat_type();
  feat_type_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.perception.ExtractorParam.feat_type)
}

// optional .jmc_auto.perception.ROIPoolingParam roi_pooling_param = 3;
bool ExtractorParam::has_roi_pooling_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ExtractorParam::set_has_roi_pooling_param() {
  _has_bits_[0] |= 0x00000002u;
}
void ExtractorParam::clear_has_roi_pooling_param() {
  _has_bits_[0] &= ~0x00000002u;
}
void ExtractorParam::clear_roi_pooling_param() {
  if (roi_pooling_param_ != NULL) roi_pooling_param_->::jmc_auto::perception::ROIPoolingParam::Clear();
  clear_has_roi_pooling_param();
}
const ::jmc_auto::perception::ROIPoolingParam& ExtractorParam::roi_pooling_param() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.ExtractorParam.roi_pooling_param)
  return roi_pooling_param_ != NULL ? *roi_pooling_param_
                         : *::jmc_auto::perception::ROIPoolingParam::internal_default_instance();
}
::jmc_auto::perception::ROIPoolingParam* ExtractorParam::mutable_roi_pooling_param() {
  set_has_roi_pooling_param();
  if (roi_pooling_param_ == NULL) {
    roi_pooling_param_ = new ::jmc_auto::perception::ROIPoolingParam;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.perception.ExtractorParam.roi_pooling_param)
  return roi_pooling_param_;
}
::jmc_auto::perception::ROIPoolingParam* ExtractorParam::release_roi_pooling_param() {
  // @@protoc_insertion_point(field_release:jmc_auto.perception.ExtractorParam.roi_pooling_param)
  clear_has_roi_pooling_param();
  ::jmc_auto::perception::ROIPoolingParam* temp = roi_pooling_param_;
  roi_pooling_param_ = NULL;
  return temp;
}
void ExtractorParam::set_allocated_roi_pooling_param(::jmc_auto::perception::ROIPoolingParam* roi_pooling_param) {
  delete roi_pooling_param_;
  roi_pooling_param_ = roi_pooling_param;
  if (roi_pooling_param) {
    set_has_roi_pooling_param();
  } else {
    clear_has_roi_pooling_param();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.perception.ExtractorParam.roi_pooling_param)
}

// optional .jmc_auto.perception.ReorgParam reorg_param = 4;
bool ExtractorParam::has_reorg_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ExtractorParam::set_has_reorg_param() {
  _has_bits_[0] |= 0x00000004u;
}
void ExtractorParam::clear_has_reorg_param() {
  _has_bits_[0] &= ~0x00000004u;
}
void ExtractorParam::clear_reorg_param() {
  if (reorg_param_ != NULL) reorg_param_->::jmc_auto::perception::ReorgParam::Clear();
  clear_has_reorg_param();
}
const ::jmc_auto::perception::ReorgParam& ExtractorParam::reorg_param() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.ExtractorParam.reorg_param)
  return reorg_param_ != NULL ? *reorg_param_
                         : *::jmc_auto::perception::ReorgParam::internal_default_instance();
}
::jmc_auto::perception::ReorgParam* ExtractorParam::mutable_reorg_param() {
  set_has_reorg_param();
  if (reorg_param_ == NULL) {
    reorg_param_ = new ::jmc_auto::perception::ReorgParam;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.perception.ExtractorParam.reorg_param)
  return reorg_param_;
}
::jmc_auto::perception::ReorgParam* ExtractorParam::release_reorg_param() {
  // @@protoc_insertion_point(field_release:jmc_auto.perception.ExtractorParam.reorg_param)
  clear_has_reorg_param();
  ::jmc_auto::perception::ReorgParam* temp = reorg_param_;
  reorg_param_ = NULL;
  return temp;
}
void ExtractorParam::set_allocated_reorg_param(::jmc_auto::perception::ReorgParam* reorg_param) {
  delete reorg_param_;
  reorg_param_ = reorg_param;
  if (reorg_param) {
    set_has_reorg_param();
  } else {
    clear_has_reorg_param();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.perception.ExtractorParam.reorg_param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ROIPoolingParam::kPooledHFieldNumber;
const int ROIPoolingParam::kPooledWFieldNumber;
const int ROIPoolingParam::kUseFloorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ROIPoolingParam::ROIPoolingParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.perception.ROIPoolingParam)
}
ROIPoolingParam::ROIPoolingParam(const ROIPoolingParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&use_floor_, &from.use_floor_,
    reinterpret_cast<char*>(&pooled_w_) -
    reinterpret_cast<char*>(&use_floor_) + sizeof(pooled_w_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.perception.ROIPoolingParam)
}

void ROIPoolingParam::SharedCtor() {
  _cached_size_ = 0;
  use_floor_ = false;
  pooled_h_ = 3;
  pooled_w_ = 3;
}

ROIPoolingParam::~ROIPoolingParam() {
  // @@protoc_insertion_point(destructor:jmc_auto.perception.ROIPoolingParam)
  SharedDtor();
}

void ROIPoolingParam::SharedDtor() {
}

void ROIPoolingParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ROIPoolingParam::descriptor() {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ROIPoolingParam& ROIPoolingParam::default_instance() {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::InitDefaults();
  return *internal_default_instance();
}

ROIPoolingParam* ROIPoolingParam::New(::google::protobuf::Arena* arena) const {
  ROIPoolingParam* n = new ROIPoolingParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ROIPoolingParam::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.perception.ROIPoolingParam)
  if (_has_bits_[0 / 32] & 7u) {
    use_floor_ = false;
    pooled_h_ = 3;
    pooled_w_ = 3;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ROIPoolingParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.perception.ROIPoolingParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pooled_h = 1 [default = 3];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_pooled_h();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pooled_h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pooled_w = 2 [default = 3];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_pooled_w();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pooled_w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_floor = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_use_floor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_floor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.perception.ROIPoolingParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.perception.ROIPoolingParam)
  return false;
#undef DO_
}

void ROIPoolingParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.perception.ROIPoolingParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 pooled_h = 1 [default = 3];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pooled_h(), output);
  }

  // optional int32 pooled_w = 2 [default = 3];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pooled_w(), output);
  }

  // optional bool use_floor = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->use_floor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.perception.ROIPoolingParam)
}

::google::protobuf::uint8* ROIPoolingParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.perception.ROIPoolingParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 pooled_h = 1 [default = 3];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pooled_h(), target);
  }

  // optional int32 pooled_w = 2 [default = 3];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pooled_w(), target);
  }

  // optional bool use_floor = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->use_floor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.perception.ROIPoolingParam)
  return target;
}

size_t ROIPoolingParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.perception.ROIPoolingParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bool use_floor = 3 [default = false];
    if (has_use_floor()) {
      total_size += 1 + 1;
    }

    // optional int32 pooled_h = 1 [default = 3];
    if (has_pooled_h()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pooled_h());
    }

    // optional int32 pooled_w = 2 [default = 3];
    if (has_pooled_w()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pooled_w());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ROIPoolingParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.perception.ROIPoolingParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIPoolingParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ROIPoolingParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.perception.ROIPoolingParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.perception.ROIPoolingParam)
    MergeFrom(*source);
  }
}

void ROIPoolingParam::MergeFrom(const ROIPoolingParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.perception.ROIPoolingParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      use_floor_ = from.use_floor_;
    }
    if (cached_has_bits & 0x00000002u) {
      pooled_h_ = from.pooled_h_;
    }
    if (cached_has_bits & 0x00000004u) {
      pooled_w_ = from.pooled_w_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ROIPoolingParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.perception.ROIPoolingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIPoolingParam::CopyFrom(const ROIPoolingParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.perception.ROIPoolingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIPoolingParam::IsInitialized() const {
  return true;
}

void ROIPoolingParam::Swap(ROIPoolingParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ROIPoolingParam::InternalSwap(ROIPoolingParam* other) {
  std::swap(use_floor_, other->use_floor_);
  std::swap(pooled_h_, other->pooled_h_);
  std::swap(pooled_w_, other->pooled_w_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ROIPoolingParam::GetMetadata() const {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ROIPoolingParam

// optional int32 pooled_h = 1 [default = 3];
bool ROIPoolingParam::has_pooled_h() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ROIPoolingParam::set_has_pooled_h() {
  _has_bits_[0] |= 0x00000002u;
}
void ROIPoolingParam::clear_has_pooled_h() {
  _has_bits_[0] &= ~0x00000002u;
}
void ROIPoolingParam::clear_pooled_h() {
  pooled_h_ = 3;
  clear_has_pooled_h();
}
::google::protobuf::int32 ROIPoolingParam::pooled_h() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.ROIPoolingParam.pooled_h)
  return pooled_h_;
}
void ROIPoolingParam::set_pooled_h(::google::protobuf::int32 value) {
  set_has_pooled_h();
  pooled_h_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.perception.ROIPoolingParam.pooled_h)
}

// optional int32 pooled_w = 2 [default = 3];
bool ROIPoolingParam::has_pooled_w() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ROIPoolingParam::set_has_pooled_w() {
  _has_bits_[0] |= 0x00000004u;
}
void ROIPoolingParam::clear_has_pooled_w() {
  _has_bits_[0] &= ~0x00000004u;
}
void ROIPoolingParam::clear_pooled_w() {
  pooled_w_ = 3;
  clear_has_pooled_w();
}
::google::protobuf::int32 ROIPoolingParam::pooled_w() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.ROIPoolingParam.pooled_w)
  return pooled_w_;
}
void ROIPoolingParam::set_pooled_w(::google::protobuf::int32 value) {
  set_has_pooled_w();
  pooled_w_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.perception.ROIPoolingParam.pooled_w)
}

// optional bool use_floor = 3 [default = false];
bool ROIPoolingParam::has_use_floor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ROIPoolingParam::set_has_use_floor() {
  _has_bits_[0] |= 0x00000001u;
}
void ROIPoolingParam::clear_has_use_floor() {
  _has_bits_[0] &= ~0x00000001u;
}
void ROIPoolingParam::clear_use_floor() {
  use_floor_ = false;
  clear_has_use_floor();
}
bool ROIPoolingParam::use_floor() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.ROIPoolingParam.use_floor)
  return use_floor_;
}
void ROIPoolingParam::set_use_floor(bool value) {
  set_has_use_floor();
  use_floor_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.perception.ROIPoolingParam.use_floor)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReorgParam::kRefHeightFieldNumber;
const int ReorgParam::kRefWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReorgParam::ReorgParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.perception.ReorgParam)
}
ReorgParam::ReorgParam(const ReorgParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ref_height_, &from.ref_height_,
    reinterpret_cast<char*>(&ref_width_) -
    reinterpret_cast<char*>(&ref_height_) + sizeof(ref_width_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.perception.ReorgParam)
}

void ReorgParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ref_height_, 0, reinterpret_cast<char*>(&ref_width_) -
    reinterpret_cast<char*>(&ref_height_) + sizeof(ref_width_));
}

ReorgParam::~ReorgParam() {
  // @@protoc_insertion_point(destructor:jmc_auto.perception.ReorgParam)
  SharedDtor();
}

void ReorgParam::SharedDtor() {
}

void ReorgParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReorgParam::descriptor() {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReorgParam& ReorgParam::default_instance() {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReorgParam* ReorgParam::New(::google::protobuf::Arena* arena) const {
  ReorgParam* n = new ReorgParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReorgParam::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.perception.ReorgParam)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&ref_height_, 0, reinterpret_cast<char*>(&ref_width_) -
      reinterpret_cast<char*>(&ref_height_) + sizeof(ref_width_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReorgParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.perception.ReorgParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ref_height = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_ref_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ref_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ref_width = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_ref_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ref_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.perception.ReorgParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.perception.ReorgParam)
  return false;
#undef DO_
}

void ReorgParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.perception.ReorgParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ref_height = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ref_height(), output);
  }

  // optional int32 ref_width = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ref_width(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.perception.ReorgParam)
}

::google::protobuf::uint8* ReorgParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.perception.ReorgParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ref_height = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ref_height(), target);
  }

  // optional int32 ref_width = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ref_width(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.perception.ReorgParam)
  return target;
}

size_t ReorgParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.perception.ReorgParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 ref_height = 1 [default = 0];
    if (has_ref_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ref_height());
    }

    // optional int32 ref_width = 2 [default = 0];
    if (has_ref_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ref_width());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReorgParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.perception.ReorgParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ReorgParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReorgParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.perception.ReorgParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.perception.ReorgParam)
    MergeFrom(*source);
  }
}

void ReorgParam::MergeFrom(const ReorgParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.perception.ReorgParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ref_height_ = from.ref_height_;
    }
    if (cached_has_bits & 0x00000002u) {
      ref_width_ = from.ref_width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReorgParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.perception.ReorgParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReorgParam::CopyFrom(const ReorgParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.perception.ReorgParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReorgParam::IsInitialized() const {
  return true;
}

void ReorgParam::Swap(ReorgParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReorgParam::InternalSwap(ReorgParam* other) {
  std::swap(ref_height_, other->ref_height_);
  std::swap(ref_width_, other->ref_width_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReorgParam::GetMetadata() const {
  protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fcommon_2fproto_2ftracking_5ffeature_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReorgParam

// optional int32 ref_height = 1 [default = 0];
bool ReorgParam::has_ref_height() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReorgParam::set_has_ref_height() {
  _has_bits_[0] |= 0x00000001u;
}
void ReorgParam::clear_has_ref_height() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReorgParam::clear_ref_height() {
  ref_height_ = 0;
  clear_has_ref_height();
}
::google::protobuf::int32 ReorgParam::ref_height() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.ReorgParam.ref_height)
  return ref_height_;
}
void ReorgParam::set_ref_height(::google::protobuf::int32 value) {
  set_has_ref_height();
  ref_height_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.perception.ReorgParam.ref_height)
}

// optional int32 ref_width = 2 [default = 0];
bool ReorgParam::has_ref_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReorgParam::set_has_ref_width() {
  _has_bits_[0] |= 0x00000002u;
}
void ReorgParam::clear_has_ref_width() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReorgParam::clear_ref_width() {
  ref_width_ = 0;
  clear_has_ref_width();
}
::google::protobuf::int32 ReorgParam::ref_width() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.ReorgParam.ref_width)
  return ref_width_;
}
void ReorgParam::set_ref_width(::google::protobuf::int32 value) {
  set_has_ref_width();
  ref_width_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.perception.ReorgParam.ref_width)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace jmc_auto

// @@protoc_insertion_point(global_scope)
