// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/traffic_light/recognizer_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/perception/proto/traffic_light/recognizer_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace jmc_auto {
namespace perception {
namespace traffic_light {
namespace recognizer_config {
class RecognizerConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RecognizerConfig> {
} _RecognizerConfig_default_instance_;
class ModelConfigsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModelConfigs> {
} _ModelConfigs_default_instance_;

namespace protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizerConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizerConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizerConfig, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizerConfig, classify_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizerConfig, classify_net_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizerConfig, classify_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizerConfig, classify_resize_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizerConfig, classify_resize_height_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, recognizer_config_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 12, sizeof(RecognizerConfig)},
  { 19, 25, sizeof(ModelConfigs)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RecognizerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModelConfigs_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/perception/proto/traffic_light/recognizer_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _RecognizerConfig_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ModelConfigs_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RecognizerConfig_default_instance_.DefaultConstruct();
  _ModelConfigs_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n>modules/perception/proto/traffic_light"
      "/recognizer_config.proto\0223jmc_auto.perce"
      "ption.traffic_light.recognizer_config\"\272\001"
      "\n\020RecognizerConfig\022\014\n\004name\030\001 \001(\t\022\017\n\007vers"
      "ion\030\002 \001(\t\022\026\n\016classify_model\030\003 \001(\t\022\024\n\014cla"
      "ssify_net\030\004 \001(\t\022\032\n\022classify_threshold\030\005 "
      "\001(\002\022\035\n\025classify_resize_width\030\006 \001(\005\022\036\n\026cl"
      "assify_resize_height\030\007 \001(\005\"p\n\014ModelConfi"
      "gs\022`\n\021recognizer_config\030\001 \003(\0132E.jmc_auto"
      ".perception.traffic_light.recognizer_con"
      "fig.RecognizerConfig"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 420);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/perception/proto/traffic_light/recognizer_config.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecognizerConfig::kNameFieldNumber;
const int RecognizerConfig::kVersionFieldNumber;
const int RecognizerConfig::kClassifyModelFieldNumber;
const int RecognizerConfig::kClassifyNetFieldNumber;
const int RecognizerConfig::kClassifyThresholdFieldNumber;
const int RecognizerConfig::kClassifyResizeWidthFieldNumber;
const int RecognizerConfig::kClassifyResizeHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecognizerConfig::RecognizerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
}
RecognizerConfig::RecognizerConfig(const RecognizerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  classify_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_classify_model()) {
    classify_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classify_model_);
  }
  classify_net_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_classify_net()) {
    classify_net_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classify_net_);
  }
  ::memcpy(&classify_threshold_, &from.classify_threshold_,
    reinterpret_cast<char*>(&classify_resize_height_) -
    reinterpret_cast<char*>(&classify_threshold_) + sizeof(classify_resize_height_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
}

void RecognizerConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classify_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classify_net_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&classify_threshold_, 0, reinterpret_cast<char*>(&classify_resize_height_) -
    reinterpret_cast<char*>(&classify_threshold_) + sizeof(classify_resize_height_));
}

RecognizerConfig::~RecognizerConfig() {
  // @@protoc_insertion_point(destructor:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  SharedDtor();
}

void RecognizerConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classify_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classify_net_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecognizerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecognizerConfig::descriptor() {
  protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecognizerConfig& RecognizerConfig::default_instance() {
  protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

RecognizerConfig* RecognizerConfig::New(::google::protobuf::Arena* arena) const {
  RecognizerConfig* n = new RecognizerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecognizerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_version()) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (has_classify_model()) {
      GOOGLE_DCHECK(!classify_model_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*classify_model_.UnsafeRawStringPointer())->clear();
    }
    if (has_classify_net()) {
      GOOGLE_DCHECK(!classify_net_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*classify_net_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 112u) {
    ::memset(&classify_threshold_, 0, reinterpret_cast<char*>(&classify_resize_height_) -
      reinterpret_cast<char*>(&classify_threshold_) + sizeof(classify_resize_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecognizerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string classify_model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_classify_model()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->classify_model().data(), this->classify_model().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string classify_net = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_classify_net()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->classify_net().data(), this->classify_net().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float classify_threshold = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u)) {
          set_has_classify_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &classify_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 classify_resize_width = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_classify_resize_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &classify_resize_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 classify_resize_height = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_classify_resize_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &classify_resize_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  return false;
#undef DO_
}

void RecognizerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // optional string classify_model = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->classify_model().data(), this->classify_model().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->classify_model(), output);
  }

  // optional string classify_net = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->classify_net().data(), this->classify_net().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->classify_net(), output);
  }

  // optional float classify_threshold = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->classify_threshold(), output);
  }

  // optional int32 classify_resize_width = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->classify_resize_width(), output);
  }

  // optional int32 classify_resize_height = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->classify_resize_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
}

::google::protobuf::uint8* RecognizerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // optional string classify_model = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->classify_model().data(), this->classify_model().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->classify_model(), target);
  }

  // optional string classify_net = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->classify_net().data(), this->classify_net().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->classify_net(), target);
  }

  // optional float classify_threshold = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->classify_threshold(), target);
  }

  // optional int32 classify_resize_width = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->classify_resize_width(), target);
  }

  // optional int32 classify_resize_height = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->classify_resize_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  return target;
}

size_t RecognizerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string classify_model = 3;
    if (has_classify_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->classify_model());
    }

    // optional string classify_net = 4;
    if (has_classify_net()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->classify_net());
    }

    // optional float classify_threshold = 5;
    if (has_classify_threshold()) {
      total_size += 1 + 4;
    }

    // optional int32 classify_resize_width = 6;
    if (has_classify_resize_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->classify_resize_width());
    }

    // optional int32 classify_resize_height = 7;
    if (has_classify_resize_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->classify_resize_height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecognizerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognizerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecognizerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
    MergeFrom(*source);
  }
}

void RecognizerConfig::MergeFrom(const RecognizerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_classify_model();
      classify_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classify_model_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_classify_net();
      classify_net_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classify_net_);
    }
    if (cached_has_bits & 0x00000010u) {
      classify_threshold_ = from.classify_threshold_;
    }
    if (cached_has_bits & 0x00000020u) {
      classify_resize_width_ = from.classify_resize_width_;
    }
    if (cached_has_bits & 0x00000040u) {
      classify_resize_height_ = from.classify_resize_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RecognizerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognizerConfig::CopyFrom(const RecognizerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognizerConfig::IsInitialized() const {
  return true;
}

void RecognizerConfig::Swap(RecognizerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecognizerConfig::InternalSwap(RecognizerConfig* other) {
  name_.Swap(&other->name_);
  version_.Swap(&other->version_);
  classify_model_.Swap(&other->classify_model_);
  classify_net_.Swap(&other->classify_net_);
  std::swap(classify_threshold_, other->classify_threshold_);
  std::swap(classify_resize_width_, other->classify_resize_width_);
  std::swap(classify_resize_height_, other->classify_resize_height_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecognizerConfig::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecognizerConfig

// optional string name = 1;
bool RecognizerConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RecognizerConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void RecognizerConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void RecognizerConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& RecognizerConfig::name() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name)
  return name_.GetNoArena();
}
void RecognizerConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name)
}
#if LANG_CXX11
void RecognizerConfig::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name)
}
#endif
void RecognizerConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name)
}
void RecognizerConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name)
}
::std::string* RecognizerConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RecognizerConfig::release_name() {
  // @@protoc_insertion_point(field_release:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecognizerConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.name)
}

// optional string version = 2;
bool RecognizerConfig::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RecognizerConfig::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void RecognizerConfig::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void RecognizerConfig::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
const ::std::string& RecognizerConfig::version() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version)
  return version_.GetNoArena();
}
void RecognizerConfig::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version)
}
#if LANG_CXX11
void RecognizerConfig::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version)
}
#endif
void RecognizerConfig::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version)
}
void RecognizerConfig::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version)
}
::std::string* RecognizerConfig::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RecognizerConfig::release_version() {
  // @@protoc_insertion_point(field_release:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecognizerConfig::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.version)
}

// optional string classify_model = 3;
bool RecognizerConfig::has_classify_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RecognizerConfig::set_has_classify_model() {
  _has_bits_[0] |= 0x00000004u;
}
void RecognizerConfig::clear_has_classify_model() {
  _has_bits_[0] &= ~0x00000004u;
}
void RecognizerConfig::clear_classify_model() {
  classify_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_classify_model();
}
const ::std::string& RecognizerConfig::classify_model() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model)
  return classify_model_.GetNoArena();
}
void RecognizerConfig::set_classify_model(const ::std::string& value) {
  set_has_classify_model();
  classify_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model)
}
#if LANG_CXX11
void RecognizerConfig::set_classify_model(::std::string&& value) {
  set_has_classify_model();
  classify_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model)
}
#endif
void RecognizerConfig::set_classify_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_classify_model();
  classify_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model)
}
void RecognizerConfig::set_classify_model(const char* value, size_t size) {
  set_has_classify_model();
  classify_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model)
}
::std::string* RecognizerConfig::mutable_classify_model() {
  set_has_classify_model();
  // @@protoc_insertion_point(field_mutable:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model)
  return classify_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RecognizerConfig::release_classify_model() {
  // @@protoc_insertion_point(field_release:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model)
  clear_has_classify_model();
  return classify_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecognizerConfig::set_allocated_classify_model(::std::string* classify_model) {
  if (classify_model != NULL) {
    set_has_classify_model();
  } else {
    clear_has_classify_model();
  }
  classify_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classify_model);
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_model)
}

// optional string classify_net = 4;
bool RecognizerConfig::has_classify_net() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RecognizerConfig::set_has_classify_net() {
  _has_bits_[0] |= 0x00000008u;
}
void RecognizerConfig::clear_has_classify_net() {
  _has_bits_[0] &= ~0x00000008u;
}
void RecognizerConfig::clear_classify_net() {
  classify_net_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_classify_net();
}
const ::std::string& RecognizerConfig::classify_net() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net)
  return classify_net_.GetNoArena();
}
void RecognizerConfig::set_classify_net(const ::std::string& value) {
  set_has_classify_net();
  classify_net_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net)
}
#if LANG_CXX11
void RecognizerConfig::set_classify_net(::std::string&& value) {
  set_has_classify_net();
  classify_net_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net)
}
#endif
void RecognizerConfig::set_classify_net(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_classify_net();
  classify_net_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net)
}
void RecognizerConfig::set_classify_net(const char* value, size_t size) {
  set_has_classify_net();
  classify_net_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net)
}
::std::string* RecognizerConfig::mutable_classify_net() {
  set_has_classify_net();
  // @@protoc_insertion_point(field_mutable:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net)
  return classify_net_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RecognizerConfig::release_classify_net() {
  // @@protoc_insertion_point(field_release:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net)
  clear_has_classify_net();
  return classify_net_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecognizerConfig::set_allocated_classify_net(::std::string* classify_net) {
  if (classify_net != NULL) {
    set_has_classify_net();
  } else {
    clear_has_classify_net();
  }
  classify_net_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classify_net);
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_net)
}

// optional float classify_threshold = 5;
bool RecognizerConfig::has_classify_threshold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RecognizerConfig::set_has_classify_threshold() {
  _has_bits_[0] |= 0x00000010u;
}
void RecognizerConfig::clear_has_classify_threshold() {
  _has_bits_[0] &= ~0x00000010u;
}
void RecognizerConfig::clear_classify_threshold() {
  classify_threshold_ = 0;
  clear_has_classify_threshold();
}
float RecognizerConfig::classify_threshold() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_threshold)
  return classify_threshold_;
}
void RecognizerConfig::set_classify_threshold(float value) {
  set_has_classify_threshold();
  classify_threshold_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_threshold)
}

// optional int32 classify_resize_width = 6;
bool RecognizerConfig::has_classify_resize_width() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RecognizerConfig::set_has_classify_resize_width() {
  _has_bits_[0] |= 0x00000020u;
}
void RecognizerConfig::clear_has_classify_resize_width() {
  _has_bits_[0] &= ~0x00000020u;
}
void RecognizerConfig::clear_classify_resize_width() {
  classify_resize_width_ = 0;
  clear_has_classify_resize_width();
}
::google::protobuf::int32 RecognizerConfig::classify_resize_width() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_resize_width)
  return classify_resize_width_;
}
void RecognizerConfig::set_classify_resize_width(::google::protobuf::int32 value) {
  set_has_classify_resize_width();
  classify_resize_width_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_resize_width)
}

// optional int32 classify_resize_height = 7;
bool RecognizerConfig::has_classify_resize_height() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RecognizerConfig::set_has_classify_resize_height() {
  _has_bits_[0] |= 0x00000040u;
}
void RecognizerConfig::clear_has_classify_resize_height() {
  _has_bits_[0] &= ~0x00000040u;
}
void RecognizerConfig::clear_classify_resize_height() {
  classify_resize_height_ = 0;
  clear_has_classify_resize_height();
}
::google::protobuf::int32 RecognizerConfig::classify_resize_height() const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_resize_height)
  return classify_resize_height_;
}
void RecognizerConfig::set_classify_resize_height(::google::protobuf::int32 value) {
  set_has_classify_resize_height();
  classify_resize_height_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig.classify_resize_height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelConfigs::kRecognizerConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelConfigs::ModelConfigs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
}
ModelConfigs::ModelConfigs(const ModelConfigs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      recognizer_config_(from.recognizer_config_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
}

void ModelConfigs::SharedCtor() {
  _cached_size_ = 0;
}

ModelConfigs::~ModelConfigs() {
  // @@protoc_insertion_point(destructor:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  SharedDtor();
}

void ModelConfigs::SharedDtor() {
}

void ModelConfigs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelConfigs::descriptor() {
  protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelConfigs& ModelConfigs::default_instance() {
  protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModelConfigs* ModelConfigs::New(::google::protobuf::Arena* arena) const {
  ModelConfigs* n = new ModelConfigs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelConfigs::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  recognizer_config_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModelConfigs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig recognizer_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recognizer_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  return false;
#undef DO_
}

void ModelConfigs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig recognizer_config = 1;
  for (unsigned int i = 0, n = this->recognizer_config_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->recognizer_config(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
}

::google::protobuf::uint8* ModelConfigs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig recognizer_config = 1;
  for (unsigned int i = 0, n = this->recognizer_config_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->recognizer_config(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  return target;
}

size_t ModelConfigs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig recognizer_config = 1;
  {
    unsigned int count = this->recognizer_config_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recognizer_config(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelConfigs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelConfigs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelConfigs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
    MergeFrom(*source);
  }
}

void ModelConfigs::MergeFrom(const ModelConfigs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recognizer_config_.MergeFrom(from.recognizer_config_);
}

void ModelConfigs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelConfigs::CopyFrom(const ModelConfigs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigs::IsInitialized() const {
  return true;
}

void ModelConfigs::Swap(ModelConfigs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelConfigs::InternalSwap(ModelConfigs* other) {
  recognizer_config_.InternalSwap(&other->recognizer_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelConfigs::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fproto_2ftraffic_5flight_2frecognizer_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelConfigs

// repeated .jmc_auto.perception.traffic_light.recognizer_config.RecognizerConfig recognizer_config = 1;
int ModelConfigs::recognizer_config_size() const {
  return recognizer_config_.size();
}
void ModelConfigs::clear_recognizer_config() {
  recognizer_config_.Clear();
}
const ::jmc_auto::perception::traffic_light::recognizer_config::RecognizerConfig& ModelConfigs::recognizer_config(int index) const {
  // @@protoc_insertion_point(field_get:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs.recognizer_config)
  return recognizer_config_.Get(index);
}
::jmc_auto::perception::traffic_light::recognizer_config::RecognizerConfig* ModelConfigs::mutable_recognizer_config(int index) {
  // @@protoc_insertion_point(field_mutable:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs.recognizer_config)
  return recognizer_config_.Mutable(index);
}
::jmc_auto::perception::traffic_light::recognizer_config::RecognizerConfig* ModelConfigs::add_recognizer_config() {
  // @@protoc_insertion_point(field_add:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs.recognizer_config)
  return recognizer_config_.Add();
}
::google::protobuf::RepeatedPtrField< ::jmc_auto::perception::traffic_light::recognizer_config::RecognizerConfig >*
ModelConfigs::mutable_recognizer_config() {
  // @@protoc_insertion_point(field_mutable_list:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs.recognizer_config)
  return &recognizer_config_;
}
const ::google::protobuf::RepeatedPtrField< ::jmc_auto::perception::traffic_light::recognizer_config::RecognizerConfig >&
ModelConfigs::recognizer_config() const {
  // @@protoc_insertion_point(field_list:jmc_auto.perception.traffic_light.recognizer_config.ModelConfigs.recognizer_config)
  return recognizer_config_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace recognizer_config
}  // namespace traffic_light
}  // namespace perception
}  // namespace jmc_auto

// @@protoc_insertion_point(global_scope)
